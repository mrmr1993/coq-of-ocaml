3
Value
  (non_rec, @.,
    [
      ((temp, [ ], [ ], Type (unit)),
        Apply
          (3, Variable (3, OCaml.Pervasives.ignore),
            [
              Apply
                (3, Variable (3, Z.add),
                  [
                    Constant
                      (3,
                        Int(1));
                    Constant
                      (3,
                        Int(1))
                  ])
            ]))
    ])

5
Value
  (non_rec, @.,
    [
      ((temp_1, [ ], [ ], (Type (Z) * Type (string))),
        Tuple (5, Constant (5, Int(15)), Constant (5, String("hi"))))
    ])

5
Value
  (non_rec, @.,
    [
      ((a, [ ], [ ], _),
        Match (?, Variable (?, temp_1), [ (Tuple (a, b), Variable (?, a)) ]))
    ])

5
Value
  (non_rec, @.,
    [
      ((b, [ ], [ ], _),
        Match (?, Variable (?, temp_1), [ (Tuple (a, b), Variable (?, b)) ]))
    ])

7
Inductive a (= a_1):
  ([ ], [ (A, [ Type (Z); Type (bool) ]) ])

9
Value
  (non_rec, @.,
    [
      ((temp_2, [ ], [ ], Type (a_1)),
        Constructor (9, A, Constant (9, Int(15)), Constructor (9, true)))
    ])

9
Value
  (non_rec, @.,
    [
      ((i, [ ], [ ], _),
        Match
          (?, Variable (?, temp_2),
            [ (Constructor (A, i, j), Variable (?, i)) ]))
    ])

9
Value
  (non_rec, @.,
    [
      ((j, [ ], [ ], _),
        Match
          (?, Variable (?, temp_2),
            [ (Constructor (A, i, j), Variable (?, j)) ]))
    ])
