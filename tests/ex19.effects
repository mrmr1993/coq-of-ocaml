3 Exception (Error, error, ())

5
Value
  (non_rec, @.,
    [
      ((x1, [ ], [ ], Type (Z)),
        Match
          ((6, Effect ([ ], .)),
            Run
              ((?, Effect ([ ], .)),
                Type (OCaml/exception, Type (Ex19/error)), [ ],
                Apply
                  ((6,
                    Effect
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (Ex19/error))
                      ], .)),
                    Variable
                      ((6,
                        Effect
                          ([ ],
                            .
                              -[
                                Type
                                  (OCaml/exception,
                                    Type
                                      (Ex19/error))
                              ]-> .)),
                        OCaml/Pervasives.raise),
                    [
                      Constructor
                        ((6,
                          Effect
                            ([
                            ],
                              .)),
                          Ex19/Error,
                          Tuple
                            ((?,
                              Effect
                                ([
                                ],
                                  .))))
                    ])),
            [
              (Constructor (inl, x),
                Variable ((?, Effect ([ ], .)), Ex19/x));
              (Constructor (inr, Constructor (Ex19/Error, Tuple ())),
                Constant ((7, Effect ([ ], .)), Int(12)))
            ]))
    ])

9
Value
  (non_rec, @.,
    [
      ((x2, [ A; B ], [ (x, A) ],
        Monad ([ Type (OCaml/exception, Type (OCaml/failure)) ], B)),
        Match
          ((9, Effect ([ Type (OCaml/exception, Type (OCaml/failure)) ], .)),
            Variable ((?, Effect ([ ], .)), Ex19/x),
            [
              (Any,
                Match
                  ((10,
                    Effect
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (OCaml/failure))
                      ],
                        .)),
                    Run
                      ((?,
                        Effect
                          ([
                          ],
                            .)),
                        Type
                          (OCaml/exception,
                            Type
                              (Ex19/error)),
                        [
                        ],
                        Apply
                          ((10,
                            Effect
                              ([
                                Type
                                  (OCaml/exception,
                                    Type
                                      (Ex19/error))
                              ],
                                .)),
                            Variable
                              ((10,
                                Effect
                                  ([
                                  ],
                                    .
                                      -[
                                        Type
                                          (OCaml/exception,
                                            Type
                                              (Ex19/error))
                                      ]->
                                      .)),
                                OCaml/Pervasives.raise),
                            [
                              Constructor
                                ((10,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Ex19/Error,
                                  Tuple
                                    ((?,
                                      Effect
                                        ([
                                        ],
                                          .))))
                            ])),
                    [
                      (Constructor
                        (inl,
                          x),
                        Variable
                          ((?,
                            Effect
                              ([
                              ],
                                .)),
                            Ex19/x));
                      (Constructor
                        (inr,
                          Constructor
                            (Ex19/Error,
                              Tuple
                                ())),
                        Apply
                          ((11,
                            Effect
                              ([
                                Type
                                  (OCaml/exception,
                                    Type
                                      (OCaml/failure))
                              ],
                                .)),
                            Variable
                              ((11,
                                Effect
                                  ([
                                  ],
                                    .
                                      -[
                                        Type
                                          (OCaml/exception,
                                            Type
                                              (OCaml/failure))
                                      ]->
                                      .)),
                                OCaml/Pervasives.failwith),
                            [
                              Constant
                                ((11,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  String("arg"))
                            ]))
                    ]))
            ]))
    ])

13
Value
  (non_rec, @.,
    [
      ((x3, [ ], [ (b, Type (bool)) ],
        Monad ([ Type (OCaml/exception, Type (OCaml/failure)) ], Type (Z))),
        Match
          ((14, Effect ([ Type (OCaml/exception, Type (OCaml/failure)) ], .)),
            Run
              ((?,
                Effect
                  ([ Type (OCaml/exception, Type (OCaml/failure)) ],
                    .)),
                Type (OCaml/exception, Type (Ex19/error)), [ ],
                IfThenElse
                  ((14,
                    Effect
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (Ex19/error));
                        Type
                          (OCaml/exception,
                            Type
                              (OCaml/failure))
                      ], .)),
                    Variable ((14, Effect ([ ], .)), Ex19/b),
                    Apply
                      ((14,
                        Effect
                          ([
                            Type
                              (OCaml/exception,
                                Type
                                  (OCaml/failure))
                          ], .)),
                        Variable
                          ((14,
                            Effect
                              ([ ],
                                .
                                  -[
                                    Type
                                      (OCaml/exception,
                                        Type
                                          (OCaml/failure))
                                  ]-> .)),
                            OCaml/Pervasives.failwith),
                        [
                          Constant
                            ((14,
                              Effect
                                ([
                                ],
                                  .)),
                              String("arg"))
                        ]),
                    Apply
                      ((14,
                        Effect
                          ([
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex19/error))
                          ], .)),
                        Variable
                          ((14,
                            Effect
                              ([ ],
                                .
                                  -[
                                    Type
                                      (OCaml/exception,
                                        Type
                                          (Ex19/error))
                                  ]-> .)),
                            OCaml/Pervasives.raise),
                        [
                          Constructor
                            ((14,
                              Effect
                                ([
                                ],
                                  .)),
                              Ex19/Error,
                              Tuple
                                ((?,
                                  Effect
                                    ([
                                    ],
                                      .))))
                        ]))),
            [
              (Constructor (inl, x),
                Variable ((?, Effect ([ ], .)), Ex19/x));
              (Constructor (inr, Constructor (Ex19/Error, Tuple ())),
                Constant
                  ((15, Effect ([ ], .)),
                    Int(12)))
            ]))
    ])
