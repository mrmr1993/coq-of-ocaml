3 Exception (Error, raise_Error, ())

5
Value
  (non_rec, @.,
    [
      ((x1, [ ], [ ], Type (Z)),
        Match
          ((6, Effect ([ ], .)),
            Run
              ((?, Effect ([ ], .)), Error, [ ],
                Apply
                  ((6, Effect ([ Error ], .)),
                    Variable
                      ((6, Effect ([ ], . -[ Error ]-> .)),
                        raise_Error),
                    [ Tuple ((?, Effect ([ ], .))) ])),
            [
              (Constructor (inl, x), Variable ((?, Effect ([ ], .)), x));
              (Constructor (inr, Tuple ()),
                Constant ((7, Effect ([ ], .)), Int(12)))
            ]))
    ])

9
Value
  (non_rec, @.,
    [
      ((x2, [ A; B ], [ (x, A) ], B),
        Match
          ((?, Effect ([ OCaml.Failure ], .)),
            Variable ((?, Effect ([ ], .)), x),
            [
              (Any,
                Match
                  ((10,
                    Effect
                      ([
                        OCaml.Failure
                      ],
                        .)),
                    Run
                      ((?,
                        Effect
                          ([
                          ],
                            .)),
                        Error,
                        [
                        ],
                        Apply
                          ((10,
                            Effect
                              ([
                                Error
                              ],
                                .)),
                            Variable
                              ((10,
                                Effect
                                  ([
                                  ],
                                    .
                                      -[
                                        Error
                                      ]->
                                      .)),
                                raise_Error),
                            [
                              Tuple
                                ((?,
                                  Effect
                                    ([
                                    ],
                                      .)))
                            ])),
                    [
                      (Constructor
                        (inl,
                          x),
                        Variable
                          ((?,
                            Effect
                              ([
                              ],
                                .)),
                            x));
                      (Constructor
                        (inr,
                          Tuple
                            ()),
                        Apply
                          ((11,
                            Effect
                              ([
                                OCaml.Failure
                              ],
                                .)),
                            Variable
                              ((11,
                                Effect
                                  ([
                                  ],
                                    .
                                      -[
                                        OCaml.Failure
                                      ]->
                                      .)),
                                OCaml.Pervasives.failwith),
                            [
                              Constant
                                ((11,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  String("arg"))
                            ]))
                    ]))
            ]))
    ])

13
Value
  (non_rec, @.,
    [
      ((x3, [ ], [ (b, Type (bool)) ], Type (Z)),
        Match
          ((14, Effect ([ OCaml.Failure ], .)),
            Run
              ((?, Effect ([ OCaml.Failure ], .)), Error, [ ],
                IfThenElse
                  ((14, Effect ([ Error; OCaml.Failure ], .)),
                    Variable ((14, Effect ([ ], .)), b),
                    Apply
                      ((14, Effect ([ OCaml.Failure ], .)),
                        Variable
                          ((14,
                            Effect
                              ([ ],
                                . -[ OCaml.Failure ]->
                                  .)),
                            OCaml.Pervasives.failwith),
                        [
                          Constant
                            ((14,
                              Effect
                                ([
                                ],
                                  .)),
                              String("arg"))
                        ]),
                    Apply
                      ((14, Effect ([ Error ], .)),
                        Variable
                          ((14,
                            Effect ([ ], . -[ Error ]-> .)),
                            raise_Error),
                        [ Tuple ((?, Effect ([ ], .))) ]))),
            [
              (Constructor (inl, x), Variable ((?, Effect ([ ], .)), x));
              (Constructor (inr, Tuple ()),
                Constant
                  ((15, Effect ([ ], .)),
                    Int(12)))
            ]))
    ])
