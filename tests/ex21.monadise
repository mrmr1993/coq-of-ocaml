3
Value
  (non_rec, @.,
    [
      ((f, [ A; B; C ], [ (x, A) ],
        Monad ([ IO ], (B -> Monad ([ OCaml.Failure ], C)))),
        Bind
          (?,
            Apply
              (4, Variable (4, OCaml.Pervasives.print_string),
                [ Constant (4, String("Hi")) ]), None,
            Return
              (?,
                Function
                  (5, y,
                    Apply
                      (5,
                        Variable
                          (5, OCaml.Pervasives.failwith),
                        [ Constant (5, String("Bye")) ])))))
    ])

7
Value
  (non_rec, @.,
    [
      ((r, [ A; B ], [ (x, A) ], Monad ([ IO; OCaml.Failure ], B)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          IO
                        ],
                        [
                          IO;
                          OCaml.Failure
                        ],
                        Apply
                          (7,
                            Variable
                              (7,
                                f),
                            [
                              Constant
                                (7,
                                  Int(1))
                            ])),
                    Some
                      x_1,
                    Lift
                      (?,
                        [
                          OCaml.Failure
                        ],
                        [
                          IO;
                          OCaml.Failure
                        ],
                        Apply
                          (7,
                            Variable
                              (?,
                                x_1),
                            [
                              Constant
                                (7,
                                  Int(2))
                            ]))))
            ]))
    ])
