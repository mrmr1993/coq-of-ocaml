Require [ OCaml.List ]

2
Value
  (non_rec, @.,
    [
      ((slow_div, [ ], [ (a, Type (Z)); (b, Type (Z)) ],
        Monad
          ([
            Type (OCaml.Effect.State.state, Type (Z));
            Type (Counter);
            Type (NonTermination)
          ], Type (Z))),
        Bind
          (?,
            Lift
              (?, [ Type (OCaml.Effect.State.state, Type (Z)) ],
                [
                  Type (OCaml.Effect.State.state, Type (Z));
                  Type (Counter);
                  Type (NonTermination)
                ],
                Apply
                  (3, Variable (3, OCaml.Pervasives.ref),
                    [ Constant (3, Int(0)) ])), Some y,
            Bind
              (?,
                Lift
                  (?, [ Type (OCaml.Effect.State.state, Type (Z)) ],
                    [
                      Type (OCaml.Effect.State.state, Type (Z));
                      Type (Counter);
                      Type (NonTermination)
                    ],
                    Apply
                      (4, Variable (4, OCaml.Pervasives.ref),
                        [ Constant (4, Int(0)) ])), Some c,
                Bind
                  (?,
                    LetFun 5
                      (rec, @.,
                        [
                          ((while, [ ],
                            [
                              (counter,
                                Type
                                  (nat))
                            ],
                            Monad
                              ([
                                Type
                                  (OCaml.Effect.State.state,
                                    Type
                                      (Z));
                                Type
                                  (NonTermination)
                              ],
                                ())),
                            Match
                              (?,
                                Variable
                                  (?,
                                    counter),
                                [
                                  (Constructor
                                    (O),
                                    Lift
                                      (?,
                                        [
                                          Type
                                            (NonTermination)
                                        ],
                                        [
                                          Type
                                            (OCaml.Effect.State.state,
                                              Type
                                                (Z));
                                          Type
                                            (NonTermination)
                                        ],
                                        Apply
                                          (?,
                                            Variable
                                              (?,
                                                not_terminated),
                                            [
                                              Constructor
                                                (?,
                                                  tt)
                                            ])));
                                  (Constructor
                                    (S,
                                      counter),
                                    Bind
                                      (?,
                                        Lift
                                          (?,
                                            [
                                              Type
                                                (OCaml.Effect.State.state,
                                                  Type
                                                    (Z))
                                            ],
                                            [
                                              Type
                                                (OCaml.Effect.State.state,
                                                  Type
                                                    (Z));
                                              Type
                                                (NonTermination)
                                            ],
                                            Bind
                                              (?,
                                                Bind
                                                  (?,
                                                    Apply
                                                      (5,
                                                        Variable
                                                          (5,
                                                            OCaml.Effect.State.read),
                                                        [
                                                          Variable
                                                            (5,
                                                              y)
                                                        ]),
                                                    Some
                                                      x,
                                                    Return
                                                      (?,
                                                        Apply
                                                          (5,
                                                            Variable
                                                              (5,
                                                                Z.add),
                                                            [
                                                              Variable
                                                                (?,
                                                                  x);
                                                              Variable
                                                                (5,
                                                                  b)
                                                            ]))),
                                                Some
                                                  x,
                                                Return
                                                  (?,
                                                    Apply
                                                      (5,
                                                        Variable
                                                          (5,
                                                            OCaml.Pervasives.le),
                                                        [
                                                          Variable
                                                            (?,
                                                              x);
                                                          Variable
                                                            (5,
                                                              a)
                                                        ])))),
                                        Some
                                          check,
                                        IfThenElse
                                          (?,
                                            Variable
                                              (?,
                                                check),
                                            Bind
                                              (?,
                                                Lift
                                                  (?,
                                                    [
                                                      Type
                                                        (OCaml.Effect.State.state,
                                                          Type
                                                            (Z))
                                                    ],
                                                    [
                                                      Type
                                                        (OCaml.Effect.State.state,
                                                          Type
                                                            (Z));
                                                      Type
                                                        (NonTermination)
                                                    ],
                                                    Bind
                                                      (?,
                                                        Bind
                                                          (?,
                                                            Bind
                                                              (?,
                                                                Apply
                                                                  (6,
                                                                    Variable
                                                                      (6,
                                                                        OCaml.Effect.State.read),
                                                                    [
                                                                      Variable
                                                                        (6,
                                                                          y)
                                                                    ]),
                                                                Some
                                                                  x,
                                                                Return
                                                                  (?,
                                                                    Apply
                                                                      (6,
                                                                        Variable
                                                                          (6,
                                                                            Z.add),
                                                                        [
                                                                          Variable
                                                                            (?,
                                                                              x);
                                                                          Variable
                                                                            (6,
                                                                              b)
                                                                        ]))),
                                                            Some
                                                              x,
                                                            Apply
                                                              (6,
                                                                Variable
                                                                  (6,
                                                                    OCaml.Effect.State.write),
                                                                [
                                                                  Variable
                                                                    (6,
                                                                      y);
                                                                  Variable
                                                                    (?,
                                                                      x)
                                                                ])),
                                                        None,
                                                        Bind
                                                          (?,
                                                            Bind
                                                              (?,
                                                                Apply
                                                                  (7,
                                                                    Variable
                                                                      (7,
                                                                        OCaml.Effect.State.read),
                                                                    [
                                                                      Variable
                                                                        (7,
                                                                          c)
                                                                    ]),
                                                                Some
                                                                  x,
                                                                Return
                                                                  (?,
                                                                    Apply
                                                                      (7,
                                                                        Variable
                                                                          (7,
                                                                            Z.add),
                                                                        [
                                                                          Variable
                                                                            (?,
                                                                              x);
                                                                          Constant
                                                                            (7,
                                                                              Int(1))
                                                                        ]))),
                                                            Some
                                                              x,
                                                            Apply
                                                              (7,
                                                                Variable
                                                                  (7,
                                                                    OCaml.Effect.State.write),
                                                                [
                                                                  Variable
                                                                    (7,
                                                                      c);
                                                                  Variable
                                                                    (?,
                                                                      x)
                                                                ])))),
                                                None,
                                                Apply
                                                  (?,
                                                    Variable
                                                      (?,
                                                        while),
                                                    [
                                                      Variable
                                                        (?,
                                                          counter)
                                                    ])),
                                            Return
                                              (?,
                                                Constructor
                                                  (?,
                                                    tt)))))
                                ]))
                        ]) in
                    Bind
                      (?,
                        Lift
                          (?, [ Type (Counter) ],
                            [
                              Type
                                (OCaml.Effect.State.state,
                                  Type
                                    (Z));
                              Type (Counter);
                              Type (NonTermination)
                            ],
                            Apply
                              (?,
                                Variable
                                  (?, read_counter),
                                [ Constructor (?, tt) ])),
                        Some counter,
                        Lift
                          (?,
                            [
                              Type
                                (OCaml.Effect.State.state,
                                  Type
                                    (Z));
                              Type (NonTermination)
                            ],
                            [
                              Type
                                (OCaml.Effect.State.state,
                                  Type
                                    (Z));
                              Type (Counter);
                              Type (NonTermination)
                            ],
                            Apply
                              (?, Variable (?, while),
                                [
                                  Variable
                                    (?,
                                      counter)
                                ]))), None,
                    Lift
                      (?,
                        [
                          Type
                            (OCaml.Effect.State.state,
                              Type
                                (Z))
                        ],
                        [
                          Type
                            (OCaml.Effect.State.state,
                              Type
                                (Z));
                          Type (Counter);
                          Type (NonTermination)
                        ],
                        Apply
                          (9,
                            Variable
                              (9,
                                OCaml.Effect.State.read),
                            [ Variable (9, c) ]))))))
    ])

11
Value
  (non_rec, @.,
    [
      ((nested, [ ], [ (es_in, list Effect.t); (x, Type (unit)) ],
        Monad
          ([
            Type (OCaml.Effect.State.state, Type (list, Type (Z)));
            Type
              (OCaml.Effect.State.state,
                Type
                  (list,
                    Type
                      (OCaml.Effect.State.t,
                        Type
                          (list,
                            Type
                              (Z)))));
            Type (Counter);
            Type (NonTermination)
          ], Type (list, Type (Z)))),
        Match
          (11, Variable (?, x),
            [
              (Constructor (tt),
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          Type
                            (OCaml.Effect.State.state,
                              Type
                                (list,
                                  Type
                                    (Z)));
                          Type
                            (OCaml.Effect.State.state,
                              Type
                                (list,
                                  Type
                                    (OCaml.Effect.State.t,
                                      Type
                                        (list,
                                          Type
                                            (Z)))))
                        ],
                        [
                          Type
                            (OCaml.Effect.State.state,
                              Type
                                (list,
                                  Type
                                    (Z)));
                          Type
                            (OCaml.Effect.State.state,
                              Type
                                (list,
                                  Type
                                    (OCaml.Effect.State.t,
                                      Type
                                        (list,
                                          Type
                                            (Z)))));
                          Type
                            (Counter);
                          Type
                            (NonTermination)
                        ],
                        Bind
                          (?,
                            Lift
                              (?,
                                [
                                  Type
                                    (OCaml.Effect.State.state,
                                      Type
                                        (list,
                                          Type
                                            (Z)))
                                ],
                                [
                                  Type
                                    (OCaml.Effect.State.state,
                                      Type
                                        (list,
                                          Type
                                            (Z)));
                                  Type
                                    (OCaml.Effect.State.state,
                                      Type
                                        (list,
                                          Type
                                            (OCaml.Effect.State.t,
                                              Type
                                                (list,
                                                  Type
                                                    (Z)))))
                                ],
                                Bind
                                  (?,
                                    Apply
                                      (12,
                                        Variable
                                          (12,
                                            OCaml.Pervasives.ref),
                                        [
                                          Constructor
                                            (12,
                                              cons,
                                              Constant
                                                (12,
                                                  Int(1)),
                                              Constructor
                                                (12,
                                                  cons,
                                                  Constant
                                                    (12,
                                                      Int(2)),
                                                  Constructor
                                                    (12,
                                                      [])))
                                        ]),
                                    Some
                                      x_1,
                                    Bind
                                      (?,
                                        Bind
                                          (?,
                                            Apply
                                              (12,
                                                Variable
                                                  (12,
                                                    OCaml.Pervasives.ref),
                                                [
                                                  Constructor
                                                    (12,
                                                      cons,
                                                      Constant
                                                        (12,
                                                          Int(3)),
                                                      Constructor
                                                        (12,
                                                          cons,
                                                          Constant
                                                            (12,
                                                              Int(4)),
                                                          Constructor
                                                            (12,
                                                              cons,
                                                              Constant
                                                                (12,
                                                                  Int(5)),
                                                              Constructor
                                                                (12,
                                                                  []))))
                                                ]),
                                            Some
                                              x_2,
                                            Bind
                                              (?,
                                                Bind
                                                  (?,
                                                    Apply
                                                      (12,
                                                        Variable
                                                          (12,
                                                            OCaml.Pervasives.ref),
                                                        [
                                                          Constructor
                                                            (12,
                                                              cons,
                                                              Constant
                                                                (12,
                                                                  Int(6)),
                                                              Constructor
                                                                (12,
                                                                  cons,
                                                                  Constant
                                                                    (12,
                                                                      Int(7)),
                                                                  Constructor
                                                                    (12,
                                                                      [])))
                                                        ]),
                                                    Some
                                                      x_3,
                                                    Return
                                                      (?,
                                                        Constructor
                                                          (12,
                                                            cons,
                                                            Variable
                                                              (?,
                                                                x_3),
                                                            Constructor
                                                              (12,
                                                                [])))),
                                                Some
                                                  x_3,
                                                Return
                                                  (?,
                                                    Constructor
                                                      (12,
                                                        cons,
                                                        Variable
                                                          (?,
                                                            x_2),
                                                        Variable
                                                          (?,
                                                            x_3))))),
                                        Some
                                          x_2,
                                        Return
                                          (?,
                                            Constructor
                                              (12,
                                                cons,
                                                Variable
                                                  (?,
                                                    x_1),
                                                Variable
                                                  (?,
                                                    x_2)))))),
                            Some
                              x_1,
                            Lift
                              (?,
                                [
                                  Type
                                    (OCaml.Effect.State.state,
                                      Type
                                        (list,
                                          Type
                                            (OCaml.Effect.State.t,
                                              Type
                                                (list,
                                                  Type
                                                    (Z)))))
                                ],
                                [
                                  Type
                                    (OCaml.Effect.State.state,
                                      Type
                                        (list,
                                          Type
                                            (Z)));
                                  Type
                                    (OCaml.Effect.State.state,
                                      Type
                                        (list,
                                          Type
                                            (OCaml.Effect.State.t,
                                              Type
                                                (list,
                                                  Type
                                                    (Z)))))
                                ],
                                Apply
                                  (12,
                                    Variable
                                      (12,
                                        OCaml.Pervasives.ref),
                                    [
                                      Variable
                                        (?,
                                          x_1)
                                    ])))),
                    Some
                      a,
                    Bind
                      (?,
                        Lift
                          (?,
                            [
                              Type
                                (OCaml.Effect.State.state,
                                  Type
                                    (list,
                                      Type
                                        (Z)))
                            ],
                            [
                              Type
                                (OCaml.Effect.State.state,
                                  Type
                                    (list,
                                      Type
                                        (Z)));
                              Type
                                (OCaml.Effect.State.state,
                                  Type
                                    (list,
                                      Type
                                        (OCaml.Effect.State.t,
                                          Type
                                            (list,
                                              Type
                                                (Z)))));
                              Type
                                (Counter);
                              Type
                                (NonTermination)
                            ],
                            Apply
                              (13,
                                Variable
                                  (13,
                                    OCaml.Pervasives.ref),
                                [
                                  Constructor
                                    (13,
                                      [])
                                ])),
                        Some
                          b,
                        Bind
                          (?,
                            LetFun
                              14
                              (rec,
                                @.,
                                [
                                  ((while,
                                    [
                                    ],
                                    [
                                      (counter,
                                        Type
                                          (nat))
                                    ],
                                    Monad
                                      ([
                                        Type
                                          (OCaml.Effect.State.state,
                                            Type
                                              (list,
                                                Type
                                                  (Z)));
                                        Type
                                          (OCaml.Effect.State.state,
                                            Type
                                              (list,
                                                Type
                                                  (OCaml.Effect.State.t,
                                                    Type
                                                      (list,
                                                        Type
                                                          (Z)))));
                                        Type
                                          (Counter);
                                        Type
                                          (NonTermination)
                                      ],
                                        ())),
                                    Match
                                      (?,
                                        Variable
                                          (?,
                                            counter),
                                        [
                                          (Constructor
                                            (O),
                                            Lift
                                              (?,
                                                [
                                                  Type
                                                    (NonTermination)
                                                ],
                                                [
                                                  Type
                                                    (OCaml.Effect.State.state,
                                                      Type
                                                        (list,
                                                          Type
                                                            (Z)));
                                                  Type
                                                    (OCaml.Effect.State.state,
                                                      Type
                                                        (list,
                                                          Type
                                                            (OCaml.Effect.State.t,
                                                              Type
                                                                (list,
                                                                  Type
                                                                    (Z)))));
                                                  Type
                                                    (Counter);
                                                  Type
                                                    (NonTermination)
                                                ],
                                                Apply
                                                  (?,
                                                    Variable
                                                      (?,
                                                        not_terminated),
                                                    [
                                                      Constructor
                                                        (?,
                                                          tt)
                                                    ])));
                                          (Constructor
                                            (S,
                                              counter),
                                            Bind
                                              (?,
                                                Lift
                                                  (?,
                                                    [
                                                      Type
                                                        (OCaml.Effect.State.state,
                                                          Type
                                                            (list,
                                                              Type
                                                                (OCaml.Effect.State.t,
                                                                  Type
                                                                    (list,
                                                                      Type
                                                                        (Z)))))
                                                    ],
                                                    [
                                                      Type
                                                        (OCaml.Effect.State.state,
                                                          Type
                                                            (list,
                                                              Type
                                                                (Z)));
                                                      Type
                                                        (OCaml.Effect.State.state,
                                                          Type
                                                            (list,
                                                              Type
                                                                (OCaml.Effect.State.t,
                                                                  Type
                                                                    (list,
                                                                      Type
                                                                        (Z)))));
                                                      Type
                                                        (Counter);
                                                      Type
                                                        (NonTermination)
                                                    ],
                                                    Bind
                                                      (?,
                                                        Bind
                                                          (?,
                                                            Apply
                                                              (14,
                                                                Variable
                                                                  (14,
                                                                    OCaml.Effect.State.read),
                                                                [
                                                                  Variable
                                                                    (14,
                                                                      a)
                                                                ]),
                                                            Some
                                                              x_1,
                                                            Return
                                                              (?,
                                                                Apply
                                                                  (14,
                                                                    Variable
                                                                      (14,
                                                                        OCaml.List.length),
                                                                    [
                                                                      Variable
                                                                        (?,
                                                                          x_1)
                                                                    ]))),
                                                        Some
                                                          x_1,
                                                        Return
                                                          (?,
                                                            Apply
                                                              (14,
                                                                Variable
                                                                  (14,
                                                                    OCaml.Pervasives.gt),
                                                                [
                                                                  Variable
                                                                    (?,
                                                                      x_1);
                                                                  Constant
                                                                    (14,
                                                                      Int(0))
                                                                ])))),
                                                Some
                                                  check,
                                                IfThenElse
                                                  (?,
                                                    Variable
                                                      (?,
                                                        check),
                                                    Bind
                                                      (?,
                                                        Bind
                                                          (?,
                                                            Lift
                                                              (?,
                                                                [
                                                                  Type
                                                                    (OCaml.Effect.State.state,
                                                                      Type
                                                                        (list,
                                                                          Type
                                                                            (OCaml.Effect.State.t,
                                                                              Type
                                                                                (list,
                                                                                  Type
                                                                                    (Z)))))
                                                                ],
                                                                [
                                                                  Type
                                                                    (OCaml.Effect.State.state,
                                                                      Type
                                                                        (list,
                                                                          Type
                                                                            (Z)));
                                                                  Type
                                                                    (OCaml.Effect.State.state,
                                                                      Type
                                                                        (list,
                                                                          Type
                                                                            (OCaml.Effect.State.t,
                                                                              Type
                                                                                (list,
                                                                                  Type
                                                                                    (Z)))));
                                                                  Type
                                                                    (Counter);
                                                                  Type
                                                                    (NonTermination)
                                                                ],
                                                                Apply
                                                                  (15,
                                                                    Variable
                                                                      (15,
                                                                        OCaml.Effect.State.read),
                                                                    [
                                                                      Variable
                                                                        (15,
                                                                          a)
                                                                    ])),
                                                            Some
                                                              x_1,
                                                            Match
                                                              (15,
                                                                Variable
                                                                  (?,
                                                                    x_1),
                                                                [
                                                                  (Constructor
                                                                    ([]),
                                                                    Return
                                                                      (?,
                                                                        Constructor
                                                                          (16,
                                                                            tt)));
                                                                  (Constructor
                                                                    (cons,
                                                                      x,
                                                                      a'),
                                                                    Bind
                                                                      (?,
                                                                        Lift
                                                                          (?,
                                                                            [
                                                                              Type
                                                                                (OCaml.Effect.State.state,
                                                                                  Type
                                                                                    (list,
                                                                                      Type
                                                                                        (Z)));
                                                                              Type
                                                                                (Counter);
                                                                              Type
                                                                                (NonTermination)
                                                                            ],
                                                                            [
                                                                              Type
                                                                                (OCaml.Effect.State.state,
                                                                                  Type
                                                                                    (list,
                                                                                      Type
                                                                                        (Z)));
                                                                              Type
                                                                                (OCaml.Effect.State.state,
                                                                                  Type
                                                                                    (list,
                                                                                      Type
                                                                                        (OCaml.Effect.State.t,
                                                                                          Type
                                                                                            (list,
                                                                                              Type
                                                                                                (Z)))));
                                                                              Type
                                                                                (Counter);
                                                                              Type
                                                                                (NonTermination)
                                                                            ],
                                                                            LetFun
                                                                              18
                                                                              (rec,
                                                                                @.,
                                                                                [
                                                                                  ((while_1,
                                                                                    [
                                                                                    ],
                                                                                    [
                                                                                      (counter_1,
                                                                                        Type
                                                                                          (nat))
                                                                                    ],
                                                                                    Monad
                                                                                      ([
                                                                                        Type
                                                                                          (OCaml.Effect.State.state,
                                                                                            Type
                                                                                              (list,
                                                                                                Type
                                                                                                  (Z)));
                                                                                        Type
                                                                                          (NonTermination)
                                                                                      ],
                                                                                        ())),
                                                                                    Match
                                                                                      (?,
                                                                                        Variable
                                                                                          (?,
                                                                                            counter_1),
                                                                                        [
                                                                                          (Constructor
                                                                                            (O),
                                                                                            Lift
                                                                                              (?,
                                                                                                [
                                                                                                  Type
                                                                                                    (NonTermination)
                                                                                                ],
                                                                                                [
                                                                                                  Type
                                                                                                    (OCaml.Effect.State.state,
                                                                                                      Type
                                                                                                        (list,
                                                                                                          Type
                                                                                                            (Z)));
                                                                                                  Type
                                                                                                    (NonTermination)
                                                                                                ],
                                                                                                Apply
                                                                                                  (?,
                                                                                                    Variable
                                                                                                      (?,
                                                                                                        not_terminated),
                                                                                                    [
                                                                                                      Constructor
                                                                                                        (?,
                                                                                                          tt)
                                                                                                    ])));
                                                                                          (Constructor
                                                                                            (S,
                                                                                              counter_1),
                                                                                            Bind
                                                                                              (?,
                                                                                                Lift
                                                                                                  (?,
                                                                                                    [
                                                                                                      Type
                                                                                                        (OCaml.Effect.State.state,
                                                                                                          Type
                                                                                                            (list,
                                                                                                              Type
                                                                                                                (Z)))
                                                                                                    ],
                                                                                                    [
                                                                                                      Type
                                                                                                        (OCaml.Effect.State.state,
                                                                                                          Type
                                                                                                            (list,
                                                                                                              Type
                                                                                                                (Z)));
                                                                                                      Type
                                                                                                        (NonTermination)
                                                                                                    ],
                                                                                                    Bind
                                                                                                      (?,
                                                                                                        Bind
                                                                                                          (?,
                                                                                                            Apply
                                                                                                              (18,
                                                                                                                Variable
                                                                                                                  (18,
                                                                                                                    OCaml.Effect.State.read),
                                                                                                                [
                                                                                                                  Variable
                                                                                                                    (18,
                                                                                                                      x)
                                                                                                                ]),
                                                                                                            Some
                                                                                                              x_1,
                                                                                                            Return
                                                                                                              (?,
                                                                                                                Apply
                                                                                                                  (18,
                                                                                                                    Variable
                                                                                                                      (18,
                                                                                                                        OCaml.List.length),
                                                                                                                    [
                                                                                                                      Variable
                                                                                                                        (?,
                                                                                                                          x_1)
                                                                                                                    ]))),
                                                                                                        Some
                                                                                                          x_1,
                                                                                                        Return
                                                                                                          (?,
                                                                                                            Apply
                                                                                                              (18,
                                                                                                                Variable
                                                                                                                  (18,
                                                                                                                    OCaml.Pervasives.gt),
                                                                                                                [
                                                                                                                  Variable
                                                                                                                    (?,
                                                                                                                      x_1);
                                                                                                                  Constant
                                                                                                                    (18,
                                                                                                                      Int(0))
                                                                                                                ])))),
                                                                                                Some
                                                                                                  check_1,
                                                                                                IfThenElse
                                                                                                  (?,
                                                                                                    Variable
                                                                                                      (?,
                                                                                                        check_1),
                                                                                                    Bind
                                                                                                      (?,
                                                                                                        Lift
                                                                                                          (?,
                                                                                                            [
                                                                                                              Type
                                                                                                                (OCaml.Effect.State.state,
                                                                                                                  Type
                                                                                                                    (list,
                                                                                                                      Type
                                                                                                                        (Z)))
                                                                                                            ],
                                                                                                            [
                                                                                                              Type
                                                                                                                (OCaml.Effect.State.state,
                                                                                                                  Type
                                                                                                                    (list,
                                                                                                                      Type
                                                                                                                        (Z)));
                                                                                                              Type
                                                                                                                (NonTermination)
                                                                                                            ],
                                                                                                            Bind
                                                                                                              (?,
                                                                                                                Apply
                                                                                                                  (19,
                                                                                                                    Variable
                                                                                                                      (19,
                                                                                                                        OCaml.Effect.State.read),
                                                                                                                    [
                                                                                                                      Variable
                                                                                                                        (19,
                                                                                                                          x)
                                                                                                                    ]),
                                                                                                                Some
                                                                                                                  x_1,
                                                                                                                Match
                                                                                                                  (19,
                                                                                                                    Variable
                                                                                                                      (?,
                                                                                                                        x_1),
                                                                                                                    [
                                                                                                                      (Constructor
                                                                                                                        ([]),
                                                                                                                        Return
                                                                                                                          (?,
                                                                                                                            Constructor
                                                                                                                              (20,
                                                                                                                                tt)));
                                                                                                                      (Constructor
                                                                                                                        (cons,
                                                                                                                          y,
                                                                                                                          x'),
                                                                                                                        Bind
                                                                                                                          (?,
                                                                                                                            Bind
                                                                                                                              (?,
                                                                                                                                Bind
                                                                                                                                  (?,
                                                                                                                                    Apply
                                                                                                                                      (22,
                                                                                                                                        Variable
                                                                                                                                          (22,
                                                                                                                                            OCaml.Effect.State.read),
                                                                                                                                        [
                                                                                                                                          Variable
                                                                                                                                            (22,
                                                                                                                                              b)
                                                                                                                                        ]),
                                                                                                                                    Some
                                                                                                                                      x_1,
                                                                                                                                    Return
                                                                                                                                      (?,
                                                                                                                                        Constructor
                                                                                                                                          (22,
                                                                                                                                            cons,
                                                                                                                                            Variable
                                                                                                                                              (22,
                                                                                                                                                y),
                                                                                                                                            Variable
                                                                                                                                              (?,
                                                                                                                                                x_1)))),
                                                                                                                                Some
                                                                                                                                  x_1,
                                                                                                                                Apply
                                                                                                                                  (22,
                                                                                                                                    Variable
                                                                                                                                      (22,
                                                                                                                                        OCaml.Effect.State.write),
                                                                                                                                    [
                                                                                                                                      Variable
                                                                                                                                        (22,
                                                                                                                                          b);
                                                                                                                                      Variable
                                                                                                                                        (?,
                                                                                                                                          x_1)
                                                                                                                                    ])),
                                                                                                                            None,
                                                                                                                            Apply
                                                                                                                              (23,
                                                                                                                                Variable
                                                                                                                                  (23,
                                                                                                                                    OCaml.Effect.State.write),
                                                                                                                                [
                                                                                                                                  Variable
                                                                                                                                    (23,
                                                                                                                                      x);
                                                                                                                                  Variable
                                                                                                                                    (23,
                                                                                                                                      x')
                                                                                                                                ])))
                                                                                                                    ]))),
                                                                                                        None,
                                                                                                        Apply
                                                                                                          (?,
                                                                                                            Variable
                                                                                                              (?,
                                                                                                                while_1),
                                                                                                            [
                                                                                                              Variable
                                                                                                                (?,
                                                                                                                  counter_1)
                                                                                                            ])),
                                                                                                    Return
                                                                                                      (?,
                                                                                                        Constructor
                                                                                                          (?,
                                                                                                            tt)))))
                                                                                        ]))
                                                                                ])
                                                                              in
                                                                            Bind
                                                                              (?,
                                                                                Lift
                                                                                  (?,
                                                                                    [
                                                                                      Type
                                                                                        (Counter)
                                                                                    ],
                                                                                    [
                                                                                      Type
                                                                                        (OCaml.Effect.State.state,
                                                                                          Type
                                                                                            (list,
                                                                                              Type
                                                                                                (Z)));
                                                                                      Type
                                                                                        (Counter);
                                                                                      Type
                                                                                        (NonTermination)
                                                                                    ],
                                                                                    Apply
                                                                                      (?,
                                                                                        Variable
                                                                                          (?,
                                                                                            read_counter),
                                                                                        [
                                                                                          Constructor
                                                                                            (?,
                                                                                              tt)
                                                                                        ])),
                                                                                Some
                                                                                  counter_1,
                                                                                Lift
                                                                                  (?,
                                                                                    [
                                                                                      Type
                                                                                        (OCaml.Effect.State.state,
                                                                                          Type
                                                                                            (list,
                                                                                              Type
                                                                                                (Z)));
                                                                                      Type
                                                                                        (NonTermination)
                                                                                    ],
                                                                                    [
                                                                                      Type
                                                                                        (OCaml.Effect.State.state,
                                                                                          Type
                                                                                            (list,
                                                                                              Type
                                                                                                (Z)));
                                                                                      Type
                                                                                        (Counter);
                                                                                      Type
                                                                                        (NonTermination)
                                                                                    ],
                                                                                    Apply
                                                                                      (?,
                                                                                        Variable
                                                                                          (?,
                                                                                            while_1),
                                                                                        [
                                                                                          Variable
                                                                                            (?,
                                                                                              counter_1)
                                                                                        ])))),
                                                                        None,
                                                                        Lift
                                                                          (?,
                                                                            [
                                                                              Type
                                                                                (OCaml.Effect.State.state,
                                                                                  Type
                                                                                    (list,
                                                                                      Type
                                                                                        (OCaml.Effect.State.t,
                                                                                          Type
                                                                                            (list,
                                                                                              Type
                                                                                                (Z)))))
                                                                            ],
                                                                            [
                                                                              Type
                                                                                (OCaml.Effect.State.state,
                                                                                  Type
                                                                                    (list,
                                                                                      Type
                                                                                        (Z)));
                                                                              Type
                                                                                (OCaml.Effect.State.state,
                                                                                  Type
                                                                                    (list,
                                                                                      Type
                                                                                        (OCaml.Effect.State.t,
                                                                                          Type
                                                                                            (list,
                                                                                              Type
                                                                                                (Z)))));
                                                                              Type
                                                                                (Counter);
                                                                              Type
                                                                                (NonTermination)
                                                                            ],
                                                                            Apply
                                                                              (25,
                                                                                Variable
                                                                                  (25,
                                                                                    OCaml.Effect.State.write),
                                                                                [
                                                                                  Variable
                                                                                    (25,
                                                                                      a);
                                                                                  Variable
                                                                                    (25,
                                                                                      a')
                                                                                ]))))
                                                                ])),
                                                        None,
                                                        Apply
                                                          (?,
                                                            Variable
                                                              (?,
                                                                while),
                                                            [
                                                              Variable
                                                                (?,
                                                                  counter)
                                                            ])),
                                                    Return
                                                      (?,
                                                        Constructor
                                                          (?,
                                                            tt)))))
                                        ]))
                                ])
                              in
                            Bind
                              (?,
                                Lift
                                  (?,
                                    [
                                      Type
                                        (Counter)
                                    ],
                                    [
                                      Type
                                        (OCaml.Effect.State.state,
                                          Type
                                            (list,
                                              Type
                                                (Z)));
                                      Type
                                        (OCaml.Effect.State.state,
                                          Type
                                            (list,
                                              Type
                                                (OCaml.Effect.State.t,
                                                  Type
                                                    (list,
                                                      Type
                                                        (Z)))));
                                      Type
                                        (Counter);
                                      Type
                                        (NonTermination)
                                    ],
                                    Apply
                                      (?,
                                        Variable
                                          (?,
                                            read_counter),
                                        [
                                          Constructor
                                            (?,
                                              tt)
                                        ])),
                                Some
                                  counter,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        while),
                                    [
                                      Variable
                                        (?,
                                          counter)
                                    ])),
                            None,
                            Lift
                              (?,
                                [
                                  Type
                                    (OCaml.Effect.State.state,
                                      Type
                                        (list,
                                          Type
                                            (Z)))
                                ],
                                [
                                  Type
                                    (OCaml.Effect.State.state,
                                      Type
                                        (list,
                                          Type
                                            (Z)));
                                  Type
                                    (OCaml.Effect.State.state,
                                      Type
                                        (list,
                                          Type
                                            (OCaml.Effect.State.t,
                                              Type
                                                (list,
                                                  Type
                                                    (Z)))));
                                  Type
                                    (Counter);
                                  Type
                                    (NonTermination)
                                ],
                                Apply
                                  (27,
                                    Variable
                                      (27,
                                        OCaml.Effect.State.read),
                                    [
                                      Variable
                                        (27,
                                          b)
                                    ]))))))
            ]))
    ])

29
Value
  (non_rec, @.,
    [
      ((raises, [ ], [ (b, Type (bool)) ],
        Monad
          ([ Type (Counter); Type (NonTermination); Type (OCaml.Failure) ],
            Type (unit))),
        LetFun 30
          (rec, @.,
            [
              ((while, [ ], [ (counter, Type (nat)) ],
                Monad
                  ([
                    Type
                      (NonTermination);
                    Type
                      (OCaml.Failure)
                  ], ())),
                Match
                  (?,
                    Variable
                      (?,
                        counter),
                    [
                      (Constructor
                        (O),
                        Lift
                          (?,
                            [
                              Type
                                (NonTermination)
                            ],
                            [
                              Type
                                (NonTermination);
                              Type
                                (OCaml.Failure)
                            ],
                            Apply
                              (?,
                                Variable
                                  (?,
                                    not_terminated),
                                [
                                  Constructor
                                    (?,
                                      tt)
                                ])));
                      (Constructor
                        (S,
                          counter),
                        LetVar
                          ?
                          check
                          =
                          Variable
                            (30,
                              b)
                          in
                        IfThenElse
                          (?,
                            Variable
                              (?,
                                check),
                            Bind
                              (?,
                                Lift
                                  (?,
                                    [
                                      Type
                                        (OCaml.Failure)
                                    ],
                                    [
                                      Type
                                        (NonTermination);
                                      Type
                                        (OCaml.Failure)
                                    ],
                                    Coerce
                                      (?,
                                        Apply
                                          (31,
                                            Variable
                                              (31,
                                                OCaml.Pervasives.failwith),
                                            [
                                              Constant
                                                (31,
                                                  String("b is true"))
                                            ]),
                                        Monad
                                          ([
                                            Type
                                              (OCaml.Failure)
                                          ],
                                            ()))),
                                None,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        while),
                                    [
                                      Variable
                                        (?,
                                          counter)
                                    ])),
                            Return
                              (?,
                                Constructor
                                  (?,
                                    tt))))
                    ]))
            ]) in
        Bind
          (?,
            Lift
              (?, [ Type (Counter) ],
                [
                  Type (Counter);
                  Type (NonTermination);
                  Type (OCaml.Failure)
                ],
                Apply
                  (?, Variable (?, read_counter),
                    [ Constructor (?, tt) ])), Some counter,
            Lift
              (?, [ Type (NonTermination); Type (OCaml.Failure) ],
                [
                  Type (Counter);
                  Type (NonTermination);
                  Type (OCaml.Failure)
                ],
                Apply
                  (?, Variable (?, while), [ Variable (?, counter) ]))))
    ])

34
Value
  (non_rec, @.,
    [
      ((complex_raises, [ ], [ (b, Type (bool)) ],
        Monad
          ([ Type (Counter); Type (NonTermination); Type (OCaml.Failure) ],
            Type (unit))),
        LetFun 35
          (non_rec, @.,
            [
              ((f, [ A; B ], [ (a, A) ],
                Monad
                  ([
                    Type
                      (OCaml.Failure)
                  ], (A * Type (Z) * B))),
                Bind
                  (?,
                    Apply
                      (35,
                        Variable
                          (35,
                            OCaml.Pervasives.failwith),
                        [
                          Constant
                            (35,
                              String("b is true"))
                        ]),
                    Some
                      x,
                    Return
                      (?,
                        Tuple
                          (35,
                            Variable
                              (35,
                                a),
                            Constant
                              (35,
                                Int(15)),
                            Variable
                              (?,
                                x)))))
            ]) in
        LetFun 36
          (rec, @.,
            [
              ((while, [ ], [ (counter, Type (nat)) ],
                Monad
                  ([
                    Type
                      (NonTermination);
                    Type
                      (OCaml.Failure)
                  ], ())),
                Match
                  (?,
                    Variable
                      (?,
                        counter),
                    [
                      (Constructor
                        (O),
                        Lift
                          (?,
                            [
                              Type
                                (NonTermination)
                            ],
                            [
                              Type
                                (NonTermination);
                              Type
                                (OCaml.Failure)
                            ],
                            Apply
                              (?,
                                Variable
                                  (?,
                                    not_terminated),
                                [
                                  Constructor
                                    (?,
                                      tt)
                                ])));
                      (Constructor
                        (S,
                          counter),
                        LetVar
                          ?
                          check
                          =
                          Variable
                            (36,
                              b)
                          in
                        IfThenElse
                          (?,
                            Variable
                              (?,
                                check),
                            Bind
                              (?,
                                Lift
                                  (?,
                                    [
                                      Type
                                        (OCaml.Failure)
                                    ],
                                    [
                                      Type
                                        (NonTermination);
                                      Type
                                        (OCaml.Failure)
                                    ],
                                    Coerce
                                      (?,
                                        Apply
                                          (37,
                                            Variable
                                              (37,
                                                f),
                                            [
                                              Constructor
                                                (37,
                                                  true)
                                            ]),
                                        Monad
                                          ([
                                            Type
                                              (OCaml.Failure)
                                          ],
                                            (Type
                                              (bool)
                                              *
                                              Type
                                                (Z)
                                              *
                                              ())))),
                                None,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        while),
                                    [
                                      Variable
                                        (?,
                                          counter)
                                    ])),
                            Return
                              (?,
                                Constructor
                                  (?,
                                    tt))))
                    ]))
            ]) in
        Bind
          (?,
            Lift
              (?, [ Type (Counter) ],
                [
                  Type (Counter);
                  Type (NonTermination);
                  Type (OCaml.Failure)
                ],
                Apply
                  (?, Variable (?, read_counter),
                    [ Constructor (?, tt) ])), Some counter,
            Lift
              (?, [ Type (NonTermination); Type (OCaml.Failure) ],
                [
                  Type (Counter);
                  Type (NonTermination);
                  Type (OCaml.Failure)
                ],
                Apply
                  (?, Variable (?, while), [ Variable (?, counter) ]))))
    ])

40
Value
  (non_rec, @.,
    [
      ((argument_effects, [ ],
        [ (x, Type (OCaml.Effect.State.t, Type (Z))); (y, Type (Z)) ],
        Monad
          ([
            Type (OCaml.Effect.State.state, Type (Z));
            Type (Counter);
            Type (NonTermination)
          ], Type (Z))),
        Bind
          (?,
            Lift
              (?, [ Type (OCaml.Effect.State.state, Type (Z)) ],
                [
                  Type (OCaml.Effect.State.state, Type (Z));
                  Type (Counter);
                  Type (NonTermination)
                ],
                Apply
                  (41, Variable (41, OCaml.Pervasives.ref),
                    [ Variable (41, y) ])), Some y,
            Bind
              (?,
                Lift
                  (?, [ Type (OCaml.Effect.State.state, Type (Z)) ],
                    [
                      Type (OCaml.Effect.State.state, Type (Z));
                      Type (Counter);
                      Type (NonTermination)
                    ],
                    Apply
                      (42, Variable (42, OCaml.Pervasives.ref),
                        [ Constant (42, Int(0)) ])), Some z,
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          Type
                            (OCaml.Effect.State.state,
                              Type
                                (Z))
                        ],
                        [
                          Type
                            (OCaml.Effect.State.state,
                              Type
                                (Z));
                          Type (Counter);
                          Type (NonTermination)
                        ],
                        Apply
                          (43,
                            Variable
                              (43, OCaml.Pervasives.ref),
                            [ Constant (43, Int(0)) ])),
                    Some i,
                    Bind
                      (?,
                        LetFun 44
                          (rec, @.,
                            [
                              ((while, [ ],
                                [
                                  (counter,
                                    Type
                                      (nat))
                                ],
                                Monad
                                  ([
                                    Type
                                      (OCaml.Effect.State.state,
                                        Type
                                          (Z));
                                    Type
                                      (Counter);
                                    Type
                                      (NonTermination)
                                  ],
                                    ())),
                                Match
                                  (?,
                                    Variable
                                      (?,
                                        counter),
                                    [
                                      (Constructor
                                        (O),
                                        Lift
                                          (?,
                                            [
                                              Type
                                                (NonTermination)
                                            ],
                                            [
                                              Type
                                                (OCaml.Effect.State.state,
                                                  Type
                                                    (Z));
                                              Type
                                                (Counter);
                                              Type
                                                (NonTermination)
                                            ],
                                            Apply
                                              (?,
                                                Variable
                                                  (?,
                                                    not_terminated),
                                                [
                                                  Constructor
                                                    (?,
                                                      tt)
                                                ])));
                                      (Constructor
                                        (S,
                                          counter),
                                        Bind
                                          (?,
                                            Lift
                                              (?,
                                                [
                                                  Type
                                                    (OCaml.Effect.State.state,
                                                      Type
                                                        (Z))
                                                ],
                                                [
                                                  Type
                                                    (OCaml.Effect.State.state,
                                                      Type
                                                        (Z));
                                                  Type
                                                    (Counter);
                                                  Type
                                                    (NonTermination)
                                                ],
                                                Bind
                                                  (?,
                                                    Apply
                                                      (44,
                                                        Variable
                                                          (44,
                                                            OCaml.Effect.State.read),
                                                        [
                                                          Variable
                                                            (44,
                                                              i)
                                                        ]),
                                                    Some
                                                      x_1,
                                                    Bind
                                                      (?,
                                                        Apply
                                                          (44,
                                                            Variable
                                                              (44,
                                                                OCaml.Effect.State.read),
                                                            [
                                                              Variable
                                                                (44,
                                                                  x)
                                                            ]),
                                                        Some
                                                          x_2,
                                                        Return
                                                          (?,
                                                            Apply
                                                              (44,
                                                                Variable
                                                                  (44,
                                                                    OCaml.Pervasives.le),
                                                                [
                                                                  Variable
                                                                    (?,
                                                                      x_1);
                                                                  Variable
                                                                    (?,
                                                                      x_2)
                                                                ]))))),
                                            Some
                                              check,
                                            IfThenElse
                                              (?,
                                                Variable
                                                  (?,
                                                    check),
                                                Bind
                                                  (?,
                                                    Bind
                                                      (?,
                                                        Lift
                                                          (?,
                                                            [
                                                              Type
                                                                (OCaml.Effect.State.state,
                                                                  Type
                                                                    (Z))
                                                            ],
                                                            [
                                                              Type
                                                                (OCaml.Effect.State.state,
                                                                  Type
                                                                    (Z));
                                                              Type
                                                                (Counter);
                                                              Type
                                                                (NonTermination)
                                                            ],
                                                            Apply
                                                              (45,
                                                                Variable
                                                                  (45,
                                                                    OCaml.Pervasives.ref),
                                                                [
                                                                  Constant
                                                                    (45,
                                                                      Int(0))
                                                                ])),
                                                        Some
                                                          j,
                                                        Bind
                                                          (?,
                                                            LetFun
                                                              46
                                                              (rec,
                                                                @.,
                                                                [
                                                                  ((while_1,
                                                                    [
                                                                    ],
                                                                    [
                                                                      (counter_1,
                                                                        Type
                                                                          (nat))
                                                                    ],
                                                                    Monad
                                                                      ([
                                                                        Type
                                                                          (OCaml.Effect.State.state,
                                                                            Type
                                                                              (Z));
                                                                        Type
                                                                          (NonTermination)
                                                                      ],
                                                                        ())),
                                                                    Match
                                                                      (?,
                                                                        Variable
                                                                          (?,
                                                                            counter_1),
                                                                        [
                                                                          (Constructor
                                                                            (O),
                                                                            Lift
                                                                              (?,
                                                                                [
                                                                                  Type
                                                                                    (NonTermination)
                                                                                ],
                                                                                [
                                                                                  Type
                                                                                    (OCaml.Effect.State.state,
                                                                                      Type
                                                                                        (Z));
                                                                                  Type
                                                                                    (NonTermination)
                                                                                ],
                                                                                Apply
                                                                                  (?,
                                                                                    Variable
                                                                                      (?,
                                                                                        not_terminated),
                                                                                    [
                                                                                      Constructor
                                                                                        (?,
                                                                                          tt)
                                                                                    ])));
                                                                          (Constructor
                                                                            (S,
                                                                              counter_1),
                                                                            Bind
                                                                              (?,
                                                                                Lift
                                                                                  (?,
                                                                                    [
                                                                                      Type
                                                                                        (OCaml.Effect.State.state,
                                                                                          Type
                                                                                            (Z))
                                                                                    ],
                                                                                    [
                                                                                      Type
                                                                                        (OCaml.Effect.State.state,
                                                                                          Type
                                                                                            (Z));
                                                                                      Type
                                                                                        (NonTermination)
                                                                                    ],
                                                                                    Bind
                                                                                      (?,
                                                                                        Apply
                                                                                          (46,
                                                                                            Variable
                                                                                              (46,
                                                                                                OCaml.Effect.State.read),
                                                                                            [
                                                                                              Variable
                                                                                                (46,
                                                                                                  j)
                                                                                            ]),
                                                                                        Some
                                                                                          x_1,
                                                                                        Bind
                                                                                          (?,
                                                                                            Apply
                                                                                              (46,
                                                                                                Variable
                                                                                                  (46,
                                                                                                    OCaml.Effect.State.read),
                                                                                                [
                                                                                                  Variable
                                                                                                    (46,
                                                                                                      y)
                                                                                                ]),
                                                                                            Some
                                                                                              x_2,
                                                                                            Return
                                                                                              (?,
                                                                                                Apply
                                                                                                  (46,
                                                                                                    Variable
                                                                                                      (46,
                                                                                                        OCaml.Pervasives.le),
                                                                                                    [
                                                                                                      Variable
                                                                                                        (?,
                                                                                                          x_1);
                                                                                                      Variable
                                                                                                        (?,
                                                                                                          x_2)
                                                                                                    ]))))),
                                                                                Some
                                                                                  check_1,
                                                                                IfThenElse
                                                                                  (?,
                                                                                    Variable
                                                                                      (?,
                                                                                        check_1),
                                                                                    Bind
                                                                                      (?,
                                                                                        Lift
                                                                                          (?,
                                                                                            [
                                                                                              Type
                                                                                                (OCaml.Effect.State.state,
                                                                                                  Type
                                                                                                    (Z))
                                                                                            ],
                                                                                            [
                                                                                              Type
                                                                                                (OCaml.Effect.State.state,
                                                                                                  Type
                                                                                                    (Z));
                                                                                              Type
                                                                                                (NonTermination)
                                                                                            ],
                                                                                            Bind
                                                                                              (?,
                                                                                                Bind
                                                                                                  (?,
                                                                                                    Bind
                                                                                                      (?,
                                                                                                        Apply
                                                                                                          (47,
                                                                                                            Variable
                                                                                                              (47,
                                                                                                                OCaml.Effect.State.read),
                                                                                                            [
                                                                                                              Variable
                                                                                                                (47,
                                                                                                                  z)
                                                                                                            ]),
                                                                                                        Some
                                                                                                          x_1,
                                                                                                        Return
                                                                                                          (?,
                                                                                                            Apply
                                                                                                              (47,
                                                                                                                Variable
                                                                                                                  (47,
                                                                                                                    Z.add),
                                                                                                                [
                                                                                                                  Variable
                                                                                                                    (?,
                                                                                                                      x_1);
                                                                                                                  Constant
                                                                                                                    (47,
                                                                                                                      Int(1))
                                                                                                                ]))),
                                                                                                    Some
                                                                                                      x_1,
                                                                                                    Apply
                                                                                                      (47,
                                                                                                        Variable
                                                                                                          (47,
                                                                                                            OCaml.Effect.State.write),
                                                                                                        [
                                                                                                          Variable
                                                                                                            (47,
                                                                                                              z);
                                                                                                          Variable
                                                                                                            (?,
                                                                                                              x_1)
                                                                                                        ])),
                                                                                                None,
                                                                                                Bind
                                                                                                  (?,
                                                                                                    Bind
                                                                                                      (?,
                                                                                                        Apply
                                                                                                          (48,
                                                                                                            Variable
                                                                                                              (48,
                                                                                                                OCaml.Effect.State.read),
                                                                                                            [
                                                                                                              Variable
                                                                                                                (48,
                                                                                                                  j)
                                                                                                            ]),
                                                                                                        Some
                                                                                                          x_1,
                                                                                                        Return
                                                                                                          (?,
                                                                                                            Apply
                                                                                                              (48,
                                                                                                                Variable
                                                                                                                  (48,
                                                                                                                    Z.add),
                                                                                                                [
                                                                                                                  Variable
                                                                                                                    (?,
                                                                                                                      x_1);
                                                                                                                  Constant
                                                                                                                    (48,
                                                                                                                      Int(1))
                                                                                                                ]))),
                                                                                                    Some
                                                                                                      x_1,
                                                                                                    Apply
                                                                                                      (48,
                                                                                                        Variable
                                                                                                          (48,
                                                                                                            OCaml.Effect.State.write),
                                                                                                        [
                                                                                                          Variable
                                                                                                            (48,
                                                                                                              j);
                                                                                                          Variable
                                                                                                            (?,
                                                                                                              x_1)
                                                                                                        ])))),
                                                                                        None,
                                                                                        Apply
                                                                                          (?,
                                                                                            Variable
                                                                                              (?,
                                                                                                while_1),
                                                                                            [
                                                                                              Variable
                                                                                                (?,
                                                                                                  counter_1)
                                                                                            ])),
                                                                                    Return
                                                                                      (?,
                                                                                        Constructor
                                                                                          (?,
                                                                                            tt)))))
                                                                        ]))
                                                                ])
                                                              in
                                                            Bind
                                                              (?,
                                                                Lift
                                                                  (?,
                                                                    [
                                                                      Type
                                                                        (Counter)
                                                                    ],
                                                                    [
                                                                      Type
                                                                        (OCaml.Effect.State.state,
                                                                          Type
                                                                            (Z));
                                                                      Type
                                                                        (Counter);
                                                                      Type
                                                                        (NonTermination)
                                                                    ],
                                                                    Apply
                                                                      (?,
                                                                        Variable
                                                                          (?,
                                                                            read_counter),
                                                                        [
                                                                          Constructor
                                                                            (?,
                                                                              tt)
                                                                        ])),
                                                                Some
                                                                  counter_1,
                                                                Lift
                                                                  (?,
                                                                    [
                                                                      Type
                                                                        (OCaml.Effect.State.state,
                                                                          Type
                                                                            (Z));
                                                                      Type
                                                                        (NonTermination)
                                                                    ],
                                                                    [
                                                                      Type
                                                                        (OCaml.Effect.State.state,
                                                                          Type
                                                                            (Z));
                                                                      Type
                                                                        (Counter);
                                                                      Type
                                                                        (NonTermination)
                                                                    ],
                                                                    Apply
                                                                      (?,
                                                                        Variable
                                                                          (?,
                                                                            while_1),
                                                                        [
                                                                          Variable
                                                                            (?,
                                                                              counter_1)
                                                                        ]))),
                                                            None,
                                                            Lift
                                                              (?,
                                                                [
                                                                  Type
                                                                    (OCaml.Effect.State.state,
                                                                      Type
                                                                        (Z))
                                                                ],
                                                                [
                                                                  Type
                                                                    (OCaml.Effect.State.state,
                                                                      Type
                                                                        (Z));
                                                                  Type
                                                                    (Counter);
                                                                  Type
                                                                    (NonTermination)
                                                                ],
                                                                Bind
                                                                  (?,
                                                                    Bind
                                                                      (?,
                                                                        Bind
                                                                          (?,
                                                                            Apply
                                                                              (50,
                                                                                Variable
                                                                                  (50,
                                                                                    OCaml.Effect.State.read),
                                                                                [
                                                                                  Variable
                                                                                    (50,
                                                                                      y)
                                                                                ]),
                                                                            Some
                                                                              x_1,
                                                                            Return
                                                                              (?,
                                                                                Apply
                                                                                  (50,
                                                                                    Variable
                                                                                      (50,
                                                                                        Z.sub),
                                                                                    [
                                                                                      Variable
                                                                                        (?,
                                                                                          x_1);
                                                                                      Constant
                                                                                        (50,
                                                                                          Int(1))
                                                                                    ]))),
                                                                        Some
                                                                          x_1,
                                                                        Apply
                                                                          (50,
                                                                            Variable
                                                                              (50,
                                                                                OCaml.Effect.State.write),
                                                                            [
                                                                              Variable
                                                                                (50,
                                                                                  y);
                                                                              Variable
                                                                                (?,
                                                                                  x_1)
                                                                            ])),
                                                                    None,
                                                                    Bind
                                                                      (?,
                                                                        Bind
                                                                          (?,
                                                                            Apply
                                                                              (51,
                                                                                Variable
                                                                                  (51,
                                                                                    OCaml.Effect.State.read),
                                                                                [
                                                                                  Variable
                                                                                    (51,
                                                                                      i)
                                                                                ]),
                                                                            Some
                                                                              x_1,
                                                                            Return
                                                                              (?,
                                                                                Apply
                                                                                  (51,
                                                                                    Variable
                                                                                      (51,
                                                                                        Z.add),
                                                                                    [
                                                                                      Variable
                                                                                        (?,
                                                                                          x_1);
                                                                                      Constant
                                                                                        (51,
                                                                                          Int(1))
                                                                                    ]))),
                                                                        Some
                                                                          x_1,
                                                                        Apply
                                                                          (51,
                                                                            Variable
                                                                              (51,
                                                                                OCaml.Effect.State.write),
                                                                            [
                                                                              Variable
                                                                                (51,
                                                                                  i);
                                                                              Variable
                                                                                (?,
                                                                                  x_1)
                                                                            ])))))),
                                                    None,
                                                    Apply
                                                      (?,
                                                        Variable
                                                          (?,
                                                            while),
                                                        [
                                                          Variable
                                                            (?,
                                                              counter)
                                                        ])),
                                                Return
                                                  (?,
                                                    Constructor
                                                      (?,
                                                        tt)))))
                                    ]))
                            ]) in
                        Bind
                          (?,
                            Lift
                              (?, [ Type (Counter) ],
                                [
                                  Type
                                    (OCaml.Effect.State.state,
                                      Type
                                        (Z));
                                  Type (Counter);
                                  Type
                                    (NonTermination)
                                ],
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        read_counter),
                                    [
                                      Constructor
                                        (?,
                                          tt)
                                    ])),
                            Some counter,
                            Apply
                              (?, Variable (?, while),
                                [
                                  Variable
                                    (?,
                                      counter)
                                ])), None,
                        Lift
                          (?,
                            [
                              Type
                                (OCaml.Effect.State.state,
                                  Type
                                    (Z))
                            ],
                            [
                              Type
                                (OCaml.Effect.State.state,
                                  Type
                                    (Z));
                              Type (Counter);
                              Type (NonTermination)
                            ],
                            Apply
                              (53,
                                Variable
                                  (53,
                                    OCaml.Effect.State.read),
                                [ Variable (53, z) ])))))))
    ])
