3 Exception (Outside, raise_Outside, ())

5
Value
  (non_rec, @.,
    [
      ((f, [ A; B ], [ (x, A) ], Monad ([ Type (Outside) ], B)),
        Apply (5, Variable (5, raise_Outside), [ Tuple (?) ]))
    ])

7 Module G:
  8 Exception (Inside, raise_Inside, (Type (Z) * Type (string)))
  
  10
  Value
    (non_rec, @.,
      [
        ((g, [ A ], [ (b, Type (bool)) ],
          Monad ([ Type (Outside); Type (G/Inside) ], A)),
          IfThenElse
            (11, Variable (11, G/b),
              Lift
                (?, [ Type (G/Inside) ],
                  [ Type (Outside); Type (G/Inside) ],
                  Apply
                    (12, Variable (12, G/raise_Inside),
                      [
                        Tuple
                          (?,
                            Constant
                              (12,
                                Int(12)),
                            Constant
                              (12,
                                String("no")))
                      ])),
              Lift
                (?, [ Type (Outside) ],
                  [ Type (Outside); Type (G/Inside) ],
                  Apply
                    (14, Variable (14, raise_Outside),
                      [ Tuple (?) ]))))
      ])

17
Value
  (rec, @.,
    [
      ((h_rec, [ A; B ], [ (counter, Type (nat)); (l, Type (list, A)) ],
        Monad
          ([
            Type (IO);
            Type (NonTermination);
            Type (Outside);
            Type (G.Inside)
          ], B)),
        Match
          (?, Variable (?, counter),
            [
              (Constructor (O),
                Lift
                  (?,
                    [
                      Type
                        (NonTermination)
                    ],
                    [
                      Type
                        (IO);
                      Type
                        (NonTermination);
                      Type
                        (Outside);
                      Type
                        (G.Inside)
                    ],
                    Apply
                      (?,
                        Variable
                          (?,
                            not_terminated),
                        [
                          Tuple
                            (?)
                        ])));
              (Constructor (S, counter),
                Match
                  (18, Variable (18, l),
                    [
                      (Constructor
                        ([]),
                        Lift
                          (?,
                            [
                              Type
                                (IO);
                              Type
                                (Outside);
                              Type
                                (G.Inside)
                            ],
                            [
                              Type
                                (IO);
                              Type
                                (NonTermination);
                              Type
                                (Outside);
                              Type
                                (G.Inside)
                            ],
                            Bind
                              (?,
                                Lift
                                  (?,
                                    [
                                      Type
                                        (IO)
                                    ],
                                    [
                                      Type
                                        (IO);
                                      Type
                                        (Outside);
                                      Type
                                        (G.Inside)
                                    ],
                                    Apply
                                      (19,
                                        Variable
                                          (19,
                                            OCaml.Pervasives.print_string),
                                        [
                                          Constant
                                            (19,
                                              String("no tail"))
                                        ])),
                                None,
                                Lift
                                  (?,
                                    [
                                      Type
                                        (Outside);
                                      Type
                                        (G.Inside)
                                    ],
                                    [
                                      Type
                                        (IO);
                                      Type
                                        (Outside);
                                      Type
                                        (G.Inside)
                                    ],
                                    Apply
                                      (19,
                                        Variable
                                          (19,
                                            G.g),
                                        [
                                          Constructor
                                            (19,
                                              false)
                                        ])))));
                      (Constructor
                        (cons,
                          x,
                          Constructor
                            ([])),
                        Lift
                          (?,
                            [
                              Type
                                (G.Inside)
                            ],
                            [
                              Type
                                (IO);
                              Type
                                (NonTermination);
                              Type
                                (Outside);
                              Type
                                (G.Inside)
                            ],
                            Apply
                              (20,
                                Variable
                                  (20,
                                    G.raise_Inside),
                                [
                                  Tuple
                                    (?,
                                      Constant
                                        (20,
                                          Int(0)),
                                      Constant
                                        (20,
                                          String("gg")))
                                ])));
                      (Constructor
                        (cons,
                          Any,
                          xs),
                        Apply
                          (21,
                            Apply
                              (?,
                                Variable
                                  (?,
                                    h_rec),
                                [
                                  Variable
                                    (?,
                                      counter)
                                ]),
                            [
                              Variable
                                (21,
                                  xs)
                            ]))
                    ]))
            ]))
    ])

17
Value
  (non_rec, @.,
    [
      ((h, [ A; B ], [ (l, Type (list, A)) ],
        Monad
          ([
            Type (Counter);
            Type (IO);
            Type (NonTermination);
            Type (Outside);
            Type (G.Inside)
          ], B)),
        Bind
          (?,
            Lift
              (?, [ Type (Counter) ],
                [
                  Type (Counter);
                  Type (IO);
                  Type (NonTermination);
                  Type (Outside);
                  Type (G.Inside)
                ],
                Apply (?, Variable (?, read_counter), [ Tuple (?) ])),
            Some x,
            Lift
              (?,
                [
                  Type (IO);
                  Type (NonTermination);
                  Type (Outside);
                  Type (G.Inside)
                ],
                [
                  Type (Counter);
                  Type (IO);
                  Type (NonTermination);
                  Type (Outside);
                  Type (G.Inside)
                ],
                Apply
                  (?, Variable (?, h_rec),
                    [ Variable (?, x); Variable (?, l) ]))))
    ])
