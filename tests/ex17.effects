3 Exception (Outside, raise_Outside, ())

5
Value
  (non_rec, @.,
    [
      ((f, [ A; B ], [ (x, A) ], Monad ([ Type (Outside) ], B)),
        Apply
          ((5, Effect ([ Type (Outside) ], .)),
            Variable
              ((5, Effect ([ ], . -[ Type (Outside) ]-> .)),
                raise_Outside), [ Tuple ((?, Effect ([ ], .))) ]))
    ])

7 Module G:
  8 Exception (Inside, raise_Inside, (Type (Z) * Type (string)))
  
  10
  Value
    (non_rec, @.,
      [
        ((g, [ A ], [ (b, Type (bool)) ],
          Monad ([ Type (Outside); Type (G/Inside) ], A)),
          IfThenElse
            ((11, Effect ([ Type (Outside); Type (G/Inside) ], .)),
              Variable ((11, Effect ([ ], .)), G/b),
              Apply
                ((12, Effect ([ Type (G/Inside) ], .)),
                  Variable
                    ((12,
                      Effect
                        ([ ],
                          .
                            -[
                              Type
                                (G/Inside)
                            ]-> .)),
                      G/raise_Inside),
                  [
                    Tuple
                      ((?,
                        Effect
                          ([
                          ],
                            .)),
                        Constant
                          ((12,
                            Effect
                              ([
                              ],
                                .)),
                            Int(12)),
                        Constant
                          ((12,
                            Effect
                              ([
                              ],
                                .)),
                            String("no")))
                  ]),
              Apply
                ((14, Effect ([ Type (Outside) ], .)),
                  Variable
                    ((14,
                      Effect
                        ([ ],
                          .
                            -[
                              Type
                                (Outside)
                            ]-> .)),
                      raise_Outside),
                  [ Tuple ((?, Effect ([ ], .))) ])))
      ])

17
Value
  (rec, @.,
    [
      ((h_rec, [ A; B ], [ (counter, Type (nat)); (l, Type (list, A)) ],
        Monad
          ([
            Type (IO);
            Type (NonTermination);
            Type (Outside);
            Type (G.Inside)
          ], B)),
        Match
          ((?,
            Effect
              ([
                Type (IO);
                Type (NonTermination);
                Type (Outside);
                Type (G.Inside)
              ], .)), Variable ((?, Effect ([ ], .)), counter),
            [
              (Constructor (O),
                Apply
                  ((?,
                    Effect
                      ([
                        Type
                          (NonTermination)
                      ],
                        .)),
                    Variable
                      ((?,
                        Effect
                          ([
                          ],
                            .
                              -[
                                Type
                                  (NonTermination)
                              ]->
                              .)),
                        not_terminated),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)))
                    ]));
              (Constructor (S, counter),
                Match
                  ((18,
                    Effect
                      ([
                        Type
                          (IO);
                        Type
                          (NonTermination);
                        Type
                          (Outside);
                        Type
                          (G.Inside)
                      ],
                        .)),
                    Variable
                      ((18,
                        Effect
                          ([
                          ],
                            .)),
                        l),
                    [
                      (Constructor
                        ([]),
                        Sequence
                          ((19,
                            Effect
                              ([
                                Type
                                  (IO);
                                Type
                                  (Outside);
                                Type
                                  (G.Inside)
                              ],
                                .)),
                            Apply
                              ((19,
                                Effect
                                  ([
                                    Type
                                      (IO)
                                  ],
                                    .)),
                                Variable
                                  ((19,
                                    Effect
                                      ([
                                      ],
                                        .
                                          -[
                                            Type
                                              (IO)
                                          ]->
                                          .)),
                                    OCaml.Pervasives.print_string),
                                [
                                  Constant
                                    ((19,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      String("no tail"))
                                ]),
                            Apply
                              ((19,
                                Effect
                                  ([
                                    Type
                                      (Outside);
                                    Type
                                      (G.Inside)
                                  ],
                                    .)),
                                Variable
                                  ((19,
                                    Effect
                                      ([
                                      ],
                                        .
                                          -[
                                            Type
                                              (Outside);
                                            Type
                                              (G.Inside)
                                          ]->
                                          .)),
                                    G.g),
                                [
                                  Constructor
                                    ((19,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      false)
                                ])));
                      (Constructor
                        (cons,
                          x,
                          Constructor
                            ([])),
                        Apply
                          ((20,
                            Effect
                              ([
                                Type
                                  (G.Inside)
                              ],
                                .)),
                            Variable
                              ((20,
                                Effect
                                  ([
                                  ],
                                    .
                                      -[
                                        Type
                                          (G.Inside)
                                      ]->
                                      .)),
                                G.raise_Inside),
                            [
                              Tuple
                                ((?,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Constant
                                    ((20,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      Int(0)),
                                  Constant
                                    ((20,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      String("gg")))
                            ]));
                      (Constructor
                        (cons,
                          Any,
                          xs),
                        Apply
                          ((21,
                            Effect
                              ([
                                Type
                                  (IO);
                                Type
                                  (NonTermination);
                                Type
                                  (Outside);
                                Type
                                  (G.Inside)
                              ],
                                .)),
                            Apply
                              ((?,
                                Effect
                                  ([
                                  ],
                                    .
                                      -[
                                        Type
                                          (IO);
                                        Type
                                          (NonTermination);
                                        Type
                                          (Outside);
                                        Type
                                          (G.Inside)
                                      ]->
                                      .)),
                                Variable
                                  ((?,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .
                                            -[
                                              Type
                                                (IO);
                                              Type
                                                (NonTermination);
                                              Type
                                                (Outside);
                                              Type
                                                (G.Inside)
                                            ]->
                                            .)),
                                    h_rec),
                                [
                                  Variable
                                    ((?,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      counter)
                                ]),
                            [
                              Variable
                                ((21,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  xs)
                            ]))
                    ]))
            ]))
    ])

17
Value
  (non_rec, @.,
    [
      ((h, [ A; B ], [ (l, Type (list, A)) ],
        Monad
          ([
            Type (Counter);
            Type (IO);
            Type (NonTermination);
            Type (Outside);
            Type (G.Inside)
          ], B)),
        Apply
          ((?,
            Effect
              ([
                Type (Counter);
                Type (IO);
                Type (NonTermination);
                Type (Outside);
                Type (G.Inside)
              ], .)),
            Variable
              ((?,
                Effect
                  ([ ],
                    . ->
                      .
                        -[
                          Type (IO);
                          Type (NonTermination);
                          Type (Outside);
                          Type (G.Inside)
                        ]-> .)), h_rec),
            [
              Apply
                ((?, Effect ([ Type (Counter) ], .)),
                  Variable
                    ((?,
                      Effect
                        ([
                        ],
                          .
                            -[
                              Type
                                (Counter)
                            ]->
                            .)),
                      read_counter),
                  [
                    Tuple
                      ((?,
                        Effect
                          ([
                          ],
                            .)))
                  ]);
              Variable ((?, Effect ([ ], .)), l)
            ]))
    ])
