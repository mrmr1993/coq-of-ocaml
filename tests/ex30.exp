3 Module M:
  4
  Value
    (non_rec, @.,
      [
        ((f, [ A; B ], [ (x, A) ], B),
          Match
            (4, Variable (?, Ex30.M/x),
              [
                (Any,
                  Apply
                    (4,
                      Variable
                        (4,
                          OCaml/Pervasives.failwith),
                      [
                        Constant
                          (4,
                            String("failure"))
                      ]))
              ]))
      ])

7 Module N:
  8
  Value
    (non_rec, @.,
      [
        ((f, [ A; B ], [ (x, A) ], B),
          Match
            (8, Variable (?, Ex30.N/x),
              [
                (Any,
                  Apply
                    (8,
                      Variable
                        (8,
                          OCaml/assert),
                      [
                        Constructor
                          (8,
                            false)
                      ]))
              ]))
      ])
  
  9
  Value
    (non_rec, @.,
      [
        ((x, [ ], [ ], Type (unit)),
          Match
            (9,
              Run
                (?,
                  Type
                    (OCaml/exception,
                      Type (OCaml/assert_failure)),
                  [ ],
                  Apply
                    (9, Variable (9, Ex30.N/f),
                      [ Constructor (9, tt) ])),
              [
                (Constructor (inl, x), Variable (?, Ex30.N/x));
                (Constructor
                  (inr,
                    Constructor
                      (OCaml/Assert_failure,
                        Tuple
                          (Any))),
                  Constructor (9, tt))
              ]))
      ])
  
  10 Open Ex30/M
  
  11
  Value
    (non_rec, @.,
      [
        ((y, [ ], [ ], Type (unit)),
          Match
            (11,
              Run
                (?,
                  Type
                    (OCaml/exception,
                      Type (OCaml/failure)), [ ],
                  Apply
                    (11, Variable (11, Ex30/M.f),
                      [ Constructor (11, tt) ])),
              [
                (Constructor (inl, x (= x_1)),
                  Variable
                    (?,
                      Ex30.N/x_1));
                (Constructor
                  (inr,
                    Constructor
                      (OCaml/Failure,
                        Tuple
                          (Any))),
                  Constructor (11, tt))
              ]))
      ])

14
Value
  (non_rec, @.,
    [
      ((b, [ ], [ ], Type (unit)),
        Match
          (14,
            Run
              (?, Type (OCaml/exception, Type (OCaml/assert_failure)),
                [ ],
                Apply
                  (14, Variable (14, Ex30/N.f),
                    [ Constructor (14, tt) ])),
            [
              (Constructor (inl, x), Variable (?, Ex30/x));
              (Constructor
                (inr,
                  Constructor
                    (OCaml/Assert_failure,
                      Tuple
                        (Any))),
                Constructor (14, tt))
            ]))
    ])

15 Open Ex30/N

16
Value
  (non_rec, @.,
    [
      ((b', [ ], [ ], Type (unit)),
        Match
          (16,
            Run
              (?, Type (OCaml/exception, Type (OCaml/assert_failure)),
                [ ],
                Apply
                  (16, Variable (16, Ex30/N.f),
                    [ Constructor (16, tt) ])),
            [
              (Constructor (inl, x), Variable (?, Ex30/x));
              (Constructor
                (inr,
                  Constructor
                    (OCaml/Assert_failure,
                      Tuple
                        (Any))),
                Constructor (16, tt))
            ]))
    ])

18 Value (non_rec, @., [ ((x, [ ], [ ], Type (Z)), Constant (18, Int(15))) ])

20 Module A:
  21
  Value
    (non_rec, @.,
      [
        ((x, [ A; B ], [ (x, A) ], B),
          Match
            (21, Variable (?, Ex30.A/x),
              [
                (Any,
                  Apply
                    (21,
                      Variable
                        (21,
                          OCaml/assert),
                      [
                        Constructor
                          (21,
                            false)
                      ]))
              ]))
      ])

24 Module B:
  25 Value (non_rec, @., [ ((a, [ ], [ ], Type (Z)), Variable (25, Ex30/x)) ])
  
  26 Open Ex30/A
  
  27
  Value
    (non_rec, @., [ ((b, [ A; B ], [ ], (A -> B)), Variable (27, Ex30.A/x)) ])
  
  28
  Value
    (non_rec, @.,
      [
        ((x, [ A; B ], [ (x, A) ], B),
          Match
            (28, Variable (?, Ex30.B/x),
              [
                (Any,
                  Apply
                    (28,
                      Variable
                        (28,
                          OCaml/Pervasives.failwith),
                      [
                        Constant
                          (28,
                            String("failure"))
                      ]))
              ]))
      ])
  
  29
  Value
    (non_rec, @., [ ((c, [ A; B ], [ ], (A -> B)), Variable (29, Ex30.B/x)) ])

32 Module C:
  33 Value (non_rec, @., [ ((a, [ ], [ ], Type (Z)), Variable (33, Ex30/x)) ])
  
  34
  Value
    (non_rec, @.,
      [
        ((x, [ A; B ], [ (x, A) ], B),
          Match
            (34, Variable (?, Ex30.C/x),
              [
                (Any,
                  Apply
                    (34,
                      Variable
                        (34,
                          OCaml/Pervasives.failwith),
                      [
                        Constant
                          (34,
                            String("failure"))
                      ]))
              ]))
      ])
  
  35
  Value
    (non_rec, @., [ ((b, [ A; B ], [ ], (A -> B)), Variable (35, Ex30.C/x)) ])
  
  36 Open Ex30/A
  
  37
  Value
    (non_rec, @., [ ((c, [ A; B ], [ ], (A -> B)), Variable (37, Ex30/A.x)) ])

40 Module D:
  41 Module A:
    42 Value (non_rec, @., [ ((a, [ ], [ ], Type (Z)), Constant (42, Int(2))) ])
  
  44 Value (non_rec, @., [ ((b, [ ], [ ], Type (Z)), Variable (44, Ex30/x)) ])
  
  45 Open Ex30.D/A
  
  46
  Value (non_rec, @., [ ((c, [ ], [ ], Type (Z)), Variable (46, Ex30.D/A.a)) ])
  
  47 Value (non_rec, @., [ ((d, [ ], [ ], Type (Z)), Variable (47, Ex30/x)) ])
