3
Value
  (non_rec, @.,
    [
      ((tail, [ A ], [ (l, Type (list, A)) ], Type (list, A)),
        Match
          (4, Variable (4, Ex13/l),
            [
              (Constructor (cons, Any, xs), Variable (5, Ex13/xs));
              (Constructor ([]),
                Apply
                  (6,
                    Variable
                      (6,
                        OCaml/Pervasives.failwith),
                    [
                      Constant
                        (6,
                          String("Cannot take the tail of an empty list."))
                    ]))
            ]))
    ])

8
Value
  (rec, @.,
    [
      ((print_list_rec, [ ],
        [ (counter, Type (nat)); (x, Type (list, Type (string))) ],
        Type (unit)),
        Match
          (?, Variable (?, Ex13/counter),
            [
              (Constructor (O),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S, counter),
                Match
                  (9,
                    Variable
                      (?,
                        Ex13/x),
                    [
                      (Constructor
                        ([]),
                        Constructor
                          (9,
                            tt));
                      (Constructor
                        (cons,
                          x,
                          xs),
                        Sequence
                          (11,
                            Apply
                              (11,
                                Variable
                                  (11,
                                    OCaml/Pervasives.print_string),
                                [
                                  Variable
                                    (11,
                                      Ex13/x)
                                ]),
                            Apply
                              (12,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        Ex13/print_list_rec),
                                    [
                                      Variable
                                        (?,
                                          Ex13/counter)
                                    ]),
                                [
                                  Variable
                                    (12,
                                      Ex13/xs)
                                ])))
                    ]))
            ]))
    ])

8
Value
  (non_rec, @.,
    [
      ((print_list, [ ], [ (x, Type (list, Type (string))) ], Type (unit)),
        Apply
          (?, Variable (?, Ex13/print_list_rec),
            [
              Apply (?, Variable (?, read_counter), [ Tuple (?) ]);
              Variable (?, Ex13/x)
            ]))
    ])

14
Value
  (non_rec, @.,
    [
      ((f, [ ], [ ], (Type (list, Type (string)) -> Type (unit))),
        Variable (14, Ex13/print_list))
    ])

16
Value
  (non_rec, @.,
    [
      ((x, [ A ], [ (z, A) ], Type (unit)),
        Apply
          (16, Variable (16, Ex13/f),
            [
              Apply
                (16, Variable (16, Ex13/tail),
                  [
                    Constructor
                      (16,
                        cons,
                        Constant
                          (16,
                            String("Stop")),
                        Constructor
                          (16,
                            cons,
                            Constant
                              (16,
                                String("Hello")),
                            Constructor
                              (16,
                                cons,
                                Constant
                                  (16,
                                    String(" ")),
                                Constructor
                                  (16,
                                    cons,
                                    Constant
                                      (16,
                                        String("world")),
                                    Constructor
                                      (16,
                                        [])))))
                  ])
            ]))
    ])
