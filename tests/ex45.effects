2 Exception (Ex1, ex1, ())

3 Exception (Ex2, ex2, (Type (Z)))

5
Value
  (non_rec, @.,
    [
      ((f, [ A ], [ (x, Type (unit)) ],
        Monad ([ Type (OCaml/exception, Type (Ex45/ex1)) ], A)),
        Match
          ((5, Effect ([ Type (OCaml/exception, Type (Ex45/ex1)) ], .)),
            Variable ((?, Effect ([ ], .)), Ex45/x),
            [
              (Constructor (tt),
                Apply
                  ((5,
                    Effect
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex1))
                      ],
                        .)),
                    Variable
                      ((5,
                        Effect
                          ([
                          ],
                            .
                              -[
                                Type
                                  (OCaml/exception,
                                    Type
                                      (Ex45/ex1))
                              ]->
                              .)),
                        OCaml/Pervasives.raise),
                    [
                      Constructor
                        ((5,
                          Effect
                            ([
                            ],
                              .)),
                          Ex45/Ex1,
                          Tuple
                            ((?,
                              Effect
                                ([
                                ],
                                  .))))
                    ]))
            ]))
    ])

6
Value
  (non_rec, @.,
    [
      ((g, [ A ], [ (y, Type (Z)) ],
        Monad ([ Type (OCaml/exception, Type (Ex45/ex2)) ], A)),
        Apply
          ((6, Effect ([ Type (OCaml/exception, Type (Ex45/ex2)) ], .)),
            Variable
              ((6,
                Effect
                  ([ ],
                    .
                      -[
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ]-> .)), OCaml/Pervasives.raise),
            [
              Constructor
                ((6, Effect ([ ], .)), Ex45/Ex2,
                  Tuple
                    ((?,
                      Effect
                        ([
                        ],
                          .)),
                      Variable
                        ((6,
                          Effect
                            ([
                            ],
                              .)),
                          Ex45/y)))
            ]))
    ])

7
Value
  (non_rec, @.,
    [
      ((h, [ A ], [ (x, Type (unit)) ],
        (Type (Z) ->
          (Type (unit) ->
            Monad ([ Type (OCaml/exception, Type (Ex45/ex2)) ], A)))),
        Match
          ((7,
            Effect
              ([ ],
                . ->
                  . -[ Type (OCaml/exception, Type (Ex45/ex2)) ]-> .)),
            Variable ((?, Effect ([ ], .)), Ex45/x),
            [
              (Constructor (tt),
                Function
                  ((7,
                    Effect
                      ([
                      ],
                        .
                          ->
                          .
                            -[
                              Type
                                (OCaml/exception,
                                  Type
                                    (Ex45/ex2))
                            ]->
                            .)),
                    y,
                    Function
                      ((7,
                        Effect
                          ([
                          ],
                            .
                              -[
                                Type
                                  (OCaml/exception,
                                    Type
                                      (Ex45/ex2))
                              ]->
                              .)),
                        x_1,
                        Match
                          ((7,
                            Effect
                              ([
                                Type
                                  (OCaml/exception,
                                    Type
                                      (Ex45/ex2))
                              ],
                                .)),
                            Variable
                              ((?,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Ex45/x_1),
                            [
                              (Constructor
                                (tt),
                                Apply
                                  ((7,
                                    Effect
                                      ([
                                        Type
                                          (OCaml/exception,
                                            Type
                                              (Ex45/ex2))
                                      ],
                                        .)),
                                    Variable
                                      ((7,
                                        Effect
                                          ([
                                          ],
                                            .
                                              -[
                                                Type
                                                  (OCaml/exception,
                                                    Type
                                                      (Ex45/ex2))
                                              ]->
                                              .)),
                                        OCaml/Pervasives.raise),
                                    [
                                      Constructor
                                        ((7,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          Ex45/Ex2,
                                          Tuple
                                            ((?,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              Variable
                                                ((7,
                                                  Effect
                                                    ([
                                                    ],
                                                      .)),
                                                  Ex45/y)))
                                    ]))
                            ]))))
            ]))
    ])

9
Value
  (non_rec, @.,
    [
      ((x, [ A; B; C ], [ ],
        ((Type (unit) ->
          Monad ([ Type (OCaml/exception, Type (Ex45/ex1)) ], A)) *
          (Type (Z) ->
            Monad ([ Type (OCaml/exception, Type (Ex45/ex2)) ], B)) *
          (Type (unit) ->
            (Type (Z) ->
              (Type (unit) ->
                Monad ([ Type (OCaml/exception, Type (Ex45/ex2)) ], C)))))),
        Tuple
          ((9, Effect ([ ], .)),
            Variable
              ((9,
                Effect
                  ([ ],
                    .
                      -[
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex1))
                      ]-> .)), Ex45/f),
            Variable
              ((9,
                Effect
                  ([ ],
                    .
                      -[
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ]-> .)), Ex45/g),
            Variable
              ((9,
                Effect
                  ([ ],
                    . ->
                      . ->
                        .
                          -[
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ]-> .)), Ex45/h)))
    ])

11
Value
  (non_rec, @.,
    [
      ((f', [ A ], [ ],
        (Type (unit) ->
          Monad ([ Type (OCaml/exception, Type (Ex45/ex1)) ], A))),
        Match
          ((11,
            Effect
              ([ ], . -[ Type (OCaml/exception, Type (Ex45/ex1)) ]-> .)),
            Coerce
              ((?, Effect ([ ], .)),
                Variable ((11, Effect ([ ], .)), Ex45/x),
                ((Type (unit) ->
                  Monad
                    ([ Type (OCaml/exception, Type (Ex45/ex1)) ],
                      A)) *
                  (Type (Z) ->
                    Monad
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ], ())) *
                  (Type (unit) ->
                    (Type (Z) ->
                      (Type (unit) ->
                        Monad
                          ([
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ], ())))))),
            [
              (Tuple (f, Any, Any),
                Variable
                  ((11,
                    Effect
                      ([
                      ],
                        .
                          -[
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex1))
                          ]->
                          .)),
                    Ex45/f))
            ]))
    ])

12
Value
  (non_rec, @.,
    [
      ((g', [ A ], [ ],
        (Type (Z) -> Monad ([ Type (OCaml/exception, Type (Ex45/ex2)) ], A))),
        Match
          ((12,
            Effect
              ([ ], . -[ Type (OCaml/exception, Type (Ex45/ex2)) ]-> .)),
            Coerce
              ((?, Effect ([ ], .)),
                Variable ((12, Effect ([ ], .)), Ex45/x),
                ((Type (unit) ->
                  Monad
                    ([ Type (OCaml/exception, Type (Ex45/ex1)) ],
                      ())) *
                  (Type (Z) ->
                    Monad
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ], A)) *
                  (Type (unit) ->
                    (Type (Z) ->
                      (Type (unit) ->
                        Monad
                          ([
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ], ())))))),
            [
              (Tuple (Any, g, Any),
                Variable
                  ((12,
                    Effect
                      ([
                      ],
                        .
                          -[
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ]->
                          .)),
                    Ex45/g))
            ]))
    ])

13
Value
  (non_rec, @.,
    [
      ((h', [ A ], [ ],
        (Type (unit) ->
          (Type (Z) ->
            (Type (unit) ->
              Monad ([ Type (OCaml/exception, Type (Ex45/ex2)) ], A))))),
        Match
          ((13,
            Effect
              ([ ],
                . ->
                  . ->
                    .
                      -[
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ]-> .)),
            Coerce
              ((?, Effect ([ ], .)),
                Variable ((13, Effect ([ ], .)), Ex45/x),
                ((Type (unit) ->
                  Monad
                    ([ Type (OCaml/exception, Type (Ex45/ex1)) ],
                      ())) *
                  (Type (Z) ->
                    Monad
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ], ())) *
                  (Type (unit) ->
                    (Type (Z) ->
                      (Type (unit) ->
                        Monad
                          ([
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ], A)))))),
            [
              (Tuple (Any, Any, h),
                Variable
                  ((13,
                    Effect
                      ([
                      ],
                        .
                          ->
                          .
                            ->
                            .
                              -[
                                Type
                                  (OCaml/exception,
                                    Type
                                      (Ex45/ex2))
                              ]->
                              .)),
                    Ex45/h))
            ]))
    ])

15
Value
  (non_rec, @.,
    [
      ((temp, [ A; B; C ], [ ],
        ((Type (unit) ->
          Monad ([ Type (OCaml/exception, Type (Ex45/ex1)) ], A)) *
          (Type (Z) ->
            Monad ([ Type (OCaml/exception, Type (Ex45/ex2)) ], B)) *
          (Type (unit) ->
            (Type (Z) ->
              (Type (unit) ->
                Monad ([ Type (OCaml/exception, Type (Ex45/ex2)) ], C)))))),
        Variable ((15, Effect ([ ], .)), Ex45/x))
    ])

15
Value
  (non_rec, @.,
    [
      ((f'', [ A ], [ ],
        (Type (unit) ->
          Monad ([ Type (OCaml/exception, Type (Ex45/ex1)) ], A))),
        Match
          ((?,
            Effect
              ([ ], . -[ Type (OCaml/exception, Type (Ex45/ex1)) ]-> .)),
            Coerce
              ((?, Effect ([ ], .)),
                Variable ((?, Effect ([ ], .)), Ex45/temp),
                ((Type (unit) ->
                  Monad
                    ([ Type (OCaml/exception, Type (Ex45/ex1)) ],
                      A)) *
                  (Type (Z) ->
                    Monad
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ], ())) *
                  (Type (unit) ->
                    (Type (Z) ->
                      (Type (unit) ->
                        Monad
                          ([
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ], ())))))),
            [
              (Tuple (f'', g'', h''),
                Variable
                  ((?,
                    Effect
                      ([
                      ],
                        .
                          -[
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex1))
                          ]->
                          .)),
                    Ex45/f''))
            ]))
    ])

15
Value
  (non_rec, @.,
    [
      ((g'', [ B ], [ ],
        (Type (Z) -> Monad ([ Type (OCaml/exception, Type (Ex45/ex2)) ], B))),
        Match
          ((?,
            Effect
              ([ ], . -[ Type (OCaml/exception, Type (Ex45/ex2)) ]-> .)),
            Coerce
              ((?, Effect ([ ], .)),
                Variable ((?, Effect ([ ], .)), Ex45/temp),
                ((Type (unit) ->
                  Monad
                    ([ Type (OCaml/exception, Type (Ex45/ex1)) ],
                      ())) *
                  (Type (Z) ->
                    Monad
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ], B)) *
                  (Type (unit) ->
                    (Type (Z) ->
                      (Type (unit) ->
                        Monad
                          ([
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ], ())))))),
            [
              (Tuple (f'', g'', h''),
                Variable
                  ((?,
                    Effect
                      ([
                      ],
                        .
                          -[
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ]->
                          .)),
                    Ex45/g''))
            ]))
    ])

15
Value
  (non_rec, @.,
    [
      ((h'', [ C ], [ ],
        (Type (unit) ->
          (Type (Z) ->
            (Type (unit) ->
              Monad ([ Type (OCaml/exception, Type (Ex45/ex2)) ], C))))),
        Match
          ((?,
            Effect
              ([ ],
                . ->
                  . ->
                    .
                      -[
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ]-> .)),
            Coerce
              ((?, Effect ([ ], .)),
                Variable ((?, Effect ([ ], .)), Ex45/temp),
                ((Type (unit) ->
                  Monad
                    ([ Type (OCaml/exception, Type (Ex45/ex1)) ],
                      ())) *
                  (Type (Z) ->
                    Monad
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ], ())) *
                  (Type (unit) ->
                    (Type (Z) ->
                      (Type (unit) ->
                        Monad
                          ([
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ], C)))))),
            [
              (Tuple (f'', g'', h''),
                Variable
                  ((?,
                    Effect
                      ([
                      ],
                        .
                          ->
                          .
                            ->
                            .
                              -[
                                Type
                                  (OCaml/exception,
                                    Type
                                      (Ex45/ex2))
                              ]->
                              .)),
                    Ex45/h''))
            ]))
    ])

17
Value
  (non_rec, @.,
    [
      ((ff, [ A ], [ ],
        (Type (unit) ->
          Monad ([ Type (OCaml/exception, Type (Ex45/ex1)) ], A))),
        Match
          ((17,
            Effect
              ([ ], . -[ Type (OCaml/exception, Type (Ex45/ex1)) ]-> .)),
            Coerce
              ((?, Effect ([ ], .)),
                Variable ((17, Effect ([ ], .)), Ex45/x),
                ((Type (unit) ->
                  Monad
                    ([ Type (OCaml/exception, Type (Ex45/ex1)) ],
                      A)) *
                  (Type (Z) ->
                    Monad
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ], ())) *
                  (Type (unit) ->
                    (Type (Z) ->
                      (Type (unit) ->
                        Monad
                          ([
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ], ())))))),
            [
              (Tuple (f, Any, Any),
                Variable
                  ((17,
                    Effect
                      ([
                      ],
                        .
                          -[
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex1))
                          ]->
                          .)),
                    Ex45/f))
            ]))
    ])

18
Value
  (non_rec, @.,
    [
      ((gg, [ A ], [ ],
        (Type (Z) -> Monad ([ Type (OCaml/exception, Type (Ex45/ex2)) ], A))),
        Match
          ((18,
            Effect
              ([ ], . -[ Type (OCaml/exception, Type (Ex45/ex2)) ]-> .)),
            Coerce
              ((?, Effect ([ ], .)),
                Variable ((18, Effect ([ ], .)), Ex45/x),
                ((Type (unit) ->
                  Monad
                    ([ Type (OCaml/exception, Type (Ex45/ex1)) ],
                      ())) *
                  (Type (Z) ->
                    Monad
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ], A)) *
                  (Type (unit) ->
                    (Type (Z) ->
                      (Type (unit) ->
                        Monad
                          ([
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ], ())))))),
            [
              (Tuple (Any, g, Any),
                Variable
                  ((18,
                    Effect
                      ([
                      ],
                        .
                          -[
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ]->
                          .)),
                    Ex45/g))
            ]))
    ])

19
Value
  (non_rec, @.,
    [
      ((hh, [ A ], [ ],
        (Type (unit) ->
          (Type (Z) ->
            (Type (unit) ->
              Monad ([ Type (OCaml/exception, Type (Ex45/ex2)) ], A))))),
        Match
          ((19,
            Effect
              ([ ],
                . ->
                  . ->
                    .
                      -[
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ]-> .)),
            Coerce
              ((?, Effect ([ ], .)),
                Variable ((19, Effect ([ ], .)), Ex45/x),
                ((Type (unit) ->
                  Monad
                    ([ Type (OCaml/exception, Type (Ex45/ex1)) ],
                      ())) *
                  (Type (Z) ->
                    Monad
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ], ())) *
                  (Type (unit) ->
                    (Type (Z) ->
                      (Type (unit) ->
                        Monad
                          ([
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ], A)))))),
            [
              (Tuple (Any, Any, h),
                Variable
                  ((19,
                    Effect
                      ([
                      ],
                        .
                          ->
                          .
                            ->
                            .
                              -[
                                Type
                                  (OCaml/exception,
                                    Type
                                      (Ex45/ex2))
                              ]->
                              .)),
                    Ex45/h))
            ]))
    ])

21
Value
  (non_rec, @.,
    [
      ((fff, [ ], [ ],
        (Type (unit) ->
          Monad ([ Type (OCaml/exception, Type (Ex45/ex1)) ], Type (unit)))),
        Match
          ((21,
            Effect
              ([ ], . -[ Type (OCaml/exception, Type (Ex45/ex1)) ]-> .)),
            Coerce
              ((?, Effect ([ ], .)),
                Variable ((21, Effect ([ ], .)), Ex45/x),
                ((Type (unit) ->
                  Monad
                    ([ Type (OCaml/exception, Type (Ex45/ex1)) ],
                      Type (unit))) *
                  (Type (Z) ->
                    Monad
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ], ())) *
                  (Type (unit) ->
                    (Type (Z) ->
                      (Type (unit) ->
                        Monad
                          ([
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ], ())))))),
            [
              (Tuple (f, Any, Any),
                Variable
                  ((21,
                    Effect
                      ([
                      ],
                        .
                          -[
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex1))
                          ]->
                          .)),
                    Ex45/f))
            ]))
    ])

22
Value
  (non_rec, @.,
    [
      ((ggg, [ ], [ ],
        (Type (Z) ->
          Monad ([ Type (OCaml/exception, Type (Ex45/ex2)) ], Type (unit)))),
        Match
          ((22,
            Effect
              ([ ], . -[ Type (OCaml/exception, Type (Ex45/ex2)) ]-> .)),
            Coerce
              ((?, Effect ([ ], .)),
                Variable ((22, Effect ([ ], .)), Ex45/x),
                ((Type (unit) ->
                  Monad
                    ([ Type (OCaml/exception, Type (Ex45/ex1)) ],
                      ())) *
                  (Type (Z) ->
                    Monad
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ], Type (unit))) *
                  (Type (unit) ->
                    (Type (Z) ->
                      (Type (unit) ->
                        Monad
                          ([
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ], ())))))),
            [
              (Tuple (Any, g, Any),
                Variable
                  ((22,
                    Effect
                      ([
                      ],
                        .
                          -[
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ]->
                          .)),
                    Ex45/g))
            ]))
    ])

23
Value
  (non_rec, @.,
    [
      ((hhh, [ ], [ ],
        (Type (unit) ->
          (Type (Z) ->
            (Type (unit) ->
              Monad
                ([ Type (OCaml/exception, Type (Ex45/ex2)) ],
                  Type (unit)))))),
        Match
          ((23,
            Effect
              ([ ],
                . ->
                  . ->
                    .
                      -[
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ]-> .)),
            Coerce
              ((?, Effect ([ ], .)),
                Variable ((23, Effect ([ ], .)), Ex45/x),
                ((Type (unit) ->
                  Monad
                    ([ Type (OCaml/exception, Type (Ex45/ex1)) ],
                      ())) *
                  (Type (Z) ->
                    Monad
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ], ())) *
                  (Type (unit) ->
                    (Type (Z) ->
                      (Type (unit) ->
                        Monad
                          ([
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ], Type (unit))))))),
            [
              (Tuple (Any, Any, h),
                Variable
                  ((23,
                    Effect
                      ([
                      ],
                        .
                          ->
                          .
                            ->
                            .
                              -[
                                Type
                                  (OCaml/exception,
                                    Type
                                      (Ex45/ex2))
                              ]->
                              .)),
                    Ex45/h))
            ]))
    ])

25
Value
  (non_rec, @.,
    [
      ((f1, [ A ], [ ],
        (Type (unit) ->
          Monad ([ Type (OCaml/exception, Type (Ex45/ex1)) ], A))),
        Match
          ((25,
            Effect
              ([ ], . -[ Type (OCaml/exception, Type (Ex45/ex1)) ]-> .)),
            Coerce
              ((?,
                Effect
                  ([ ],
                    .
                      -[
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex1))
                      ]-> .)),
                Variable
                  ((25,
                    Effect
                      ([ ],
                        .
                          -[
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex1))
                          ]-> .)), Ex45/f),
                (Type (unit) ->
                  Monad
                    ([ Type (OCaml/exception, Type (Ex45/ex1)) ],
                      A))),
            [
              (x,
                Variable
                  ((25,
                    Effect
                      ([
                      ],
                        .
                          -[
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex1))
                          ]->
                          .)),
                    Ex45/x))
            ]))
    ])

26
Value
  (non_rec, @.,
    [
      ((g1, [ A ], [ ],
        (Type (Z) -> Monad ([ Type (OCaml/exception, Type (Ex45/ex2)) ], A))),
        Match
          ((26,
            Effect
              ([ ], . -[ Type (OCaml/exception, Type (Ex45/ex2)) ]-> .)),
            Coerce
              ((?,
                Effect
                  ([ ],
                    .
                      -[
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ]-> .)),
                Variable
                  ((26,
                    Effect
                      ([ ],
                        .
                          -[
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ]-> .)), Ex45/g),
                (Type (Z) ->
                  Monad
                    ([ Type (OCaml/exception, Type (Ex45/ex2)) ],
                      A))),
            [
              (x,
                Variable
                  ((26,
                    Effect
                      ([
                      ],
                        .
                          -[
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ]->
                          .)),
                    Ex45/x))
            ]))
    ])

27
Value
  (non_rec, @.,
    [
      ((h1, [ A ], [ ],
        (Type (unit) ->
          (Type (Z) ->
            (Type (unit) ->
              Monad ([ Type (OCaml/exception, Type (Ex45/ex2)) ], A))))),
        Match
          ((27,
            Effect
              ([ ],
                . ->
                  . ->
                    .
                      -[
                        Type
                          (OCaml/exception,
                            Type
                              (Ex45/ex2))
                      ]-> .)),
            Coerce
              ((?,
                Effect
                  ([ ],
                    . ->
                      . ->
                        .
                          -[
                            Type
                              (OCaml/exception,
                                Type
                                  (Ex45/ex2))
                          ]-> .)),
                Variable
                  ((27,
                    Effect
                      ([ ],
                        . ->
                          . ->
                            .
                              -[
                                Type
                                  (OCaml/exception,
                                    Type
                                      (Ex45/ex2))
                              ]-> .)), Ex45/h),
                (Type (unit) ->
                  (Type (Z) ->
                    (Type (unit) ->
                      Monad
                        ([
                          Type
                            (OCaml/exception,
                              Type
                                (Ex45/ex2))
                        ], A))))),
            [
              (x,
                Variable
                  ((27,
                    Effect
                      ([
                      ],
                        .
                          ->
                          .
                            ->
                            .
                              -[
                                Type
                                  (OCaml/exception,
                                    Type
                                      (Ex45/ex2))
                              ]->
                              .)),
                    Ex45/x))
            ]))
    ])
