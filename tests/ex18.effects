1 Reference (r, Type (Z/1), Constant ((1, Effect ([ ], .)), Int(12)))

3
Value
  (non_rec, @.,
    [
      ((plus_one, [ A ], [ (x, A) ], Type (Z/1)),
        Match
          ((?, Effect ([ r_state/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((4,
                    Effect
                      ([
                        r_state/0
                      ],
                        .)),
                    Variable
                      ((4,
                        Effect
                          ([
                          ],
                            .)),
                        Z.add/1),
                    [
                      Apply
                        ((4,
                          Effect
                            ([
                              r_state/0
                            ],
                              .)),
                          Variable
                            ((4,
                              Effect
                                ([
                                ],
                                  .
                                    -[
                                      r_state/0
                                    ]->
                                    .)),
                              OCaml.Effect.State.read/1),
                          [
                            Variable
                              ((4,
                                Effect
                                  ([
                                  ],
                                    .)),
                                r/0)
                          ]);
                      Constant
                        ((4,
                          Effect
                            ([
                            ],
                              .)),
                          Int(1))
                    ]))
            ]))
    ])

6 Reference (s, Type (string/1), Constant ((6, Effect ([ ], .)), String("Hi")))

8
Value
  (non_rec, @.,
    [
      ((fail, [ A; B ], [ (x, A) ], B),
        Match
          ((?, Effect ([ s_state/0; OCaml.Failure/1 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((8,
                    Effect
                      ([
                        s_state/0;
                        OCaml.Failure/1
                      ],
                        .)),
                    Variable
                      ((8,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Failure/1
                              ]->
                              .)),
                        OCaml.Pervasives.failwith/1),
                    [
                      Apply
                        ((8,
                          Effect
                            ([
                              s_state/0
                            ],
                              .)),
                          Variable
                            ((8,
                              Effect
                                ([
                                ],
                                  .
                                    -[
                                      s_state/0
                                    ]->
                                    .)),
                              OCaml.Effect.State.read/1),
                          [
                            Variable
                              ((8,
                                Effect
                                  ([
                                  ],
                                    .)),
                                s/0)
                          ])
                    ]))
            ]))
    ])

10
Value
  (non_rec, @.,
    [
      ((reset, [ A ], [ (x, A) ], Type (unit/1)),
        Match
          ((?, Effect ([ r_state/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((11,
                    Effect
                      ([
                        r_state/0
                      ],
                        .)),
                    Variable
                      ((11,
                        Effect
                          ([
                          ],
                            .
                              ->
                              .
                                -[
                                  r_state/0
                                ]->
                                .)),
                        OCaml.Effect.State.write/1),
                    [
                      Variable
                        ((11,
                          Effect
                            ([
                            ],
                              .)),
                          r/0);
                      Constant
                        ((11,
                          Effect
                            ([
                            ],
                              .)),
                          Int(0))
                    ]))
            ]))
    ])

13
Value
  (non_rec, @.,
    [
      ((incr, [ A ], [ (x, A) ], Type (unit/1)),
        Match
          ((?, Effect ([ r_state/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((14,
                    Effect
                      ([
                        r_state/0
                      ],
                        .)),
                    Variable
                      ((14,
                        Effect
                          ([
                          ],
                            .
                              ->
                              .
                                -[
                                  r_state/0
                                ]->
                                .)),
                        OCaml.Effect.State.write/1),
                    [
                      Variable
                        ((14,
                          Effect
                            ([
                            ],
                              .)),
                          r/0);
                      Apply
                        ((14,
                          Effect
                            ([
                              r_state/0
                            ],
                              .)),
                          Variable
                            ((14,
                              Effect
                                ([
                                ],
                                  .)),
                              Z.add/1),
                          [
                            Apply
                              ((14,
                                Effect
                                  ([
                                    r_state/0
                                  ],
                                    .)),
                                Variable
                                  ((14,
                                    Effect
                                      ([
                                      ],
                                        .
                                          -[
                                            r_state/0
                                          ]->
                                          .)),
                                    OCaml.Effect.State.read/1),
                                [
                                  Variable
                                    ((14,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      r/0)
                                ]);
                            Constant
                              ((14,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Int(1))
                          ])
                    ]))
            ]))
    ])
