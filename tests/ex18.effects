1 Reference (r, r_state, Type (Z/3), Constant ((1, Effect ([ ], .)), Int(12)))

3
Value
  (non_rec, @.,
    [
      ((plus_one, [ A ], [ (x, A) ], Type (Z/3)),
        Match
          ((?, Effect ([ (OCaml.Effect.State.state/3, Z/3); r_state/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((4,
                    Effect
                      ([
                        (OCaml.Effect.State.state/3,
                          Z/3);
                        r_state/0
                      ],
                        .)),
                    Variable
                      ((4,
                        Effect
                          ([
                          ],
                            .)),
                        Z.add/3),
                    [
                      Apply
                        ((4,
                          Effect
                            ([
                              (OCaml.Effect.State.state/3,
                                Z/3);
                              r_state/0
                            ],
                              .)),
                          Variable
                            ((4,
                              Effect
                                ([
                                ],
                                  .
                                    -[
                                      (OCaml.Effect.State.state/3,
                                        Z/3)
                                    ]->
                                    .)),
                              OCaml.Effect.State.read/3),
                          [
                            Apply
                              ((?,
                                Effect
                                  ([
                                    (OCaml.Effect.State.state/3,
                                      Z/3);
                                    r_state/0
                                  ],
                                    .)),
                                Variable
                                  ((?,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .
                                            -[
                                              r_state/0
                                            ]->
                                            .)),
                                    OCaml.Effect.State.global/3),
                                [
                                  Variable
                                    ((4,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      r/0);
                                  Apply
                                    ((?,
                                      Effect
                                        ([
                                          (OCaml.Effect.State.state/3,
                                            Z/3)
                                        ],
                                          .)),
                                      Variable
                                        ((?,
                                          Effect
                                            ([
                                            ],
                                              .
                                                -[
                                                  (OCaml.Effect.State.state/3,
                                                    Z/3)
                                                ]->
                                                .)),
                                          OCaml.Effect.State.peekstate/3),
                                      [
                                        Tuple
                                          ((?,
                                            Effect
                                              ([
                                              ],
                                                .)))
                                      ])
                                ])
                          ]);
                      Constant
                        ((4,
                          Effect
                            ([
                            ],
                              .)),
                          Int(1))
                    ]))
            ]))
    ])

6
Reference
  (s, s_state, Type (string/3), Constant ((6, Effect ([ ], .)), String("Hi")))

8
Value
  (non_rec, @.,
    [
      ((fail, [ A; B ], [ (x, A) ], B),
        Match
          ((?,
            Effect
              ([
                (OCaml.Effect.State.state/3, string/3);
                s_state/0;
                OCaml.Failure/3
              ], .)), Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((8,
                    Effect
                      ([
                        (OCaml.Effect.State.state/3,
                          string/3);
                        s_state/0;
                        OCaml.Failure/3
                      ],
                        .)),
                    Variable
                      ((8,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Failure/3
                              ]->
                              .)),
                        OCaml.Pervasives.failwith/3),
                    [
                      Apply
                        ((8,
                          Effect
                            ([
                              (OCaml.Effect.State.state/3,
                                string/3);
                              s_state/0
                            ],
                              .)),
                          Variable
                            ((8,
                              Effect
                                ([
                                ],
                                  .
                                    -[
                                      (OCaml.Effect.State.state/3,
                                        string/3)
                                    ]->
                                    .)),
                              OCaml.Effect.State.read/3),
                          [
                            Apply
                              ((?,
                                Effect
                                  ([
                                    (OCaml.Effect.State.state/3,
                                      string/3);
                                    s_state/0
                                  ],
                                    .)),
                                Variable
                                  ((?,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .
                                            -[
                                              s_state/0
                                            ]->
                                            .)),
                                    OCaml.Effect.State.global/3),
                                [
                                  Variable
                                    ((8,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      s/0);
                                  Apply
                                    ((?,
                                      Effect
                                        ([
                                          (OCaml.Effect.State.state/3,
                                            string/3)
                                        ],
                                          .)),
                                      Variable
                                        ((?,
                                          Effect
                                            ([
                                            ],
                                              .
                                                -[
                                                  (OCaml.Effect.State.state/3,
                                                    string/3)
                                                ]->
                                                .)),
                                          OCaml.Effect.State.peekstate/3),
                                      [
                                        Tuple
                                          ((?,
                                            Effect
                                              ([
                                              ],
                                                .)))
                                      ])
                                ])
                          ])
                    ]))
            ]))
    ])

10
Value
  (non_rec, @.,
    [
      ((reset, [ A ], [ (x, A) ], Type (unit/3)),
        Match
          ((?, Effect ([ (OCaml.Effect.State.state/3, Z/3); r_state/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((11,
                    Effect
                      ([
                        (OCaml.Effect.State.state/3,
                          Z/3);
                        r_state/0
                      ],
                        .)),
                    Variable
                      ((11,
                        Effect
                          ([
                          ],
                            .
                              ->
                              .
                                -[
                                  (OCaml.Effect.State.state/3,
                                    Z/3)
                                ]->
                                .)),
                        OCaml.Effect.State.write/3),
                    [
                      Apply
                        ((?,
                          Effect
                            ([
                              (OCaml.Effect.State.state/3,
                                Z/3);
                              r_state/0
                            ],
                              .)),
                          Variable
                            ((?,
                              Effect
                                ([
                                ],
                                  .
                                    ->
                                    .
                                      -[
                                        r_state/0
                                      ]->
                                      .)),
                              OCaml.Effect.State.global/3),
                          [
                            Variable
                              ((11,
                                Effect
                                  ([
                                  ],
                                    .)),
                                r/0);
                            Apply
                              ((?,
                                Effect
                                  ([
                                    (OCaml.Effect.State.state/3,
                                      Z/3)
                                  ],
                                    .)),
                                Variable
                                  ((?,
                                    Effect
                                      ([
                                      ],
                                        .
                                          -[
                                            (OCaml.Effect.State.state/3,
                                              Z/3)
                                          ]->
                                          .)),
                                    OCaml.Effect.State.peekstate/3),
                                [
                                  Tuple
                                    ((?,
                                      Effect
                                        ([
                                        ],
                                          .)))
                                ])
                          ]);
                      Constant
                        ((11,
                          Effect
                            ([
                            ],
                              .)),
                          Int(0))
                    ]))
            ]))
    ])

13
Value
  (non_rec, @.,
    [
      ((incr, [ A ], [ (x, A) ], Type (unit/3)),
        Match
          ((?, Effect ([ (OCaml.Effect.State.state/3, Z/3); r_state/0 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Any,
                Apply
                  ((14,
                    Effect
                      ([
                        (OCaml.Effect.State.state/3,
                          Z/3);
                        r_state/0
                      ],
                        .)),
                    Variable
                      ((14,
                        Effect
                          ([
                          ],
                            .
                              ->
                              .
                                -[
                                  (OCaml.Effect.State.state/3,
                                    Z/3)
                                ]->
                                .)),
                        OCaml.Effect.State.write/3),
                    [
                      Apply
                        ((?,
                          Effect
                            ([
                              (OCaml.Effect.State.state/3,
                                Z/3);
                              r_state/0
                            ],
                              .)),
                          Variable
                            ((?,
                              Effect
                                ([
                                ],
                                  .
                                    ->
                                    .
                                      -[
                                        r_state/0
                                      ]->
                                      .)),
                              OCaml.Effect.State.global/3),
                          [
                            Variable
                              ((14,
                                Effect
                                  ([
                                  ],
                                    .)),
                                r/0);
                            Apply
                              ((?,
                                Effect
                                  ([
                                    (OCaml.Effect.State.state/3,
                                      Z/3)
                                  ],
                                    .)),
                                Variable
                                  ((?,
                                    Effect
                                      ([
                                      ],
                                        .
                                          -[
                                            (OCaml.Effect.State.state/3,
                                              Z/3)
                                          ]->
                                          .)),
                                    OCaml.Effect.State.peekstate/3),
                                [
                                  Tuple
                                    ((?,
                                      Effect
                                        ([
                                        ],
                                          .)))
                                ])
                          ]);
                      Apply
                        ((14,
                          Effect
                            ([
                              (OCaml.Effect.State.state/3,
                                Z/3);
                              r_state/0
                            ],
                              .)),
                          Variable
                            ((14,
                              Effect
                                ([
                                ],
                                  .)),
                              Z.add/3),
                          [
                            Apply
                              ((14,
                                Effect
                                  ([
                                    (OCaml.Effect.State.state/3,
                                      Z/3);
                                    r_state/0
                                  ],
                                    .)),
                                Variable
                                  ((14,
                                    Effect
                                      ([
                                      ],
                                        .
                                          -[
                                            (OCaml.Effect.State.state/3,
                                              Z/3)
                                          ]->
                                          .)),
                                    OCaml.Effect.State.read/3),
                                [
                                  Apply
                                    ((?,
                                      Effect
                                        ([
                                          (OCaml.Effect.State.state/3,
                                            Z/3);
                                          r_state/0
                                        ],
                                          .)),
                                      Variable
                                        ((?,
                                          Effect
                                            ([
                                            ],
                                              .
                                                ->
                                                .
                                                  -[
                                                    r_state/0
                                                  ]->
                                                  .)),
                                          OCaml.Effect.State.global/3),
                                      [
                                        Variable
                                          ((14,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            r/0);
                                        Apply
                                          ((?,
                                            Effect
                                              ([
                                                (OCaml.Effect.State.state/3,
                                                  Z/3)
                                              ],
                                                .)),
                                            Variable
                                              ((?,
                                                Effect
                                                  ([
                                                  ],
                                                    .
                                                      -[
                                                        (OCaml.Effect.State.state/3,
                                                          Z/3)
                                                      ]->
                                                      .)),
                                                OCaml.Effect.State.peekstate/3),
                                            [
                                              Tuple
                                                ((?,
                                                  Effect
                                                    ([
                                                    ],
                                                      .)))
                                            ])
                                      ])
                                ]);
                            Constant
                              ((14,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Int(1))
                          ])
                    ]))
            ]))
    ])
