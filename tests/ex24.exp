5
Value
  (non_rec, @.,
    [
      ((e_invalid, [ A; B ], [ (x, A) ], B),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (5,
                    Variable
                      (5,
                        OCaml.Pervasives.invalid_arg),
                    [
                      Constant
                        (5,
                          String("error"))
                    ]))
            ]))
    ])

6
Value
  (non_rec, @.,
    [
      ((e_failure, [ A; B ], [ (x, A) ], B),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (6,
                    Variable
                      (6,
                        OCaml.Pervasives.failwith),
                    [
                      Constant
                        (6,
                          String("error"))
                    ]))
            ]))
    ])

7
Value
  (non_rec, @.,
    [
      ((e_exit1, [ A; B ], [ (x, A) ], B),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (7,
                    Variable
                      (7,
                        OCaml.Pervasives.raise_Exit),
                    [
                      Tuple
                        (?)
                    ]))
            ]))
    ])

8
Value
  (non_rec, @.,
    [
      ((e_exit2, [ A; B ], [ (x, A) ], B),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (8,
                    Variable
                      (8,
                        OCaml.Pervasives.raise_Exit),
                    [
                      Tuple
                        (?)
                    ]))
            ]))
    ])

11
Value
  (non_rec, @.,
    [
      ((b_eq, [ ], [ ], Type (bool)),
        Apply
          (11, Variable (11, equiv_decb),
            [ Constant (11, Int(1)); Constant (11, Int(2)) ]))
    ])

12
Value
  (non_rec, @.,
    [
      ((b_neq1, [ ], [ ], Type (bool)),
        Apply
          (12, Variable (12, nequiv_decb),
            [ Constructor (12, true); Constructor (12, false) ]))
    ])

13
Value
  (non_rec, @.,
    [
      ((b_neq2, [ ], [ ], Type (bool)),
        Apply
          (13, Variable (13, nequiv_decb),
            [ Constructor (13, tt); Constructor (13, tt) ]))
    ])

14
Value
  (non_rec, @.,
    [
      ((b_lt, [ ], [ ], Type (bool)),
        Apply
          (14, Variable (14, OCaml.Pervasives.lt),
            [ Constant (14, Int(1)); Constant (14, Int(2)) ]))
    ])

15
Value
  (non_rec, @.,
    [
      ((b_gt, [ ], [ ], Type (bool)),
        Apply
          (15, Variable (15, OCaml.Pervasives.gt),
            [ Constant (15, Int(1)); Constant (15, Int(2)) ]))
    ])

16
Value
  (non_rec, @.,
    [
      ((b_le, [ ], [ ], Type (bool)),
        Apply
          (16, Variable (16, OCaml.Pervasives.le),
            [ Constructor (16, true); Constructor (16, false) ]))
    ])

17
Value
  (non_rec, @.,
    [
      ((b_ge, [ ], [ ], Type (bool)),
        Apply
          (17, Variable (17, OCaml.Pervasives.ge),
            [ Constructor (17, tt); Constructor (17, tt) ]))
    ])

18
Value
  (non_rec, @.,
    [
      ((comp, [ ], [ ], Type (Z)),
        Apply
          (18, Variable (18, OCaml.Pervasives.compare),
            [ Constant (18, Int(1)); Constant (18, Int(2)) ]))
    ])

19
Value
  (non_rec, @.,
    [
      ((n_min, [ ], [ ], Type (Z)),
        Apply
          (19, Variable (19, OCaml.Pervasives.min),
            [ Constant (19, Int(1)); Constant (19, Int(2)) ]))
    ])

20
Value
  (non_rec, @.,
    [
      ((n_max, [ ], [ ], Type (Z)),
        Apply
          (20, Variable (20, OCaml.Pervasives.max),
            [ Constant (20, Int(1)); Constant (20, Int(2)) ]))
    ])

25
Value
  (non_rec, @.,
    [
      ((b_not, [ ], [ ], Type (bool)),
        Apply (25, Variable (25, negb), [ Constructor (25, false) ]))
    ])

26
Value
  (non_rec, @.,
    [
      ((b_and, [ ], [ ], Type (bool)),
        Apply
          (26, Variable (26, andb),
            [ Constructor (26, true); Constructor (26, false) ]))
    ])

27
Value
  (non_rec, @.,
    [
      ((b_and_old, [ ], [ ], Type (bool)),
        Apply
          (27, Variable (27, andb),
            [ Constructor (27, true); Constructor (27, false) ]))
    ])

28
Value
  (non_rec, @.,
    [
      ((b_or, [ ], [ ], Type (bool)),
        Apply
          (28, Variable (28, orb),
            [ Constructor (28, true); Constructor (28, false) ]))
    ])

29
Value
  (non_rec, @.,
    [
      ((b_or_old, [ ], [ ], Type (bool)),
        Apply
          (29, Variable (29, orb),
            [ Constructor (29, true); Constructor (29, false) ]))
    ])

32
Value
  (non_rec, @.,
    [
      ((app1, [ ], [ ], Type (Z)),
        Apply
          (32, Variable (32, OCaml.Pervasives.reverse_apply),
            [ Constant (32, Int(12)); Function (32, x, Variable (32, x)) ]))
    ])

33
Value
  (non_rec, @.,
    [
      ((app2, [ ], [ ], Type (Z)),
        Apply
          (33, Variable (33, apply),
            [ Function (33, x, Variable (33, x)); Constant (33, Int(12)) ]))
    ])

36
Value
  (non_rec, @.,
    [
      ((n_neg1, [ ], [ ], Type (Z)),
        Apply (36, Variable (36, Z.opp), [ Constant (36, Int(12)) ]))
    ])

37
Value (non_rec, @., [ ((n_neg2, [ ], [ ], Type (Z)), Constant (37, Int(-12))) ])

38
Value
  (non_rec, @.,
    [
      ((n_pos1, [ ], [ ], Type (Z)),
        Apply (38, Variable (38, ), [ Constant (38, Int(12)) ]))
    ])

39
Value (non_rec, @., [ ((n_pos2, [ ], [ ], Type (Z)), Constant (39, Int(12))) ])

40
Value
  (non_rec, @.,
    [
      ((n_succ, [ ], [ ], Type (Z)),
        Apply (40, Variable (40, Z.succ), [ Constant (40, Int(1)) ]))
    ])

41
Value
  (non_rec, @.,
    [
      ((n_pred, [ ], [ ], Type (Z)),
        Apply (41, Variable (41, Z.pred), [ Constant (41, Int(1)) ]))
    ])

42
Value
  (non_rec, @.,
    [
      ((n_plus, [ ], [ ], Type (Z)),
        Apply
          (42, Variable (42, Z.add),
            [ Constant (42, Int(1)); Constant (42, Int(2)) ]))
    ])

43
Value
  (non_rec, @.,
    [
      ((n_minus, [ ], [ ], Type (Z)),
        Apply
          (43, Variable (43, Z.sub),
            [ Constant (43, Int(1)); Constant (43, Int(2)) ]))
    ])

44
Value
  (non_rec, @.,
    [
      ((n_times, [ ], [ ], Type (Z)),
        Apply
          (44, Variable (44, Z.mul),
            [ Constant (44, Int(1)); Constant (44, Int(2)) ]))
    ])

45
Value
  (non_rec, @.,
    [
      ((n_div, [ ], [ ], Type (Z)),
        Apply
          (45, Variable (45, Z.div),
            [ Constant (45, Int(1)); Constant (45, Int(2)) ]))
    ])

46
Value
  (non_rec, @.,
    [
      ((n_mod, [ ], [ ], Type (Z)),
        Apply
          (46, Variable (46, Z.modulo),
            [ Constant (46, Int(1)); Constant (46, Int(2)) ]))
    ])

47
Value
  (non_rec, @.,
    [
      ((n_abs, [ ], [ ], Type (Z)),
        Apply (47, Variable (47, Z.abs), [ Constant (47, Int(1)) ]))
    ])

52
Value
  (non_rec, @.,
    [
      ((n_land, [ ], [ ], Type (Z)),
        Apply
          (52, Variable (52, Z.land),
            [ Constant (52, Int(12)); Constant (52, Int(13)) ]))
    ])

53
Value
  (non_rec, @.,
    [
      ((n_lor, [ ], [ ], Type (Z)),
        Apply
          (53, Variable (53, Z.lor),
            [ Constant (53, Int(12)); Constant (53, Int(13)) ]))
    ])

54
Value
  (non_rec, @.,
    [
      ((n_lxor, [ ], [ ], Type (Z)),
        Apply
          (54, Variable (54, Z.lxor),
            [ Constant (54, Int(12)); Constant (54, Int(13)) ]))
    ])

56
Value
  (non_rec, @.,
    [
      ((n_lsl, [ ], [ ], Type (Z)),
        Apply
          (56, Variable (56, Z.shiftl),
            [ Constant (56, Int(12)); Constant (56, Int(13)) ]))
    ])

57
Value
  (non_rec, @.,
    [
      ((n_lsr, [ ], [ ], Type (Z)),
        Apply
          (57, Variable (57, Z.shiftr),
            [ Constant (57, Int(12)); Constant (57, Int(13)) ]))
    ])

64
Value
  (non_rec, @.,
    [
      ((ss, [ ], [ ], Type (string)),
        Apply
          (64, Variable (64, String.append),
            [
              Constant (64, String("begin"));
              Constant (64, String("end"))
            ]))
    ])

67
Value
  (non_rec, @.,
    [
      ((n_char, [ ], [ ], Type (Z)),
        Apply
          (67, Variable (67, OCaml.Pervasives.int_of_char),
            [ Constant (67, Char("c")) ]))
    ])

68
Value
  (non_rec, @.,
    [
      ((char_n, [ A ], [ (x, A) ], Type (ascii)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (68,
                    Variable
                      (68,
                        OCaml.Pervasives.char_of_int),
                    [
                      Constant
                        (68,
                          Int(23))
                    ]))
            ]))
    ])

71
Value
  (non_rec, @.,
    [
      ((i, [ ], [ ], Type (unit)),
        Apply
          (71, Variable (71, OCaml.Pervasives.ignore),
            [ Constant (71, Int(12)) ]))
    ])

74
Value
  (non_rec, @.,
    [
      ((s_bool, [ ], [ ], Type (string)),
        Apply
          (74, Variable (74, OCaml.Pervasives.string_of_bool),
            [ Constructor (74, false) ]))
    ])

75
Value
  (non_rec, @.,
    [
      ((bool_s, [ ], [ ], Type (bool)),
        Apply
          (75, Variable (75, OCaml.Pervasives.bool_of_string),
            [ Constant (75, String("false")) ]))
    ])

76
Value
  (non_rec, @.,
    [
      ((s_n, [ ], [ ], Type (string)),
        Apply
          (76, Variable (76, OCaml.Pervasives.string_of_int),
            [ Constant (76, Int(12)) ]))
    ])

77
Value
  (non_rec, @.,
    [
      ((n_s, [ ], [ ], Type (Z)),
        Apply
          (77, Variable (77, OCaml.Pervasives.int_of_string),
            [ Constant (77, String("12")) ]))
    ])

82
Value
  (non_rec, @.,
    [
      ((n1, [ ], [ ], Type (Z)),
        Apply
          (82, Variable (82, fst),
            [ Tuple (82, Constant (82, Int(12)), Constant (82, Int(13))) ]))
    ])

83
Value
  (non_rec, @.,
    [
      ((n2, [ ], [ ], Type (Z)),
        Apply
          (83, Variable (83, snd),
            [ Tuple (83, Constant (83, Int(12)), Constant (83, Int(13))) ]))
    ])

86
Value
  (non_rec, @.,
    [
      ((ll, [ ], [ ], Type (list, Type (Z))),
        Apply
          (86, Variable (86, OCaml.Pervasives.app),
            [
              Constructor
                (86, cons, Constant (86, Int(1)),
                  Constructor
                    (86,
                      cons,
                      Constant
                        (86,
                          Int(2)),
                      Constructor
                        (86,
                          [])));
              Constructor
                (86, cons, Constant (86, Int(3)),
                  Constructor
                    (86,
                      cons,
                      Constant
                        (86,
                          Int(4)),
                      Constructor
                        (86,
                          [])))
            ]))
    ])

94
Value
  (non_rec, @.,
    [
      ((p_c, [ A ], [ (x, A) ], Type (unit)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (94,
                    Variable
                      (94,
                        OCaml.Pervasives.print_char),
                    [
                      Constant
                        (94,
                          Char("c"))
                    ]))
            ]))
    ])

95
Value
  (non_rec, @.,
    [
      ((p_s, [ A ], [ (x, A) ], Type (unit)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (95,
                    Variable
                      (95,
                        OCaml.Pervasives.print_string),
                    [
                      Constant
                        (95,
                          String("str"))
                    ]))
            ]))
    ])

96
Value
  (non_rec, @.,
    [
      ((p_n, [ A ], [ (x, A) ], Type (unit)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (96,
                    Variable
                      (96,
                        OCaml.Pervasives.print_int),
                    [
                      Constant
                        (96,
                          Int(12))
                    ]))
            ]))
    ])

98
Value
  (non_rec, @.,
    [
      ((p_endline, [ A ], [ (x, A) ], Type (unit)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (98,
                    Variable
                      (98,
                        OCaml.Pervasives.print_endline),
                    [
                      Constant
                        (98,
                          String("str"))
                    ]))
            ]))
    ])

99
Value
  (non_rec, @.,
    [
      ((p_newline, [ A ], [ (x, A) ], Type (unit)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (99,
                    Variable
                      (99,
                        OCaml.Pervasives.print_newline),
                    [
                      Constructor
                        (99,
                          tt)
                    ]))
            ]))
    ])

102
Value
  (non_rec, @.,
    [
      ((perr_c, [ A ], [ (x, A) ], Type (unit)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (102,
                    Variable
                      (102,
                        OCaml.Pervasives.prerr_char),
                    [
                      Constant
                        (102,
                          Char("c"))
                    ]))
            ]))
    ])

103
Value
  (non_rec, @.,
    [
      ((perr_s, [ A ], [ (x, A) ], Type (unit)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (103,
                    Variable
                      (103,
                        OCaml.Pervasives.prerr_string),
                    [
                      Constant
                        (103,
                          String("str"))
                    ]))
            ]))
    ])

104
Value
  (non_rec, @.,
    [
      ((perr_n, [ A ], [ (x, A) ], Type (unit)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (104,
                    Variable
                      (104,
                        OCaml.Pervasives.prerr_int),
                    [
                      Constant
                        (104,
                          Int(12))
                    ]))
            ]))
    ])

106
Value
  (non_rec, @.,
    [
      ((perr_endline, [ A ], [ (x, A) ], Type (unit)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (106,
                    Variable
                      (106,
                        OCaml.Pervasives.prerr_endline),
                    [
                      Constant
                        (106,
                          String("str"))
                    ]))
            ]))
    ])

107
Value
  (non_rec, @.,
    [
      ((perr_newline, [ A ], [ (x, A) ], Type (unit)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (107,
                    Variable
                      (107,
                        OCaml.Pervasives.prerr_newline),
                    [
                      Constructor
                        (107,
                          tt)
                    ]))
            ]))
    ])

110
Value
  (non_rec, @.,
    [
      ((r_s, [ A ], [ (x, A) ], Type (string)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (110,
                    Variable
                      (110,
                        OCaml.Pervasives.read_line),
                    [
                      Constructor
                        (110,
                          tt)
                    ]))
            ]))
    ])

111
Value
  (non_rec, @.,
    [
      ((r_n, [ A ], [ (x, A) ], Type (Z)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Apply
                  (111,
                    Variable
                      (111,
                        OCaml.Pervasives.read_int),
                    [
                      Constructor
                        (111,
                          tt)
                    ]))
            ]))
    ])
