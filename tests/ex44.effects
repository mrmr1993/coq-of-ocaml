3
Value
  (non_rec, @.,
    [
      ((temp, [ ], [ ], Type (unit)),
        Apply
          ((3, Effect ([ ], .)),
            Variable ((3, Effect ([ ], .)), OCaml.Pervasives.ignore),
            [
              Apply
                ((3, Effect ([ ], .)),
                  Variable
                    ((3,
                      Effect
                        ([
                        ],
                          .)),
                      Z.add),
                  [
                    Constant
                      ((3,
                        Effect
                          ([
                          ],
                            .)),
                        Int(1));
                    Constant
                      ((3,
                        Effect
                          ([
                          ],
                            .)),
                        Int(1))
                  ])
            ]))
    ])

5
Value
  (non_rec, @.,
    [
      ((temp_1, [ ], [ ], (Type (Z) * Type (string))),
        Tuple
          ((5, Effect ([ ], .)), Constant ((5, Effect ([ ], .)), Int(15)),
            Constant ((5, Effect ([ ], .)), String("hi"))))
    ])

5
Value
  (non_rec, @.,
    [
      ((a, [ ], [ ], Type (Z)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), temp_1),
            [ (Tuple (a, b), Variable ((?, Effect ([ ], .)), a)) ]))
    ])

5
Value
  (non_rec, @.,
    [
      ((b, [ ], [ ], Type (string)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), temp_1),
            [ (Tuple (a, b), Variable ((?, Effect ([ ], .)), b)) ]))
    ])

7
Inductive a (= a_1):
  ([ ], [ (A, [ Type (Z); Type (bool) ]) ])

9
Value
  (non_rec, @.,
    [
      ((temp_2, [ ], [ ], Type (a_1)),
        Constructor
          ((9, Effect ([ ], .)), A,
            Constant ((9, Effect ([ ], .)), Int(15)),
            Constructor ((9, Effect ([ ], .)), true)))
    ])

9
Value
  (non_rec, @.,
    [
      ((i, [ ], [ ], Type (Z)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), temp_2),
            [ (Constructor (A, i, j), Variable ((?, Effect ([ ], .)), i)) ]))
    ])

9
Value
  (non_rec, @.,
    [
      ((j, [ ], [ ], Type (bool)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), temp_2),
            [ (Constructor (A, i, j), Variable ((?, Effect ([ ], .)), j)) ]))
    ])

11
Record b (= b_1):
  ([ ], [ (first, Type (Z)); (second, Type (bool)); (third, Type (string)) ])

13
Value
  (non_rec, @.,
    [
      ((b_val, [ ], [ ], Type (b_1)),
        Record
          ((13, Effect ([ ], .)), None,
            (first, Some Constant ((13, Effect ([ ], .)), Int(12))),
            (second, Some Constructor ((13, Effect ([ ], .)), false)),
            (third,
              Some Constant ((13, Effect ([ ], .)), String("hello")))))
    ])

15
Value
  (non_rec, @.,
    [
      ((hi, [ ], [ ], Type (Z)),
        Match
          ((15, Effect ([ ], .)), Variable ((15, Effect ([ ], .)), b_val),
            [
              (Record ((first, hi)),
                Variable ((15, Effect ([ ], .)), hi))
            ]))
    ])

16
Value
  (non_rec, @.,
    [
      ((hey, [ ], [ ], Type (bool)),
        Match
          ((16, Effect ([ ], .)), Variable ((16, Effect ([ ], .)), b_val),
            [
              (Record ((second, hey)),
                Variable ((16, Effect ([ ], .)), hey))
            ]))
    ])

17
Value
  (non_rec, @.,
    [ ((temp_5, [ ], [ ], Type (b_1)), Variable ((17, Effect ([ ], .)), b_val)) ])

17
Value
  (non_rec, @.,
    [
      ((hello, [ ], [ ], Type (string)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), temp_5),
            [
              (Record ((second, hey (= hey_1)), (third, hello)),
                Variable ((?, Effect ([ ], .)), hello))
            ]))
    ])

17
Value
  (non_rec, @.,
    [
      ((hey (= hey_1), [ ], [ ], Type (bool)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), temp_5),
            [
              (Record ((second, hey (= hey_1)), (third, hello)),
                Variable ((?, Effect ([ ], .)), hey_1))
            ]))
    ])

19
Value
  (non_rec, @.,
    [
      ((temp_6, [ ], [ ], Type (b_1)), Variable ((19, Effect ([ ], .)), b_val));
      ((temp_7, [ ], [ ], Type (b_1)), Variable ((20, Effect ([ ], .)), b_val));
      ((number1b, [ ], [ ], Type (Z)),
        Match
          ((21, Effect ([ ], .)), Variable ((21, Effect ([ ], .)), b_val),
            [
              (Record ((first, number1b)),
                Variable
                  ((21, Effect ([ ], .)),
                    number1b))
            ]))
    ])

19
Value
  (non_rec, @.,
    [
      ((number1a, [ ], [ ], Type (Z)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), temp_6),
            [
              (Record ((first, number1a), (second, number2a)),
                Variable
                  ((?, Effect ([ ], .)),
                    number1a))
            ]))
    ])

19
Value
  (non_rec, @.,
    [
      ((number2a, [ ], [ ], Type (bool)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), temp_6),
            [
              (Record ((first, number1a), (second, number2a)),
                Variable
                  ((?, Effect ([ ], .)),
                    number2a))
            ]))
    ])

19
Value
  (non_rec, @.,
    [
      ((number2b, [ ], [ ], Type (bool)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), temp_7),
            [
              (Record ((second, number2b), (third, number3)),
                Variable
                  ((?, Effect ([ ], .)),
                    number2b))
            ]))
    ])

19
Value
  (non_rec, @.,
    [
      ((number3, [ ], [ ], Type (string)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), temp_7),
            [
              (Record ((second, number2b), (third, number3)),
                Variable ((?, Effect ([ ], .)), number3))
            ]))
    ])

23
Value
  (non_rec, @.,
    [
      ((temp_9, [ ], [ ], Type (b_1)),
        Record
          ((24, Effect ([ ], .)), None,
            (first, Some Variable ((24, Effect ([ ], .)), hi)),
            (second, Some Variable ((24, Effect ([ ], .)), hey_1)),
            (third, Some Variable ((24, Effect ([ ], .)), hello))))
    ])

23
Value
  (non_rec, @.,
    [
      ((first (= first_1), [ ], [ ], Type (Z)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), temp_9),
            [
              (Record
                ((first, first (= first_1)),
                  (second,
                    second
                    (=
                    second_1)),
                  (third,
                    third
                    (=
                    third_1))),
                Variable ((?, Effect ([ ], .)), first_1))
            ]))
    ])

23
Value
  (non_rec, @.,
    [
      ((second (= second_1), [ ], [ ], Type (bool)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), temp_9),
            [
              (Record
                ((first, first (= first_1)),
                  (second,
                    second
                    (=
                    second_1)),
                  (third,
                    third
                    (=
                    third_1))),
                Variable
                  ((?, Effect ([ ], .)),
                    second_1))
            ]))
    ])

23
Value
  (non_rec, @.,
    [
      ((third (= third_1), [ ], [ ], Type (string)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), temp_9),
            [
              (Record
                ((first, first (= first_1)),
                  (second,
                    second
                    (=
                    second_1)),
                  (third,
                    third
                    (=
                    third_1))),
                Variable ((?, Effect ([ ], .)), third_1))
            ]))
    ])

26
Record c:
  ([ a ], [ (f, (a -> Type (Z))) ])

28
Value
  (non_rec, @.,
    [
      ((c_val, [ A ], [ ], Type (c, A)),
        Record
          ((28, Effect ([ ], .)), None,
            (f,
              Some
                Function
                  ((28, Effect ([ ], . -> .)), x,
                    Match
                      ((?, Effect ([ ], .)),
                        Variable ((?, Effect ([ ], .)), x),
                        [
                          (Any,
                            Constant
                              ((28,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Int(12)))
                        ])))))
    ])

30
Value
  (non_rec, @.,
    [
      ((f (= f_1), [ A ], [ ], (A -> Type (Z))),
        Match
          ((30, Effect ([ ], .)), Variable ((30, Effect ([ ], .)), c_val),
            [
              (Record ((f, f (= f_1))),
                Variable ((30, Effect ([ ], .)), f_1))
            ]))
    ])

32
Inductive d:
  ([ a ], [ (F, [ (a -> Type (Z)) ]) ])

34
Value
  (non_rec, @.,
    [
      ((d_val, [ A ], [ ], Type (d, A)),
        Constructor
          ((34, Effect ([ ], .)), F,
            Function
              ((34, Effect ([ ], . -> .)), x,
                Match
                  ((?, Effect ([ ], .)),
                    Variable ((?, Effect ([ ], .)), x),
                    [
                      (Any,
                        Constant
                          ((34,
                            Effect
                              ([
                              ],
                                .)),
                            Int(12)))
                    ]))))
    ])

36
Value
  (non_rec, @.,
    [
      ((g, [ A ], [ ], (A -> Type (Z))),
        Match
          ((36, Effect ([ ], .)), Variable ((36, Effect ([ ], .)), d_val),
            [ (Constructor (F, g), Variable ((36, Effect ([ ], .)), g)) ]))
    ])
