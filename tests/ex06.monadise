3
Value
  (rec, @.,
    [
      ((map_rec, [ A; B ],
        [ (counter, Type (nat)); (f, (A -> B)); (l, Type (list, A)) ],
        Monad ([ Type (NonTermination) ], Type (list, B))),
        Match
          (?, Variable (?, Ex06/counter),
            [
              (Constructor (O),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S, counter),
                Match
                  (4,
                    Variable
                      (4,
                        Ex06/l),
                    [
                      (Constructor
                        ([]),
                        Return
                          (?,
                            Constructor
                              (5,
                                [])));
                      (Constructor
                        (cons,
                          x,
                          xs),
                        Bind
                          (?,
                            Apply
                              (6,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        Ex06/map_rec),
                                    [
                                      Variable
                                        (?,
                                          Ex06/counter)
                                    ]),
                                [
                                  Variable
                                    (6,
                                      Ex06/f);
                                  Variable
                                    (6,
                                      Ex06/xs)
                                ]),
                            Some
                              x_1,
                            Return
                              (?,
                                Constructor
                                  (6,
                                    cons,
                                    Apply
                                      (6,
                                        Variable
                                          (6,
                                            Ex06/f),
                                        [
                                          Variable
                                            (6,
                                              Ex06/x)
                                        ]),
                                    Variable
                                      (?,
                                        Ex06/x_1)))))
                    ]))
            ]))
    ])

3
Value
  (non_rec, @.,
    [
      ((map, [ A; B ], [ (f, (A -> B)); (l, Type (list, A)) ],
        Monad ([ Type (Counter); Type (NonTermination) ], Type (list, B))),
        Bind
          (?,
            Lift
              (?, [ Type (Counter) ],
                [ Type (Counter); Type (NonTermination) ],
                Apply (?, Variable (?, read_counter), [ Tuple (?) ])),
            Some x,
            Lift
              (?, [ Type (NonTermination) ],
                [ Type (Counter); Type (NonTermination) ],
                Apply
                  (?, Variable (?, Ex06/map_rec),
                    [
                      Variable (?, Ex06/x);
                      Variable (?, Ex06/f);
                      Variable (?, Ex06/l)
                    ]))))
    ])

8
Value
  (rec, @.,
    [
      ((fold_rec, [ A; B ],
        [
          (counter, Type (nat));
          (f, (A -> (B -> A)));
          (a, A);
          (l, Type (list, B))
        ], Monad ([ Type (NonTermination) ], A)),
        Match
          (?, Variable (?, Ex06/counter),
            [
              (Constructor (O),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S, counter),
                Match
                  (9,
                    Variable
                      (9,
                        Ex06/l),
                    [
                      (Constructor
                        ([]),
                        Return
                          (?,
                            Variable
                              (10,
                                Ex06/a)));
                      (Constructor
                        (cons,
                          x,
                          xs),
                        Apply
                          (11,
                            Apply
                              (?,
                                Variable
                                  (?,
                                    Ex06/fold_rec),
                                [
                                  Variable
                                    (?,
                                      Ex06/counter)
                                ]),
                            [
                              Variable
                                (11,
                                  Ex06/f);
                              Apply
                                (11,
                                  Variable
                                    (11,
                                      Ex06/f),
                                  [
                                    Variable
                                      (11,
                                        Ex06/a);
                                    Variable
                                      (11,
                                        Ex06/x)
                                  ]);
                              Variable
                                (11,
                                  Ex06/xs)
                            ]))
                    ]))
            ]))
    ])

8
Value
  (non_rec, @.,
    [
      ((fold, [ A; B ], [ (f, (A -> (B -> A))); (a, A); (l, Type (list, B)) ],
        Monad ([ Type (Counter); Type (NonTermination) ], A)),
        Bind
          (?,
            Lift
              (?, [ Type (Counter) ],
                [ Type (Counter); Type (NonTermination) ],
                Apply (?, Variable (?, read_counter), [ Tuple (?) ])),
            Some x,
            Lift
              (?, [ Type (NonTermination) ],
                [ Type (Counter); Type (NonTermination) ],
                Apply
                  (?, Variable (?, Ex06/fold_rec),
                    [
                      Variable (?, Ex06/x);
                      Variable (?, Ex06/f);
                      Variable (?, Ex06/a);
                      Variable (?, Ex06/l)
                    ]))))
    ])

13
Value
  (non_rec, @.,
    [
      ((l, [ ], [ ], Type (list, Type (Z))),
        Constructor
          (13, cons, Constant (13, Int(5)),
            Constructor
              (13, cons, Constant (13, Int(6)),
                Constructor
                  (13, cons, Constant (13, Int(7)),
                    Constructor
                      (13, cons, Constant (13, Int(2)),
                        Constructor (13, []))))))
    ])

15
Value
  (non_rec, @.,
    [
      ((n, [ A ],
        [ (incr, (Type (Z) -> A)); (plus, (Type (Z) -> (A -> Type (Z)))) ],
        Monad ([ Type (Counter); Type (NonTermination) ], Type (Z))),
        Bind
          (?,
            Apply
              (16, Variable (16, Ex06/map),
                [ Variable (16, Ex06/incr); Variable (16, Ex06/l) ]),
            Some x,
            Apply
              (16, Variable (16, Ex06/fold),
                [
                  Function
                    (16, x,
                      Function
                        (16,
                          y,
                          Apply
                            (16,
                              Variable
                                (16,
                                  Ex06/plus),
                              [
                                Variable
                                  (16,
                                    Ex06/x);
                                Variable
                                  (16,
                                    Ex06/y)
                              ])));
                  Constant (16, Int(0));
                  Variable (?, Ex06/x)
                ])))
    ])
