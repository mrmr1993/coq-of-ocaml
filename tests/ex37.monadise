3 Module A:
  4 Value (non_rec, @., [ ((a, [ ], [ ], Type (Z/4)), Constant (4, Int(5))) ])
  
  6
  Value
    (non_rec, @.,
      [
        ((c, [ A ], [ (x, Type (string/4)) ], Monad ([ OCaml.Failure/4 ], A)),
          Apply
            (6, Variable (6, OCaml.Pervasives.failwith/4),
              [ Variable (6, x/0) ]))
      ])

9 Include A/0

11
Value
  (non_rec, @.,
    [
      ((b, [ ], [ ], Type (Z/5)),
        Apply
          (11, Variable (11, Z.add/5),
            [ Variable (11, a/1); Constant (11, Int(2)) ]))
    ])

13
Value
  (non_rec, @.,
    [
      ((d, [ A ], [ (b, Type (bool/5)) ], Monad ([ OCaml.Failure/5 ], A)),
        IfThenElse
          (13, Variable (13, b/0),
            Apply
              (13, Variable (13, c/1), [ Constant (13, String("true")) ]),
            Apply
              (13, Variable (13, c/1),
                [ Constant (13, String("false")) ])))
    ])
