3 Module Ord:
  4 Abstract (t, [ ])
  
  5
  Value
    (non_rec, @.,
      [
        ((compare, [ ], [ (x, Type (Ex33.Ord/t)) ],
          (Type (Ex33.Ord/t) -> Type (Z))),
          Match
            (5, Variable (?, Ex33.Ord/x),
              [
                (Any,
                  Function
                    (5,
                      x_1,
                      Match
                        (5,
                          Variable
                            (?,
                              Ex33.Ord/x_1),
                          [
                            (Any,
                              Constant
                                (5,
                                  Int(0)))
                          ])))
              ]))
      ])

8 Synonym (key, [ ], Type (Ex33/Ord.t))

10
Inductive t:
  ([ a ],
    [
      (Empty, [ ]);
      (Node,
        [ Type (Ex33/t, a); Type (Ex33/key); a; Type (Ex33/t, a); Type (Z) ])
    ])

14
Value
  (non_rec, @.,
    [
      ((height, [ A ], [ (x, Type (Ex33/t, A)) ], Type (Z)),
        Match
          (15, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty), Constant (15, Int(0)));
              (Constructor (Ex33/Node, Any, Any, Any, Any, h),
                Variable (16, Ex33/h))
            ]))
    ])

18
Value
  (non_rec, @.,
    [
      ((create, [ A ],
        [
          (l, Type (Ex33/t, A));
          (x, Type (Ex33/key));
          (d, A);
          (r, Type (Ex33/t, A))
        ], Type (Ex33/t, A)),
        LetVar ? hl =
          Apply (19, Variable (19, Ex33/height), [ Variable (19, Ex33/l) ])
          in
        LetVar ? hr =
          Apply (20, Variable (20, Ex33/height), [ Variable (20, Ex33/r) ])
          in
        Constructor
          (21, Ex33/Node, Variable (21, Ex33/l), Variable (21, Ex33/x),
            Variable (21, Ex33/d), Variable (21, Ex33/r),
            IfThenElse
              (21,
                Apply
                  (21, Variable (21, OCaml/Pervasives.ge),
                    [
                      Variable (21, Ex33/hl);
                      Variable (21, Ex33/hr)
                    ]),
                Apply
                  (21, Variable (21, Z.add),
                    [
                      Variable (21, Ex33/hl);
                      Constant (21, Int(1))
                    ]),
                Apply
                  (21, Variable (21, Z.add),
                    [
                      Variable (21, Ex33/hr);
                      Constant (21, Int(1))
                    ]))))
    ])

23
Value
  (non_rec, @.,
    [
      ((singleton, [ A ], [ (x, Type (Ex33/key)); (d, A) ], Type (Ex33/t, A)),
        Constructor
          (23, Ex33/Node, Constructor (23, Ex33/Empty),
            Variable (23, Ex33/x), Variable (23, Ex33/d),
            Constructor (23, Ex33/Empty), Constant (23, Int(1))))
    ])

25
Value
  (non_rec, @.,
    [
      ((bal, [ A ],
        [
          (l, Type (Ex33/t, A));
          (x, Type (Ex33/key));
          (d, A);
          (r, Type (Ex33/t, A))
        ],
        Monad
          ([ Type (OCaml.exception, Type (OCaml.invalid_argument)) ],
            Type (Ex33/t, A))),
        LetVar ? hl =
          Match
            (26, Variable (26, Ex33/l),
              [
                (Constructor (Ex33/Empty), Constant (26, Int(0)));
                (Constructor (Ex33/Node, Any, Any, Any, Any, h),
                  Variable (26, Ex33/h))
              ]) in
        LetVar ? hr =
          Match
            (27, Variable (27, Ex33/r),
              [
                (Constructor (Ex33/Empty), Constant (27, Int(0)));
                (Constructor (Ex33/Node, Any, Any, Any, Any, h),
                  Variable (27, Ex33/h))
              ]) in
        IfThenElse
          (28,
            Apply
              (28, Variable (28, OCaml/Pervasives.gt),
                [
                  Variable (28, Ex33/hl);
                  Apply
                    (28,
                      Variable
                        (28,
                          Z.add),
                      [
                        Variable
                          (28,
                            Ex33/hr);
                        Constant
                          (28,
                            Int(2))
                      ])
                ]),
            Match
              (28, Variable (29, Ex33/l),
                [
                  (Constructor (Ex33/Empty),
                    Apply
                      (30,
                        Variable
                          (30,
                            OCaml/Pervasives.invalid_arg),
                        [
                          Constant
                            (30,
                              String("Map.bal"))
                        ]));
                  (Constructor (Ex33/Node, ll, lv, ld, lr, Any),
                    IfThenElse
                      (32,
                        Apply
                          (32,
                            Variable
                              (32,
                                OCaml/Pervasives.ge),
                            [
                              Apply
                                (32,
                                  Variable
                                    (32,
                                      Ex33/height),
                                  [
                                    Variable
                                      (32,
                                        Ex33/ll)
                                  ]);
                              Apply
                                (32,
                                  Variable
                                    (32,
                                      Ex33/height),
                                  [
                                    Variable
                                      (32,
                                        Ex33/lr)
                                  ])
                            ]),
                        Return
                          (?,
                            Apply
                              (33,
                                Variable
                                  (33,
                                    Ex33/create),
                                [
                                  Variable
                                    (33,
                                      Ex33/ll);
                                  Variable
                                    (33,
                                      Ex33/lv);
                                  Variable
                                    (33,
                                      Ex33/ld);
                                  Apply
                                    (33,
                                      Variable
                                        (33,
                                          Ex33/create),
                                      [
                                        Variable
                                          (33,
                                            Ex33/lr);
                                        Variable
                                          (33,
                                            Ex33/x);
                                        Variable
                                          (33,
                                            Ex33/d);
                                        Variable
                                          (33,
                                            Ex33/r)
                                      ])
                                ])),
                        Match
                          (34,
                            Variable
                              (35,
                                Ex33/lr),
                            [
                              (Constructor
                                (Ex33/Empty),
                                Apply
                                  (36,
                                    Variable
                                      (36,
                                        OCaml/Pervasives.invalid_arg),
                                    [
                                      Constant
                                        (36,
                                          String("Map.bal"))
                                    ]));
                              (Constructor
                                (Ex33/Node,
                                  lrl,
                                  lrv,
                                  lrd,
                                  lrr,
                                  Any),
                                Return
                                  (?,
                                    Apply
                                      (38,
                                        Variable
                                          (38,
                                            Ex33/create),
                                        [
                                          Apply
                                            (38,
                                              Variable
                                                (38,
                                                  Ex33/create),
                                              [
                                                Variable
                                                  (38,
                                                    Ex33/ll);
                                                Variable
                                                  (38,
                                                    Ex33/lv);
                                                Variable
                                                  (38,
                                                    Ex33/ld);
                                                Variable
                                                  (38,
                                                    Ex33/lrl)
                                              ]);
                                          Variable
                                            (38,
                                              Ex33/lrv);
                                          Variable
                                            (38,
                                              Ex33/lrd);
                                          Apply
                                            (38,
                                              Variable
                                                (38,
                                                  Ex33/create),
                                              [
                                                Variable
                                                  (38,
                                                    Ex33/lrr);
                                                Variable
                                                  (38,
                                                    Ex33/x);
                                                Variable
                                                  (38,
                                                    Ex33/d);
                                                Variable
                                                  (38,
                                                    Ex33/r)
                                              ])
                                        ])))
                            ])))
                ]),
            IfThenElse
              (40,
                Apply
                  (40, Variable (40, OCaml/Pervasives.gt),
                    [
                      Variable (40, Ex33/hr);
                      Apply
                        (40,
                          Variable
                            (40,
                              Z.add),
                          [
                            Variable
                              (40,
                                Ex33/hl);
                            Constant
                              (40,
                                Int(2))
                          ])
                    ]),
                Match
                  (40, Variable (41, Ex33/r),
                    [
                      (Constructor (Ex33/Empty),
                        Apply
                          (42,
                            Variable
                              (42,
                                OCaml/Pervasives.invalid_arg),
                            [
                              Constant
                                (42,
                                  String("Map.bal"))
                            ]));
                      (Constructor
                        (Ex33/Node,
                          rl,
                          rv,
                          rd,
                          rr,
                          Any),
                        IfThenElse
                          (44,
                            Apply
                              (44,
                                Variable
                                  (44,
                                    OCaml/Pervasives.ge),
                                [
                                  Apply
                                    (44,
                                      Variable
                                        (44,
                                          Ex33/height),
                                      [
                                        Variable
                                          (44,
                                            Ex33/rr)
                                      ]);
                                  Apply
                                    (44,
                                      Variable
                                        (44,
                                          Ex33/height),
                                      [
                                        Variable
                                          (44,
                                            Ex33/rl)
                                      ])
                                ]),
                            Return
                              (?,
                                Apply
                                  (45,
                                    Variable
                                      (45,
                                        Ex33/create),
                                    [
                                      Apply
                                        (45,
                                          Variable
                                            (45,
                                              Ex33/create),
                                          [
                                            Variable
                                              (45,
                                                Ex33/l);
                                            Variable
                                              (45,
                                                Ex33/x);
                                            Variable
                                              (45,
                                                Ex33/d);
                                            Variable
                                              (45,
                                                Ex33/rl)
                                          ]);
                                      Variable
                                        (45,
                                          Ex33/rv);
                                      Variable
                                        (45,
                                          Ex33/rd);
                                      Variable
                                        (45,
                                          Ex33/rr)
                                    ])),
                            Match
                              (46,
                                Variable
                                  (47,
                                    Ex33/rl),
                                [
                                  (Constructor
                                    (Ex33/Empty),
                                    Apply
                                      (48,
                                        Variable
                                          (48,
                                            OCaml/Pervasives.invalid_arg),
                                        [
                                          Constant
                                            (48,
                                              String("Map.bal"))
                                        ]));
                                  (Constructor
                                    (Ex33/Node,
                                      rll,
                                      rlv,
                                      rld,
                                      rlr,
                                      Any),
                                    Return
                                      (?,
                                        Apply
                                          (50,
                                            Variable
                                              (50,
                                                Ex33/create),
                                            [
                                              Apply
                                                (50,
                                                  Variable
                                                    (50,
                                                      Ex33/create),
                                                  [
                                                    Variable
                                                      (50,
                                                        Ex33/l);
                                                    Variable
                                                      (50,
                                                        Ex33/x);
                                                    Variable
                                                      (50,
                                                        Ex33/d);
                                                    Variable
                                                      (50,
                                                        Ex33/rll)
                                                  ]);
                                              Variable
                                                (50,
                                                  Ex33/rlv);
                                              Variable
                                                (50,
                                                  Ex33/rld);
                                              Apply
                                                (50,
                                                  Variable
                                                    (50,
                                                      Ex33/create),
                                                  [
                                                    Variable
                                                      (50,
                                                        Ex33/rlr);
                                                    Variable
                                                      (50,
                                                        Ex33/rv);
                                                    Variable
                                                      (50,
                                                        Ex33/rd);
                                                    Variable
                                                      (50,
                                                        Ex33/rr)
                                                  ])
                                            ])))
                                ])))
                    ]),
                Return
                  (?,
                    Constructor
                      (53, Ex33/Node, Variable (53, Ex33/l),
                        Variable (53, Ex33/x),
                        Variable (53, Ex33/d),
                        Variable (53, Ex33/r),
                        IfThenElse
                          (53,
                            Apply
                              (53,
                                Variable
                                  (53,
                                    OCaml/Pervasives.ge),
                                [
                                  Variable
                                    (53,
                                      Ex33/hl);
                                  Variable
                                    (53,
                                      Ex33/hr)
                                ]),
                            Apply
                              (53, Variable (53, Z.add),
                                [
                                  Variable
                                    (53,
                                      Ex33/hl);
                                  Constant
                                    (53,
                                      Int(1))
                                ]),
                            Apply
                              (53, Variable (53, Z.add),
                                [
                                  Variable
                                    (53,
                                      Ex33/hr);
                                  Constant
                                    (53,
                                      Int(1))
                                ])))))))
    ])

55
Value
  (non_rec, @.,
    [ ((empty, [ A ], [ ], Type (Ex33/t, A)), Constructor (55, Ex33/Empty)) ])

57
Value
  (non_rec, @.,
    [
      ((is_empty, [ A ], [ (x, Type (Ex33/t, A)) ], Type (bool)),
        Match
          (57, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty), Constructor (57, true));
              (Any, Constructor (57, false))
            ]))
    ])

59
Value
  (rec, @coq_rec,
    [
      ((add, [ A ],
        [ (x, Type (Ex33/key)); (data, A); (x_1, Type (Ex33/t, A)) ],
        Monad
          ([ Type (OCaml.exception, Type (OCaml.invalid_argument)) ],
            Type (Ex33/t, A))),
        Match
          (60, Variable (?, Ex33/x_1),
            [
              (Constructor (Ex33/Empty),
                Return
                  (?,
                    Constructor
                      (61,
                        Ex33/Node,
                        Constructor
                          (61,
                            Ex33/Empty),
                        Variable
                          (61,
                            Ex33/x),
                        Variable
                          (61,
                            Ex33/data),
                        Constructor
                          (61,
                            Ex33/Empty),
                        Constant
                          (61,
                            Int(1)))));
              (Constructor (Ex33/Node, l, v, d, r, h),
                LetVar ? c =
                  Apply
                    (63,
                      Variable
                        (63,
                          Ex33/Ord.compare),
                      [
                        Variable
                          (63,
                            Ex33/x);
                        Variable
                          (63,
                            Ex33/v)
                      ])
                  in
                IfThenElse
                  (64,
                    Apply
                      (64,
                        Variable
                          (64,
                            equiv_decb),
                        [
                          Variable
                            (64,
                              Ex33/c);
                          Constant
                            (64,
                              Int(0))
                        ]),
                    Return
                      (?,
                        Constructor
                          (65,
                            Ex33/Node,
                            Variable
                              (65,
                                Ex33/l),
                            Variable
                              (65,
                                Ex33/x),
                            Variable
                              (65,
                                Ex33/data),
                            Variable
                              (65,
                                Ex33/r),
                            Variable
                              (65,
                                Ex33/h))),
                    IfThenElse
                      (66,
                        Apply
                          (66,
                            Variable
                              (66,
                                OCaml/Pervasives.lt),
                            [
                              Variable
                                (66,
                                  Ex33/c);
                              Constant
                                (66,
                                  Int(0))
                            ]),
                        Bind
                          (?,
                            Apply
                              (67,
                                Variable
                                  (67,
                                    Ex33/add),
                                [
                                  Variable
                                    (67,
                                      Ex33/x);
                                  Variable
                                    (67,
                                      Ex33/data);
                                  Variable
                                    (67,
                                      Ex33/l)
                                ]),
                            Some
                              x_2,
                            Apply
                              (67,
                                Variable
                                  (67,
                                    Ex33/bal),
                                [
                                  Variable
                                    (?,
                                      Ex33/x_2);
                                  Variable
                                    (67,
                                      Ex33/v);
                                  Variable
                                    (67,
                                      Ex33/d);
                                  Variable
                                    (67,
                                      Ex33/r)
                                ])),
                        Bind
                          (?,
                            Apply
                              (69,
                                Variable
                                  (69,
                                    Ex33/add),
                                [
                                  Variable
                                    (69,
                                      Ex33/x);
                                  Variable
                                    (69,
                                      Ex33/data);
                                  Variable
                                    (69,
                                      Ex33/r)
                                ]),
                            Some
                              x_2,
                            Apply
                              (69,
                                Variable
                                  (69,
                                    Ex33/bal),
                                [
                                  Variable
                                    (69,
                                      Ex33/l);
                                  Variable
                                    (69,
                                      Ex33/v);
                                  Variable
                                    (69,
                                      Ex33/d);
                                  Variable
                                    (?,
                                      Ex33/x_2)
                                ])))))
            ]))
    ])

72
Value
  (rec, @coq_rec,
    [
      ((find, [ A ], [ (x, Type (Ex33/Ord.t)); (x_1, Type (Ex33/t, A)) ],
        Monad ([ Type (OCaml.exception, Type (OCaml/not_found)) ], A)),
        Match
          (73, Variable (?, Ex33/x_1),
            [
              (Constructor (Ex33/Empty),
                Apply
                  (74,
                    Variable
                      (74,
                        OCaml/Pervasives.raise),
                    [
                      Constructor
                        (74,
                          OCaml/Not_found,
                          Tuple
                            (?))
                    ]));
              (Constructor (Ex33/Node, l, v, d, r, Any),
                LetVar ? c =
                  Apply
                    (76,
                      Variable
                        (76,
                          Ex33/Ord.compare),
                      [
                        Variable
                          (76,
                            Ex33/x);
                        Variable
                          (76,
                            Ex33/v)
                      ])
                  in
                IfThenElse
                  (77,
                    Apply
                      (77,
                        Variable
                          (77,
                            equiv_decb),
                        [
                          Variable
                            (77,
                              Ex33/c);
                          Constant
                            (77,
                              Int(0))
                        ]),
                    Return
                      (?,
                        Variable
                          (77,
                            Ex33/d)),
                    Apply
                      (78,
                        Variable
                          (78,
                            Ex33/find),
                        [
                          Variable
                            (78,
                              Ex33/x);
                          IfThenElse
                            (78,
                              Apply
                                (78,
                                  Variable
                                    (78,
                                      OCaml/Pervasives.lt),
                                  [
                                    Variable
                                      (78,
                                        Ex33/c);
                                    Constant
                                      (78,
                                        Int(0))
                                  ]),
                              Variable
                                (78,
                                  Ex33/l),
                              Variable
                                (78,
                                  Ex33/r))
                        ])))
            ]))
    ])

81
Value
  (rec, @coq_rec,
    [
      ((mem, [ A ], [ (x, Type (Ex33/Ord.t)); (x_1, Type (Ex33/t, A)) ],
        Type (bool)),
        Match
          (82, Variable (?, Ex33/x_1),
            [
              (Constructor (Ex33/Empty), Constructor (83, false));
              (Constructor (Ex33/Node, l, v, d, r, Any),
                LetVar ? c =
                  Apply
                    (85,
                      Variable
                        (85,
                          Ex33/Ord.compare),
                      [
                        Variable
                          (85,
                            Ex33/x);
                        Variable
                          (85,
                            Ex33/v)
                      ])
                  in
                Apply
                  (86,
                    Variable
                      (86,
                        orb),
                    [
                      Apply
                        (86,
                          Variable
                            (86,
                              equiv_decb),
                          [
                            Variable
                              (86,
                                Ex33/c);
                            Constant
                              (86,
                                Int(0))
                          ]);
                      Apply
                        (86,
                          Variable
                            (86,
                              Ex33/mem),
                          [
                            Variable
                              (86,
                                Ex33/x);
                            IfThenElse
                              (86,
                                Apply
                                  (86,
                                    Variable
                                      (86,
                                        OCaml/Pervasives.lt),
                                    [
                                      Variable
                                        (86,
                                          Ex33/c);
                                      Constant
                                        (86,
                                          Int(0))
                                    ]),
                                Variable
                                  (86,
                                    Ex33/l),
                                Variable
                                  (86,
                                    Ex33/r))
                          ])
                    ]))
            ]))
    ])

89
Value
  (rec, @coq_rec,
    [
      ((min_binding, [ A ], [ (x, Type (Ex33/t, A)) ],
        Monad
          ([ Type (OCaml.exception, Type (OCaml/not_found)) ],
            (Type (Ex33/key) * A))),
        Match
          (90, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty),
                Apply
                  (90,
                    Variable
                      (90,
                        OCaml/Pervasives.raise),
                    [
                      Constructor
                        (90,
                          OCaml/Not_found,
                          Tuple
                            (?))
                    ]));
              (Constructor
                (Ex33/Node, Constructor (Ex33/Empty), x,
                  d, r, Any),
                Return
                  (?,
                    Tuple
                      (91,
                        Variable
                          (91,
                            Ex33/x),
                        Variable
                          (91,
                            Ex33/d))));
              (Constructor (Ex33/Node, l, x, d, r, Any),
                Apply
                  (92,
                    Variable
                      (92,
                        Ex33/min_binding),
                    [
                      Variable
                        (92,
                          Ex33/l)
                    ]))
            ]))
    ])

95
Value
  (rec, @coq_rec,
    [
      ((max_binding, [ A ], [ (x, Type (Ex33/t, A)) ],
        Monad
          ([ Type (OCaml.exception, Type (OCaml/not_found)) ],
            (Type (Ex33/key) * A))),
        Match
          (96, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty),
                Apply
                  (96,
                    Variable
                      (96,
                        OCaml/Pervasives.raise),
                    [
                      Constructor
                        (96,
                          OCaml/Not_found,
                          Tuple
                            (?))
                    ]));
              (Constructor
                (Ex33/Node, l, x, d,
                  Constructor
                    (Ex33/Empty),
                  Any),
                Return
                  (?,
                    Tuple
                      (97,
                        Variable
                          (97,
                            Ex33/x),
                        Variable
                          (97,
                            Ex33/d))));
              (Constructor (Ex33/Node, l, x, d, r, Any),
                Apply
                  (98,
                    Variable
                      (98,
                        Ex33/max_binding),
                    [
                      Variable
                        (98,
                          Ex33/r)
                    ]))
            ]))
    ])

101
Value
  (rec, @coq_rec,
    [
      ((remove_min_binding, [ A ], [ (x, Type (Ex33/t, A)) ],
        Monad
          ([ Type (OCaml.exception, Type (OCaml.invalid_argument)) ],
            Type (Ex33/t, A))),
        Match
          (102, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty),
                Apply
                  (102,
                    Variable
                      (102,
                        OCaml/Pervasives.invalid_arg),
                    [
                      Constant
                        (102,
                          String("Map.remove_min_elt"))
                    ]));
              (Constructor
                (Ex33/Node, Constructor (Ex33/Empty), x,
                  d, r, Any),
                Return (?, Variable (103, Ex33/r)));
              (Constructor (Ex33/Node, l, x, d, r, Any),
                Bind
                  (?,
                    Apply
                      (104,
                        Variable
                          (104,
                            Ex33/remove_min_binding),
                        [
                          Variable
                            (104,
                              Ex33/l)
                        ]),
                    Some
                      x_1,
                    Apply
                      (104,
                        Variable
                          (104,
                            Ex33/bal),
                        [
                          Variable
                            (?,
                              Ex33/x_1);
                          Variable
                            (104,
                              Ex33/x);
                          Variable
                            (104,
                              Ex33/d);
                          Variable
                            (104,
                              Ex33/r)
                        ])))
            ]))
    ])

107
Value
  (non_rec, @.,
    [
      ((remove_merge, [ A ], [ (t1, Type (Ex33/t, A)); (t2, Type (Ex33/t, A)) ],
        Monad
          ([
            Type (OCaml.exception, Type (OCaml.invalid_argument));
            Type (OCaml.exception, Type (OCaml/not_found))
          ], Type (Ex33/t, A))),
        Match
          (108,
            Tuple (108, Variable (108, Ex33/t1), Variable (108, Ex33/t2)),
            [
              (Tuple (Constructor (Ex33/Empty), t (= t_1)),
                Return (?, Variable (109, Ex33/t_1)));
              (Tuple (t (= t_1), Constructor (Ex33/Empty)),
                Return (?, Variable (110, Ex33/t_1)));
              (Tuple (Any, Any),
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          Type
                            (OCaml.exception,
                              Type
                                (OCaml/not_found))
                        ],
                        [
                          Type
                            (OCaml.exception,
                              Type
                                (OCaml.invalid_argument));
                          Type
                            (OCaml.exception,
                              Type
                                (OCaml/not_found))
                        ],
                        Apply
                          (112,
                            Variable
                              (112,
                                Ex33/min_binding),
                            [
                              Variable
                                (112,
                                  Ex33/t2)
                            ])),
                    Some
                      x,
                    Match
                      (112,
                        Variable
                          (?,
                            Ex33/x),
                        [
                          (Tuple
                            (x,
                              d),
                            Lift
                              (?,
                                [
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml.invalid_argument))
                                ],
                                [
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml.invalid_argument));
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml/not_found))
                                ],
                                Bind
                                  (?,
                                    Apply
                                      (113,
                                        Variable
                                          (113,
                                            Ex33/remove_min_binding),
                                        [
                                          Variable
                                            (113,
                                              Ex33/t2)
                                        ]),
                                    Some
                                      x_1,
                                    Apply
                                      (113,
                                        Variable
                                          (113,
                                            Ex33/bal),
                                        [
                                          Variable
                                            (113,
                                              Ex33/t1);
                                          Variable
                                            (113,
                                              Ex33/x);
                                          Variable
                                            (113,
                                              Ex33/d);
                                          Variable
                                            (?,
                                              Ex33/x_1)
                                        ]))))
                        ])))
            ]))
    ])

115
Value
  (rec, @coq_rec,
    [
      ((remove, [ A ], [ (x, Type (Ex33/Ord.t)); (x_1, Type (Ex33/t, A)) ],
        Monad
          ([
            Type (OCaml.exception, Type (OCaml.invalid_argument));
            Type (OCaml.exception, Type (OCaml/not_found))
          ], Type (Ex33/t, A))),
        Match
          (116, Variable (?, Ex33/x_1),
            [
              (Constructor (Ex33/Empty),
                Return
                  (?,
                    Constructor
                      (117,
                        Ex33/Empty)));
              (Constructor (Ex33/Node, l, v, d, r, h),
                LetVar ? c =
                  Apply
                    (119,
                      Variable
                        (119,
                          Ex33/Ord.compare),
                      [
                        Variable
                          (119,
                            Ex33/x);
                        Variable
                          (119,
                            Ex33/v)
                      ])
                  in
                IfThenElse
                  (120,
                    Apply
                      (120,
                        Variable
                          (120,
                            equiv_decb),
                        [
                          Variable
                            (120,
                              Ex33/c);
                          Constant
                            (120,
                              Int(0))
                        ]),
                    Apply
                      (121,
                        Variable
                          (121,
                            Ex33/remove_merge),
                        [
                          Variable
                            (121,
                              Ex33/l);
                          Variable
                            (121,
                              Ex33/r)
                        ]),
                    IfThenElse
                      (122,
                        Apply
                          (122,
                            Variable
                              (122,
                                OCaml/Pervasives.lt),
                            [
                              Variable
                                (122,
                                  Ex33/c);
                              Constant
                                (122,
                                  Int(0))
                            ]),
                        Bind
                          (?,
                            Apply
                              (123,
                                Variable
                                  (123,
                                    Ex33/remove),
                                [
                                  Variable
                                    (123,
                                      Ex33/x);
                                  Variable
                                    (123,
                                      Ex33/l)
                                ]),
                            Some
                              x_2,
                            Lift
                              (?,
                                [
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml.invalid_argument))
                                ],
                                [
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml.invalid_argument));
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml/not_found))
                                ],
                                Apply
                                  (123,
                                    Variable
                                      (123,
                                        Ex33/bal),
                                    [
                                      Variable
                                        (?,
                                          Ex33/x_2);
                                      Variable
                                        (123,
                                          Ex33/v);
                                      Variable
                                        (123,
                                          Ex33/d);
                                      Variable
                                        (123,
                                          Ex33/r)
                                    ]))),
                        Bind
                          (?,
                            Apply
                              (125,
                                Variable
                                  (125,
                                    Ex33/remove),
                                [
                                  Variable
                                    (125,
                                      Ex33/x);
                                  Variable
                                    (125,
                                      Ex33/r)
                                ]),
                            Some
                              x_2,
                            Lift
                              (?,
                                [
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml.invalid_argument))
                                ],
                                [
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml.invalid_argument));
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml/not_found))
                                ],
                                Apply
                                  (125,
                                    Variable
                                      (125,
                                        Ex33/bal),
                                    [
                                      Variable
                                        (125,
                                          Ex33/l);
                                      Variable
                                        (125,
                                          Ex33/v);
                                      Variable
                                        (125,
                                          Ex33/d);
                                      Variable
                                        (?,
                                          Ex33/x_2)
                                    ]))))))
            ]))
    ])

128
Value
  (rec, @coq_rec,
    [
      ((iter, [ A; B ],
        [ (f, (Type (Ex33/key) -> (A -> B))); (x, Type (Ex33/t, A)) ],
        Type (unit)),
        Match
          (129, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty), Constructor (129, tt));
              (Constructor (Ex33/Node, l, v, d, r, Any),
                Apply
                  (131,
                    Variable
                      (131,
                        Ex33/iter),
                    [
                      Variable
                        (131,
                          Ex33/f);
                      Variable
                        (131,
                          Ex33/r)
                    ]))
            ]))
    ])

134
Value
  (rec, @coq_rec,
    [
      ((map, [ A; B ], [ (f, (A -> B)); (x, Type (Ex33/t, A)) ],
        Type (Ex33/t, B)),
        Match
          (135, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty), Constructor (136, Ex33/Empty));
              (Constructor (Ex33/Node, l, v, d, r, h),
                LetVar ? l' =
                  Apply
                    (138,
                      Variable
                        (138,
                          Ex33/map),
                      [
                        Variable
                          (138,
                            Ex33/f);
                        Variable
                          (138,
                            Ex33/l)
                      ])
                  in
                LetVar ? d' =
                  Apply
                    (139,
                      Variable
                        (139,
                          Ex33/f),
                      [
                        Variable
                          (139,
                            Ex33/d)
                      ])
                  in
                LetVar ? r' =
                  Apply
                    (140,
                      Variable
                        (140,
                          Ex33/map),
                      [
                        Variable
                          (140,
                            Ex33/f);
                        Variable
                          (140,
                            Ex33/r)
                      ])
                  in
                Constructor
                  (141, Ex33/Node,
                    Variable
                      (141,
                        Ex33/l'),
                    Variable
                      (141,
                        Ex33/v),
                    Variable
                      (141,
                        Ex33/d'),
                    Variable
                      (141,
                        Ex33/r'),
                    Variable
                      (141,
                        Ex33/h)))
            ]))
    ])

144
Value
  (rec, @coq_rec,
    [
      ((mapi, [ A; B ],
        [ (f, (Type (Ex33/key) -> (A -> B))); (x, Type (Ex33/t, A)) ],
        Type (Ex33/t, B)),
        Match
          (145, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty), Constructor (146, Ex33/Empty));
              (Constructor (Ex33/Node, l, v, d, r, h),
                LetVar ? l' =
                  Apply
                    (148,
                      Variable
                        (148,
                          Ex33/mapi),
                      [
                        Variable
                          (148,
                            Ex33/f);
                        Variable
                          (148,
                            Ex33/l)
                      ])
                  in
                LetVar ? d' =
                  Apply
                    (149,
                      Variable
                        (149,
                          Ex33/f),
                      [
                        Variable
                          (149,
                            Ex33/v);
                        Variable
                          (149,
                            Ex33/d)
                      ])
                  in
                LetVar ? r' =
                  Apply
                    (150,
                      Variable
                        (150,
                          Ex33/mapi),
                      [
                        Variable
                          (150,
                            Ex33/f);
                        Variable
                          (150,
                            Ex33/r)
                      ])
                  in
                Constructor
                  (151, Ex33/Node,
                    Variable
                      (151,
                        Ex33/l'),
                    Variable
                      (151,
                        Ex33/v),
                    Variable
                      (151,
                        Ex33/d'),
                    Variable
                      (151,
                        Ex33/r'),
                    Variable
                      (151,
                        Ex33/h)))
            ]))
    ])

154
Value
  (rec, @coq_rec,
    [
      ((fold, [ A; B ],
        [
          (f, (Type (Ex33/key) -> (A -> (B -> B))));
          (m, Type (Ex33/t, A));
          (accu, B)
        ], B),
        Match
          (155, Variable (155, Ex33/m),
            [
              (Constructor (Ex33/Empty), Variable (156, Ex33/accu));
              (Constructor (Ex33/Node, l, v, d, r, Any),
                Apply
                  (158,
                    Variable
                      (158,
                        Ex33/fold),
                    [
                      Variable
                        (158,
                          Ex33/f);
                      Variable
                        (158,
                          Ex33/r);
                      Apply
                        (158,
                          Variable
                            (158,
                              Ex33/f),
                          [
                            Variable
                              (158,
                                Ex33/v);
                            Variable
                              (158,
                                Ex33/d);
                            Apply
                              (158,
                                Variable
                                  (158,
                                    Ex33/fold),
                                [
                                  Variable
                                    (158,
                                      Ex33/f);
                                  Variable
                                    (158,
                                      Ex33/l);
                                  Variable
                                    (158,
                                      Ex33/accu)
                                ])
                          ])
                    ]))
            ]))
    ])

161
Value
  (rec, @coq_rec,
    [
      ((for_all, [ A ],
        [ (p, (Type (Ex33/key) -> (A -> Type (bool)))); (x, Type (Ex33/t, A)) ],
        Type (bool)),
        Match
          (162, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty), Constructor (162, true));
              (Constructor (Ex33/Node, l, v, d, r, Any),
                Apply
                  (163,
                    Variable
                      (163,
                        andb),
                    [
                      Apply
                        (163,
                          Variable
                            (163,
                              Ex33/p),
                          [
                            Variable
                              (163,
                                Ex33/v);
                            Variable
                              (163,
                                Ex33/d)
                          ]);
                      Apply
                        (163,
                          Variable
                            (163,
                              andb),
                          [
                            Apply
                              (163,
                                Variable
                                  (163,
                                    Ex33/for_all),
                                [
                                  Variable
                                    (163,
                                      Ex33/p);
                                  Variable
                                    (163,
                                      Ex33/l)
                                ]);
                            Apply
                              (163,
                                Variable
                                  (163,
                                    Ex33/for_all),
                                [
                                  Variable
                                    (163,
                                      Ex33/p);
                                  Variable
                                    (163,
                                      Ex33/r)
                                ])
                          ])
                    ]))
            ]))
    ])

166
Value
  (rec, @coq_rec,
    [
      ((exists_, [ A ],
        [ (p, (Type (Ex33/key) -> (A -> Type (bool)))); (x, Type (Ex33/t, A)) ],
        Type (bool)),
        Match
          (167, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty), Constructor (167, false));
              (Constructor (Ex33/Node, l, v, d, r, Any),
                Apply
                  (168,
                    Variable
                      (168,
                        orb),
                    [
                      Apply
                        (168,
                          Variable
                            (168,
                              Ex33/p),
                          [
                            Variable
                              (168,
                                Ex33/v);
                            Variable
                              (168,
                                Ex33/d)
                          ]);
                      Apply
                        (168,
                          Variable
                            (168,
                              orb),
                          [
                            Apply
                              (168,
                                Variable
                                  (168,
                                    Ex33/exists_),
                                [
                                  Variable
                                    (168,
                                      Ex33/p);
                                  Variable
                                    (168,
                                      Ex33/l)
                                ]);
                            Apply
                              (168,
                                Variable
                                  (168,
                                    Ex33/exists_),
                                [
                                  Variable
                                    (168,
                                      Ex33/p);
                                  Variable
                                    (168,
                                      Ex33/r)
                                ])
                          ])
                    ]))
            ]))
    ])

179
Value
  (rec, @coq_rec,
    [
      ((add_min_binding, [ A ],
        [ (k, Type (Ex33/key)); (v, A); (x, Type (Ex33/t, A)) ],
        Monad
          ([ Type (OCaml.exception, Type (OCaml.invalid_argument)) ],
            Type (Ex33/t, A))),
        Match
          (180, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty),
                Return
                  (?,
                    Apply
                      (180,
                        Variable
                          (180,
                            Ex33/singleton),
                        [
                          Variable
                            (180,
                              Ex33/k);
                          Variable
                            (180,
                              Ex33/v)
                        ])));
              (Constructor (Ex33/Node, l, x, d, r, h),
                Bind
                  (?,
                    Apply
                      (182,
                        Variable
                          (182,
                            Ex33/add_min_binding),
                        [
                          Variable
                            (182,
                              Ex33/k);
                          Variable
                            (182,
                              Ex33/v);
                          Variable
                            (182,
                              Ex33/l)
                        ]),
                    Some
                      x_1,
                    Apply
                      (182,
                        Variable
                          (182,
                            Ex33/bal),
                        [
                          Variable
                            (?,
                              Ex33/x_1);
                          Variable
                            (182,
                              Ex33/x);
                          Variable
                            (182,
                              Ex33/d);
                          Variable
                            (182,
                              Ex33/r)
                        ])))
            ]))
    ])

185
Value
  (rec, @coq_rec,
    [
      ((add_max_binding, [ A ],
        [ (k, Type (Ex33/key)); (v, A); (x, Type (Ex33/t, A)) ],
        Monad
          ([ Type (OCaml.exception, Type (OCaml.invalid_argument)) ],
            Type (Ex33/t, A))),
        Match
          (186, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty),
                Return
                  (?,
                    Apply
                      (186,
                        Variable
                          (186,
                            Ex33/singleton),
                        [
                          Variable
                            (186,
                              Ex33/k);
                          Variable
                            (186,
                              Ex33/v)
                        ])));
              (Constructor (Ex33/Node, l, x, d, r, h),
                Bind
                  (?,
                    Apply
                      (188,
                        Variable
                          (188,
                            Ex33/add_max_binding),
                        [
                          Variable
                            (188,
                              Ex33/k);
                          Variable
                            (188,
                              Ex33/v);
                          Variable
                            (188,
                              Ex33/r)
                        ]),
                    Some
                      x_1,
                    Apply
                      (188,
                        Variable
                          (188,
                            Ex33/bal),
                        [
                          Variable
                            (188,
                              Ex33/l);
                          Variable
                            (188,
                              Ex33/x);
                          Variable
                            (188,
                              Ex33/d);
                          Variable
                            (?,
                              Ex33/x_1)
                        ])))
            ]))
    ])

194
Value
  (rec, @.,
    [
      ((join_rec, [ A ],
        [
          (counter, Type (nat));
          (l, Type (Ex33/t, A));
          (v, Type (Ex33/key));
          (d, A);
          (r, Type (Ex33/t, A))
        ],
        Monad
          ([
            Type (NonTermination);
            Type (OCaml.exception, Type (OCaml.invalid_argument))
          ], Type (Ex33/t, A))),
        Match
          (?, Variable (?, Ex33/counter),
            [
              (Constructor (O),
                Lift
                  (?,
                    [
                      Type
                        (NonTermination)
                    ],
                    [
                      Type
                        (NonTermination);
                      Type
                        (OCaml.exception,
                          Type
                            (OCaml.invalid_argument))
                    ],
                    Apply
                      (?,
                        Variable
                          (?,
                            not_terminated),
                        [
                          Tuple
                            (?)
                        ])));
              (Constructor (S, counter),
                Match
                  (195,
                    Tuple
                      (195,
                        Variable
                          (195,
                            Ex33/l),
                        Variable
                          (195,
                            Ex33/r)),
                    [
                      (Tuple
                        (Constructor
                          (Ex33/Empty),
                          Any),
                        Lift
                          (?,
                            [
                              Type
                                (OCaml.exception,
                                  Type
                                    (OCaml.invalid_argument))
                            ],
                            [
                              Type
                                (NonTermination);
                              Type
                                (OCaml.exception,
                                  Type
                                    (OCaml.invalid_argument))
                            ],
                            Apply
                              (196,
                                Variable
                                  (196,
                                    Ex33/add_min_binding),
                                [
                                  Variable
                                    (196,
                                      Ex33/v);
                                  Variable
                                    (196,
                                      Ex33/d);
                                  Variable
                                    (196,
                                      Ex33/r)
                                ])));
                      (Tuple
                        (Any,
                          Constructor
                            (Ex33/Empty)),
                        Lift
                          (?,
                            [
                              Type
                                (OCaml.exception,
                                  Type
                                    (OCaml.invalid_argument))
                            ],
                            [
                              Type
                                (NonTermination);
                              Type
                                (OCaml.exception,
                                  Type
                                    (OCaml.invalid_argument))
                            ],
                            Apply
                              (197,
                                Variable
                                  (197,
                                    Ex33/add_max_binding),
                                [
                                  Variable
                                    (197,
                                      Ex33/v);
                                  Variable
                                    (197,
                                      Ex33/d);
                                  Variable
                                    (197,
                                      Ex33/l)
                                ])));
                      (Tuple
                        (Constructor
                          (Ex33/Node,
                            ll,
                            lv,
                            ld,
                            lr,
                            lh),
                          Constructor
                            (Ex33/Node,
                              rl,
                              rv,
                              rd,
                              rr,
                              rh)),
                        IfThenElse
                          (199,
                            Apply
                              (199,
                                Variable
                                  (199,
                                    OCaml/Pervasives.gt),
                                [
                                  Variable
                                    (199,
                                      Ex33/lh);
                                  Apply
                                    (199,
                                      Variable
                                        (199,
                                          Z.add),
                                      [
                                        Variable
                                          (199,
                                            Ex33/rh);
                                        Constant
                                          (199,
                                            Int(2))
                                      ])
                                ]),
                            Bind
                              (?,
                                Apply
                                  (199,
                                    Apply
                                      (?,
                                        Variable
                                          (?,
                                            Ex33/join_rec),
                                        [
                                          Variable
                                            (?,
                                              Ex33/counter)
                                        ]),
                                    [
                                      Variable
                                        (199,
                                          Ex33/lr);
                                      Variable
                                        (199,
                                          Ex33/v);
                                      Variable
                                        (199,
                                          Ex33/d);
                                      Variable
                                        (199,
                                          Ex33/r)
                                    ]),
                                Some
                                  x,
                                Lift
                                  (?,
                                    [
                                      Type
                                        (OCaml.exception,
                                          Type
                                            (OCaml.invalid_argument))
                                    ],
                                    [
                                      Type
                                        (NonTermination);
                                      Type
                                        (OCaml.exception,
                                          Type
                                            (OCaml.invalid_argument))
                                    ],
                                    Apply
                                      (199,
                                        Variable
                                          (199,
                                            Ex33/bal),
                                        [
                                          Variable
                                            (199,
                                              Ex33/ll);
                                          Variable
                                            (199,
                                              Ex33/lv);
                                          Variable
                                            (199,
                                              Ex33/ld);
                                          Variable
                                            (?,
                                              Ex33/x)
                                        ]))),
                            IfThenElse
                              (200,
                                Apply
                                  (200,
                                    Variable
                                      (200,
                                        OCaml/Pervasives.gt),
                                    [
                                      Variable
                                        (200,
                                          Ex33/rh);
                                      Apply
                                        (200,
                                          Variable
                                            (200,
                                              Z.add),
                                          [
                                            Variable
                                              (200,
                                                Ex33/lh);
                                            Constant
                                              (200,
                                                Int(2))
                                          ])
                                    ]),
                                Bind
                                  (?,
                                    Apply
                                      (200,
                                        Apply
                                          (?,
                                            Variable
                                              (?,
                                                Ex33/join_rec),
                                            [
                                              Variable
                                                (?,
                                                  Ex33/counter)
                                            ]),
                                        [
                                          Variable
                                            (200,
                                              Ex33/l);
                                          Variable
                                            (200,
                                              Ex33/v);
                                          Variable
                                            (200,
                                              Ex33/d);
                                          Variable
                                            (200,
                                              Ex33/rl)
                                        ]),
                                    Some
                                      x,
                                    Lift
                                      (?,
                                        [
                                          Type
                                            (OCaml.exception,
                                              Type
                                                (OCaml.invalid_argument))
                                        ],
                                        [
                                          Type
                                            (NonTermination);
                                          Type
                                            (OCaml.exception,
                                              Type
                                                (OCaml.invalid_argument))
                                        ],
                                        Apply
                                          (200,
                                            Variable
                                              (200,
                                                Ex33/bal),
                                            [
                                              Variable
                                                (?,
                                                  Ex33/x);
                                              Variable
                                                (200,
                                                  Ex33/rv);
                                              Variable
                                                (200,
                                                  Ex33/rd);
                                              Variable
                                                (200,
                                                  Ex33/rr)
                                            ]))),
                                Return
                                  (?,
                                    Apply
                                      (201,
                                        Variable
                                          (201,
                                            Ex33/create),
                                        [
                                          Variable
                                            (201,
                                              Ex33/l);
                                          Variable
                                            (201,
                                              Ex33/v);
                                          Variable
                                            (201,
                                              Ex33/d);
                                          Variable
                                            (201,
                                              Ex33/r)
                                        ])))))
                    ]))
            ]))
    ])

194
Value
  (non_rec, @.,
    [
      ((join, [ A ],
        [
          (l, Type (Ex33/t, A));
          (v, Type (Ex33/key));
          (d, A);
          (r, Type (Ex33/t, A))
        ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.exception, Type (OCaml.invalid_argument))
          ], Type (Ex33/t, A))),
        Bind
          (?,
            Lift
              (?, [ Type (Counter) ],
                [
                  Type (Counter);
                  Type (NonTermination);
                  Type
                    (OCaml.exception,
                      Type
                        (OCaml.invalid_argument))
                ],
                Apply (?, Variable (?, read_counter), [ Tuple (?) ])),
            Some x,
            Lift
              (?,
                [
                  Type (NonTermination);
                  Type
                    (OCaml.exception,
                      Type
                        (OCaml.invalid_argument))
                ],
                [
                  Type (Counter);
                  Type (NonTermination);
                  Type
                    (OCaml.exception,
                      Type
                        (OCaml.invalid_argument))
                ],
                Apply
                  (?, Variable (?, Ex33/join_rec),
                    [
                      Variable (?, Ex33/x);
                      Variable (?, Ex33/l);
                      Variable (?, Ex33/v);
                      Variable (?, Ex33/d);
                      Variable (?, Ex33/r)
                    ]))))
    ])

207
Value
  (non_rec, @.,
    [
      ((concat, [ A ], [ (t1, Type (Ex33/t, A)); (t2, Type (Ex33/t, A)) ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.exception, Type (OCaml.invalid_argument));
            Type (OCaml.exception, Type (OCaml/not_found))
          ], Type (Ex33/t, A))),
        Match
          (208,
            Tuple (208, Variable (208, Ex33/t1), Variable (208, Ex33/t2)),
            [
              (Tuple (Constructor (Ex33/Empty), t (= t_1)),
                Return (?, Variable (209, Ex33/t_1)));
              (Tuple (t (= t_1), Constructor (Ex33/Empty)),
                Return (?, Variable (210, Ex33/t_1)));
              (Tuple (Any, Any),
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          Type
                            (OCaml.exception,
                              Type
                                (OCaml/not_found))
                        ],
                        [
                          Type
                            (Counter);
                          Type
                            (NonTermination);
                          Type
                            (OCaml.exception,
                              Type
                                (OCaml.invalid_argument));
                          Type
                            (OCaml.exception,
                              Type
                                (OCaml/not_found))
                        ],
                        Apply
                          (212,
                            Variable
                              (212,
                                Ex33/min_binding),
                            [
                              Variable
                                (212,
                                  Ex33/t2)
                            ])),
                    Some
                      x,
                    Match
                      (212,
                        Variable
                          (?,
                            Ex33/x),
                        [
                          (Tuple
                            (x,
                              d),
                            Lift
                              (?,
                                [
                                  Type
                                    (Counter);
                                  Type
                                    (NonTermination);
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml.invalid_argument))
                                ],
                                [
                                  Type
                                    (Counter);
                                  Type
                                    (NonTermination);
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml.invalid_argument));
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml/not_found))
                                ],
                                Bind
                                  (?,
                                    Lift
                                      (?,
                                        [
                                          Type
                                            (OCaml.exception,
                                              Type
                                                (OCaml.invalid_argument))
                                        ],
                                        [
                                          Type
                                            (Counter);
                                          Type
                                            (NonTermination);
                                          Type
                                            (OCaml.exception,
                                              Type
                                                (OCaml.invalid_argument))
                                        ],
                                        Apply
                                          (213,
                                            Variable
                                              (213,
                                                Ex33/remove_min_binding),
                                            [
                                              Variable
                                                (213,
                                                  Ex33/t2)
                                            ])),
                                    Some
                                      x_1,
                                    Apply
                                      (213,
                                        Variable
                                          (213,
                                            Ex33/join),
                                        [
                                          Variable
                                            (213,
                                              Ex33/t1);
                                          Variable
                                            (213,
                                              Ex33/x);
                                          Variable
                                            (213,
                                              Ex33/d);
                                          Variable
                                            (?,
                                              Ex33/x_1)
                                        ]))))
                        ])))
            ]))
    ])

215
Value
  (non_rec, @.,
    [
      ((concat_or_join, [ A ],
        [
          (t1, Type (Ex33/t, A));
          (v, Type (Ex33/key));
          (d, Type (option, A));
          (t2, Type (Ex33/t, A))
        ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.exception, Type (OCaml.invalid_argument));
            Type (OCaml.exception, Type (OCaml/not_found))
          ], Type (Ex33/t, A))),
        Match
          (216, Variable (216, Ex33/d),
            [
              (Constructor (Some, d),
                Lift
                  (?,
                    [
                      Type
                        (Counter);
                      Type
                        (NonTermination);
                      Type
                        (OCaml.exception,
                          Type
                            (OCaml.invalid_argument))
                    ],
                    [
                      Type
                        (Counter);
                      Type
                        (NonTermination);
                      Type
                        (OCaml.exception,
                          Type
                            (OCaml.invalid_argument));
                      Type
                        (OCaml.exception,
                          Type
                            (OCaml/not_found))
                    ],
                    Apply
                      (217,
                        Variable
                          (217,
                            Ex33/join),
                        [
                          Variable
                            (217,
                              Ex33/t1);
                          Variable
                            (217,
                              Ex33/v);
                          Variable
                            (217,
                              Ex33/d);
                          Variable
                            (217,
                              Ex33/t2)
                        ])));
              (Constructor (None),
                Apply
                  (218,
                    Variable
                      (218,
                        Ex33/concat),
                    [
                      Variable
                        (218,
                          Ex33/t1);
                      Variable
                        (218,
                          Ex33/t2)
                    ]))
            ]))
    ])

220
Value
  (rec, @coq_rec,
    [
      ((split, [ A ], [ (x, Type (Ex33/Ord.t)); (x_1, Type (Ex33/t, A)) ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.exception, Type (OCaml.invalid_argument))
          ], (Type (Ex33/t, A) * Type (option, A) * Type (Ex33/t, A)))),
        Match
          (221, Variable (?, Ex33/x_1),
            [
              (Constructor (Ex33/Empty),
                Return
                  (?,
                    Tuple
                      (222,
                        Constructor
                          (222,
                            Ex33/Empty),
                        Constructor
                          (222,
                            None),
                        Constructor
                          (222,
                            Ex33/Empty))));
              (Constructor (Ex33/Node, l, v, d, r, Any),
                LetVar ? c =
                  Apply
                    (224,
                      Variable
                        (224,
                          Ex33/Ord.compare),
                      [
                        Variable
                          (224,
                            Ex33/x);
                        Variable
                          (224,
                            Ex33/v)
                      ])
                  in
                IfThenElse
                  (225,
                    Apply
                      (225,
                        Variable
                          (225,
                            equiv_decb),
                        [
                          Variable
                            (225,
                              Ex33/c);
                          Constant
                            (225,
                              Int(0))
                        ]),
                    Return
                      (?,
                        Tuple
                          (225,
                            Variable
                              (225,
                                Ex33/l),
                            Constructor
                              (225,
                                Some,
                                Variable
                                  (225,
                                    Ex33/d)),
                            Variable
                              (225,
                                Ex33/r))),
                    IfThenElse
                      (226,
                        Apply
                          (226,
                            Variable
                              (226,
                                OCaml/Pervasives.lt),
                            [
                              Variable
                                (226,
                                  Ex33/c);
                              Constant
                                (226,
                                  Int(0))
                            ]),
                        Bind
                          (?,
                            Apply
                              (227,
                                Variable
                                  (227,
                                    Ex33/split),
                                [
                                  Variable
                                    (227,
                                      Ex33/x);
                                  Variable
                                    (227,
                                      Ex33/l)
                                ]),
                            Some
                              x_2,
                            Match
                              (227,
                                Variable
                                  (?,
                                    Ex33/x_2),
                                [
                                  (Tuple
                                    (ll,
                                      pres,
                                      rl),
                                    Bind
                                      (?,
                                        Apply
                                          (227,
                                            Variable
                                              (227,
                                                Ex33/join),
                                            [
                                              Variable
                                                (227,
                                                  Ex33/rl);
                                              Variable
                                                (227,
                                                  Ex33/v);
                                              Variable
                                                (227,
                                                  Ex33/d);
                                              Variable
                                                (227,
                                                  Ex33/r)
                                            ]),
                                        Some
                                          x_2,
                                        Return
                                          (?,
                                            Tuple
                                              (227,
                                                Variable
                                                  (227,
                                                    Ex33/ll),
                                                Variable
                                                  (227,
                                                    Ex33/pres),
                                                Variable
                                                  (?,
                                                    Ex33/x_2)))))
                                ])),
                        Bind
                          (?,
                            Apply
                              (229,
                                Variable
                                  (229,
                                    Ex33/split),
                                [
                                  Variable
                                    (229,
                                      Ex33/x);
                                  Variable
                                    (229,
                                      Ex33/r)
                                ]),
                            Some
                              x_2,
                            Match
                              (229,
                                Variable
                                  (?,
                                    Ex33/x_2),
                                [
                                  (Tuple
                                    (lr,
                                      pres,
                                      rr),
                                    Bind
                                      (?,
                                        Apply
                                          (229,
                                            Variable
                                              (229,
                                                Ex33/join),
                                            [
                                              Variable
                                                (229,
                                                  Ex33/l);
                                              Variable
                                                (229,
                                                  Ex33/v);
                                              Variable
                                                (229,
                                                  Ex33/d);
                                              Variable
                                                (229,
                                                  Ex33/lr)
                                            ]),
                                        Some
                                          x_2,
                                        Return
                                          (?,
                                            Tuple
                                              (229,
                                                Variable
                                                  (?,
                                                    Ex33/x_2),
                                                Variable
                                                  (229,
                                                    Ex33/pres),
                                                Variable
                                                  (229,
                                                    Ex33/rr)))))
                                ])))))
            ]))
    ])

232
Value
  (rec, @.,
    [
      ((merge_rec, [ A; B; C ],
        [
          (counter, Type (nat));
          (f,
            (Type (Ex33/key) ->
              (Type (option, A) ->
                (Type (option, B) ->
                  Type (option, C)))));
          (s1, Type (Ex33/t, A));
          (s2, Type (Ex33/t, B))
        ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.exception, Type (OCaml.invalid_argument));
            Type (OCaml.exception, Type (OCaml/match_failure));
            Type (OCaml.exception, Type (OCaml/not_found))
          ], Type (Ex33/t, C))),
        Match
          (?, Variable (?, Ex33/counter),
            [
              (Constructor (O),
                Lift
                  (?,
                    [
                      Type
                        (NonTermination)
                    ],
                    [
                      Type
                        (Counter);
                      Type
                        (NonTermination);
                      Type
                        (OCaml.exception,
                          Type
                            (OCaml.invalid_argument));
                      Type
                        (OCaml.exception,
                          Type
                            (OCaml/match_failure));
                      Type
                        (OCaml.exception,
                          Type
                            (OCaml/not_found))
                    ],
                    Apply
                      (?,
                        Variable
                          (?,
                            not_terminated),
                        [
                          Tuple
                            (?)
                        ])));
              (Constructor (S, counter),
                LetVar ? i =
                  Match
                    (?,
                      Tuple
                        (233,
                          Variable
                            (233,
                              Ex33/s1),
                          Variable
                            (233,
                              Ex33/s2)),
                      [
                        (Tuple
                          (Constructor
                            (Ex33/Empty),
                            Constructor
                              (Ex33/Empty)),
                          Constant
                            (?,
                              Int(0)));
                        (Tuple
                          (Constructor
                            (Ex33/Node,
                              l1,
                              v1,
                              d1,
                              r1,
                              h1),
                            Any),
                          IfThenElse
                            (?,
                              Apply
                                (235,
                                  Variable
                                    (235,
                                      OCaml/Pervasives.ge),
                                  [
                                    Variable
                                      (235,
                                        Ex33/h1);
                                    Apply
                                      (235,
                                        Variable
                                          (235,
                                            Ex33/height),
                                        [
                                          Variable
                                            (235,
                                              Ex33/s2)
                                        ])
                                  ]),
                              Constant
                                (?,
                                  Int(1)),
                              Constant
                                (?,
                                  Int(0))));
                        (Tuple
                          (Any,
                            Constructor
                              (Ex33/Node,
                                l2,
                                v2,
                                d2,
                                r2,
                                h2)),
                          Constant
                            (?,
                              Int(0)))
                      ])
                  in
                Match
                  (233,
                    Tuple
                      (?,
                        Tuple
                          (233,
                            Variable
                              (233,
                                Ex33/s1),
                            Variable
                              (233,
                                Ex33/s2)),
                        Variable
                          (?,
                            Ex33/i)),
                    [
                      (Tuple
                        (Tuple
                          (Constructor
                            (Ex33/Empty),
                            Constructor
                              (Ex33/Empty)),
                          Any),
                        Return
                          (?,
                            Constructor
                              (234,
                                Ex33/Empty)));
                      (Tuple
                        (Tuple
                          (Constructor
                            (Ex33/Node,
                              l1,
                              v1,
                              d1,
                              r1,
                              h1),
                            Any),
                          Int(1)),
                        Bind
                          (?,
                            Lift
                              (?,
                                [
                                  Type
                                    (Counter);
                                  Type
                                    (NonTermination);
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml.invalid_argument))
                                ],
                                [
                                  Type
                                    (Counter);
                                  Type
                                    (NonTermination);
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml.invalid_argument));
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml/match_failure));
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml/not_found))
                                ],
                                Apply
                                  (236,
                                    Variable
                                      (236,
                                        Ex33/split),
                                    [
                                      Variable
                                        (236,
                                          Ex33/v1);
                                      Variable
                                        (236,
                                          Ex33/s2)
                                    ])),
                            Some
                              x,
                            Match
                              (236,
                                Variable
                                  (?,
                                    Ex33/x),
                                [
                                  (Tuple
                                    (l2,
                                      d2,
                                      r2),
                                    Bind
                                      (?,
                                        Apply
                                          (237,
                                            Apply
                                              (?,
                                                Variable
                                                  (?,
                                                    Ex33/merge_rec),
                                                [
                                                  Variable
                                                    (?,
                                                      Ex33/counter)
                                                ]),
                                            [
                                              Variable
                                                (237,
                                                  Ex33/f);
                                              Variable
                                                (237,
                                                  Ex33/l1);
                                              Variable
                                                (237,
                                                  Ex33/l2)
                                            ]),
                                        Some
                                          x,
                                        Bind
                                          (?,
                                            Apply
                                              (237,
                                                Apply
                                                  (?,
                                                    Variable
                                                      (?,
                                                        Ex33/merge_rec),
                                                    [
                                                      Variable
                                                        (?,
                                                          Ex33/counter)
                                                    ]),
                                                [
                                                  Variable
                                                    (237,
                                                      Ex33/f);
                                                  Variable
                                                    (237,
                                                      Ex33/r1);
                                                  Variable
                                                    (237,
                                                      Ex33/r2)
                                                ]),
                                            Some
                                              x_1,
                                            Lift
                                              (?,
                                                [
                                                  Type
                                                    (Counter);
                                                  Type
                                                    (NonTermination);
                                                  Type
                                                    (OCaml.exception,
                                                      Type
                                                        (OCaml.invalid_argument));
                                                  Type
                                                    (OCaml.exception,
                                                      Type
                                                        (OCaml/not_found))
                                                ],
                                                [
                                                  Type
                                                    (Counter);
                                                  Type
                                                    (NonTermination);
                                                  Type
                                                    (OCaml.exception,
                                                      Type
                                                        (OCaml.invalid_argument));
                                                  Type
                                                    (OCaml.exception,
                                                      Type
                                                        (OCaml/match_failure));
                                                  Type
                                                    (OCaml.exception,
                                                      Type
                                                        (OCaml/not_found))
                                                ],
                                                Apply
                                                  (237,
                                                    Variable
                                                      (237,
                                                        Ex33/concat_or_join),
                                                    [
                                                      Variable
                                                        (?,
                                                          Ex33/x);
                                                      Variable
                                                        (237,
                                                          Ex33/v1);
                                                      Apply
                                                        (237,
                                                          Variable
                                                            (237,
                                                              Ex33/f),
                                                          [
                                                            Variable
                                                              (237,
                                                                Ex33/v1);
                                                            Constructor
                                                              (237,
                                                                Some,
                                                                Variable
                                                                  (237,
                                                                    Ex33/d1));
                                                            Variable
                                                              (237,
                                                                Ex33/d2)
                                                          ]);
                                                      Variable
                                                        (?,
                                                          Ex33/x_1)
                                                    ])))))
                                ])));
                      (Tuple
                        (Tuple
                          (Any,
                            Constructor
                              (Ex33/Node,
                                l2,
                                v2,
                                d2,
                                r2,
                                h2)),
                          Any),
                        Bind
                          (?,
                            Lift
                              (?,
                                [
                                  Type
                                    (Counter);
                                  Type
                                    (NonTermination);
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml.invalid_argument))
                                ],
                                [
                                  Type
                                    (Counter);
                                  Type
                                    (NonTermination);
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml.invalid_argument));
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml/match_failure));
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml/not_found))
                                ],
                                Apply
                                  (239,
                                    Variable
                                      (239,
                                        Ex33/split),
                                    [
                                      Variable
                                        (239,
                                          Ex33/v2);
                                      Variable
                                        (239,
                                          Ex33/s1)
                                    ])),
                            Some
                              x,
                            Match
                              (239,
                                Variable
                                  (?,
                                    Ex33/x),
                                [
                                  (Tuple
                                    (l1,
                                      d1,
                                      r1),
                                    Bind
                                      (?,
                                        Apply
                                          (240,
                                            Apply
                                              (?,
                                                Variable
                                                  (?,
                                                    Ex33/merge_rec),
                                                [
                                                  Variable
                                                    (?,
                                                      Ex33/counter)
                                                ]),
                                            [
                                              Variable
                                                (240,
                                                  Ex33/f);
                                              Variable
                                                (240,
                                                  Ex33/l1);
                                              Variable
                                                (240,
                                                  Ex33/l2)
                                            ]),
                                        Some
                                          x,
                                        Bind
                                          (?,
                                            Apply
                                              (240,
                                                Apply
                                                  (?,
                                                    Variable
                                                      (?,
                                                        Ex33/merge_rec),
                                                    [
                                                      Variable
                                                        (?,
                                                          Ex33/counter)
                                                    ]),
                                                [
                                                  Variable
                                                    (240,
                                                      Ex33/f);
                                                  Variable
                                                    (240,
                                                      Ex33/r1);
                                                  Variable
                                                    (240,
                                                      Ex33/r2)
                                                ]),
                                            Some
                                              x_1,
                                            Lift
                                              (?,
                                                [
                                                  Type
                                                    (Counter);
                                                  Type
                                                    (NonTermination);
                                                  Type
                                                    (OCaml.exception,
                                                      Type
                                                        (OCaml.invalid_argument));
                                                  Type
                                                    (OCaml.exception,
                                                      Type
                                                        (OCaml/not_found))
                                                ],
                                                [
                                                  Type
                                                    (Counter);
                                                  Type
                                                    (NonTermination);
                                                  Type
                                                    (OCaml.exception,
                                                      Type
                                                        (OCaml.invalid_argument));
                                                  Type
                                                    (OCaml.exception,
                                                      Type
                                                        (OCaml/match_failure));
                                                  Type
                                                    (OCaml.exception,
                                                      Type
                                                        (OCaml/not_found))
                                                ],
                                                Apply
                                                  (240,
                                                    Variable
                                                      (240,
                                                        Ex33/concat_or_join),
                                                    [
                                                      Variable
                                                        (?,
                                                          Ex33/x);
                                                      Variable
                                                        (240,
                                                          Ex33/v2);
                                                      Apply
                                                        (240,
                                                          Variable
                                                            (240,
                                                              Ex33/f),
                                                          [
                                                            Variable
                                                              (240,
                                                                Ex33/v2);
                                                            Variable
                                                              (240,
                                                                Ex33/d1);
                                                            Constructor
                                                              (240,
                                                                Some,
                                                                Variable
                                                                  (240,
                                                                    Ex33/d2))
                                                          ]);
                                                      Variable
                                                        (?,
                                                          Ex33/x_1)
                                                    ])))))
                                ])));
                      (Any,
                        Lift
                          (?,
                            [
                              Type
                                (OCaml.exception,
                                  Type
                                    (OCaml/match_failure))
                            ],
                            [
                              Type
                                (Counter);
                              Type
                                (NonTermination);
                              Type
                                (OCaml.exception,
                                  Type
                                    (OCaml.invalid_argument));
                              Type
                                (OCaml.exception,
                                  Type
                                    (OCaml/match_failure));
                              Type
                                (OCaml.exception,
                                  Type
                                    (OCaml/not_found))
                            ],
                            Apply
                              (?,
                                Variable
                                  (?,
                                    OCaml/Pervasives.raise),
                                [
                                  Constructor
                                    (?,
                                      OCaml/Match_failure,
                                      Tuple
                                        (?,
                                          Constant
                                            (?,
                                              String("tests/ex33.ml")),
                                          Constant
                                            (?,
                                              Int(233)),
                                          Constant
                                            (?,
                                              Int(2))))
                                ])))
                    ]))
            ]))
    ])

232
Value
  (non_rec, @.,
    [
      ((merge, [ A; B; C ],
        [
          (f,
            (Type (Ex33/key) ->
              (Type (option, A) ->
                (Type (option, B) ->
                  Type (option, C)))));
          (s1, Type (Ex33/t, A));
          (s2, Type (Ex33/t, B))
        ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.exception, Type (OCaml.invalid_argument));
            Type (OCaml.exception, Type (OCaml/match_failure));
            Type (OCaml.exception, Type (OCaml/not_found))
          ], Type (Ex33/t, C))),
        Bind
          (?,
            Lift
              (?, [ Type (Counter) ],
                [
                  Type (Counter);
                  Type (NonTermination);
                  Type
                    (OCaml.exception,
                      Type
                        (OCaml.invalid_argument));
                  Type (OCaml.exception, Type (OCaml/match_failure));
                  Type (OCaml.exception, Type (OCaml/not_found))
                ],
                Apply (?, Variable (?, read_counter), [ Tuple (?) ])),
            Some x,
            Apply
              (?, Variable (?, Ex33/merge_rec),
                [
                  Variable (?, Ex33/x);
                  Variable (?, Ex33/f);
                  Variable (?, Ex33/s1);
                  Variable (?, Ex33/s2)
                ])))
    ])

242
Value
  (rec, @coq_rec,
    [
      ((filter, [ A ],
        [ (p, (Type (Ex33/key) -> (A -> Type (bool)))); (x, Type (Ex33/t, A)) ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.exception, Type (OCaml.invalid_argument));
            Type (OCaml.exception, Type (OCaml/not_found))
          ], Type (Ex33/t, A))),
        Match
          (243, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty),
                Return
                  (?,
                    Constructor
                      (243,
                        Ex33/Empty)));
              (Constructor (Ex33/Node, l, v, d, r, Any),
                Bind
                  (?,
                    Apply
                      (246,
                        Variable
                          (246,
                            Ex33/filter),
                        [
                          Variable
                            (246,
                              Ex33/p);
                          Variable
                            (246,
                              Ex33/l)
                        ]),
                    Some
                      l',
                    LetVar
                      ?
                      pvd
                      =
                      Apply
                        (247,
                          Variable
                            (247,
                              Ex33/p),
                          [
                            Variable
                              (247,
                                Ex33/v);
                            Variable
                              (247,
                                Ex33/d)
                          ])
                      in
                    Bind
                      (?,
                        Apply
                          (248,
                            Variable
                              (248,
                                Ex33/filter),
                            [
                              Variable
                                (248,
                                  Ex33/p);
                              Variable
                                (248,
                                  Ex33/r)
                            ]),
                        Some
                          r',
                        IfThenElse
                          (249,
                            Variable
                              (249,
                                Ex33/pvd),
                            Lift
                              (?,
                                [
                                  Type
                                    (Counter);
                                  Type
                                    (NonTermination);
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml.invalid_argument))
                                ],
                                [
                                  Type
                                    (Counter);
                                  Type
                                    (NonTermination);
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml.invalid_argument));
                                  Type
                                    (OCaml.exception,
                                      Type
                                        (OCaml/not_found))
                                ],
                                Apply
                                  (249,
                                    Variable
                                      (249,
                                        Ex33/join),
                                    [
                                      Variable
                                        (249,
                                          Ex33/l');
                                      Variable
                                        (249,
                                          Ex33/v);
                                      Variable
                                        (249,
                                          Ex33/d);
                                      Variable
                                        (249,
                                          Ex33/r')
                                    ])),
                            Apply
                              (249,
                                Variable
                                  (249,
                                    Ex33/concat),
                                [
                                  Variable
                                    (249,
                                      Ex33/l');
                                  Variable
                                    (249,
                                      Ex33/r')
                                ])))))
            ]))
    ])

252
Value
  (rec, @coq_rec,
    [
      ((partition, [ A ],
        [ (p, (Type (Ex33/key) -> (A -> Type (bool)))); (x, Type (Ex33/t, A)) ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.exception, Type (OCaml.invalid_argument));
            Type (OCaml.exception, Type (OCaml/not_found))
          ], (Type (Ex33/t, A) * Type (Ex33/t, A)))),
        Match
          (253, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty),
                Return
                  (?,
                    Tuple
                      (253,
                        Constructor
                          (253,
                            Ex33/Empty),
                        Constructor
                          (253,
                            Ex33/Empty))));
              (Constructor (Ex33/Node, l, v, d, r, Any),
                Bind
                  (?,
                    Apply
                      (256,
                        Variable
                          (256,
                            Ex33/partition),
                        [
                          Variable
                            (256,
                              Ex33/p);
                          Variable
                            (256,
                              Ex33/l)
                        ]),
                    Some
                      x_1,
                    Match
                      (256,
                        Variable
                          (?,
                            Ex33/x_1),
                        [
                          (Tuple
                            (lt,
                              lf),
                            LetVar
                              ?
                              pvd
                              =
                              Apply
                                (257,
                                  Variable
                                    (257,
                                      Ex33/p),
                                  [
                                    Variable
                                      (257,
                                        Ex33/v);
                                    Variable
                                      (257,
                                        Ex33/d)
                                  ])
                              in
                            Bind
                              (?,
                                Apply
                                  (258,
                                    Variable
                                      (258,
                                        Ex33/partition),
                                    [
                                      Variable
                                        (258,
                                          Ex33/p);
                                      Variable
                                        (258,
                                          Ex33/r)
                                    ]),
                                Some
                                  x_1,
                                Match
                                  (258,
                                    Variable
                                      (?,
                                        Ex33/x_1),
                                    [
                                      (Tuple
                                        (rt,
                                          rf),
                                        IfThenElse
                                          (259,
                                            Variable
                                              (259,
                                                Ex33/pvd),
                                            Bind
                                              (?,
                                                Lift
                                                  (?,
                                                    [
                                                      Type
                                                        (Counter);
                                                      Type
                                                        (NonTermination);
                                                      Type
                                                        (OCaml.exception,
                                                          Type
                                                            (OCaml.invalid_argument))
                                                    ],
                                                    [
                                                      Type
                                                        (Counter);
                                                      Type
                                                        (NonTermination);
                                                      Type
                                                        (OCaml.exception,
                                                          Type
                                                            (OCaml.invalid_argument));
                                                      Type
                                                        (OCaml.exception,
                                                          Type
                                                            (OCaml/not_found))
                                                    ],
                                                    Apply
                                                      (260,
                                                        Variable
                                                          (260,
                                                            Ex33/join),
                                                        [
                                                          Variable
                                                            (260,
                                                              Ex33/lt);
                                                          Variable
                                                            (260,
                                                              Ex33/v);
                                                          Variable
                                                            (260,
                                                              Ex33/d);
                                                          Variable
                                                            (260,
                                                              Ex33/rt)
                                                        ])),
                                                Some
                                                  x_1,
                                                Bind
                                                  (?,
                                                    Apply
                                                      (260,
                                                        Variable
                                                          (260,
                                                            Ex33/concat),
                                                        [
                                                          Variable
                                                            (260,
                                                              Ex33/lf);
                                                          Variable
                                                            (260,
                                                              Ex33/rf)
                                                        ]),
                                                    Some
                                                      x_2,
                                                    Return
                                                      (?,
                                                        Tuple
                                                          (260,
                                                            Variable
                                                              (?,
                                                                Ex33/x_1),
                                                            Variable
                                                              (?,
                                                                Ex33/x_2))))),
                                            Bind
                                              (?,
                                                Apply
                                                  (261,
                                                    Variable
                                                      (261,
                                                        Ex33/concat),
                                                    [
                                                      Variable
                                                        (261,
                                                          Ex33/lt);
                                                      Variable
                                                        (261,
                                                          Ex33/rt)
                                                    ]),
                                                Some
                                                  x_1,
                                                Bind
                                                  (?,
                                                    Lift
                                                      (?,
                                                        [
                                                          Type
                                                            (Counter);
                                                          Type
                                                            (NonTermination);
                                                          Type
                                                            (OCaml.exception,
                                                              Type
                                                                (OCaml.invalid_argument))
                                                        ],
                                                        [
                                                          Type
                                                            (Counter);
                                                          Type
                                                            (NonTermination);
                                                          Type
                                                            (OCaml.exception,
                                                              Type
                                                                (OCaml.invalid_argument));
                                                          Type
                                                            (OCaml.exception,
                                                              Type
                                                                (OCaml/not_found))
                                                        ],
                                                        Apply
                                                          (261,
                                                            Variable
                                                              (261,
                                                                Ex33/join),
                                                            [
                                                              Variable
                                                                (261,
                                                                  Ex33/lf);
                                                              Variable
                                                                (261,
                                                                  Ex33/v);
                                                              Variable
                                                                (261,
                                                                  Ex33/d);
                                                              Variable
                                                                (261,
                                                                  Ex33/rf)
                                                            ])),
                                                    Some
                                                      x_2,
                                                    Return
                                                      (?,
                                                        Tuple
                                                          (261,
                                                            Variable
                                                              (?,
                                                                Ex33/x_1),
                                                            Variable
                                                              (?,
                                                                Ex33/x_2)))))))
                                    ])))
                        ])))
            ]))
    ])

264
Inductive enumeration:
  ([ a ],
    [
      (End, [ ]);
      (More,
        [ Type (Ex33/key); a; Type (Ex33/t, a); Type (Ex33/enumeration, a) ])
    ])

266
Value
  (rec, @coq_rec,
    [
      ((cons_enum, [ A ],
        [ (m, Type (Ex33/t, A)); (e, Type (Ex33/enumeration, A)) ],
        Type (Ex33/enumeration, A)),
        Match
          (267, Variable (267, Ex33/m),
            [
              (Constructor (Ex33/Empty), Variable (268, Ex33/e));
              (Constructor (Ex33/Node, l, v, d, r, Any),
                Apply
                  (269,
                    Variable
                      (269,
                        Ex33/cons_enum),
                    [
                      Variable
                        (269,
                          Ex33/l);
                      Constructor
                        (269,
                          Ex33/More,
                          Variable
                            (269,
                              Ex33/v),
                          Variable
                            (269,
                              Ex33/d),
                          Variable
                            (269,
                              Ex33/r),
                          Variable
                            (269,
                              Ex33/e))
                    ]))
            ]))
    ])

272
Value
  (non_rec, @.,
    [
      ((compare, [ A; B ],
        [
          (cmp, (A -> (B -> Type (Z))));
          (m1, Type (Ex33/t, A));
          (m2, Type (Ex33/t, B))
        ], Monad ([ Type (Counter); Type (NonTermination) ], Type (Z))),
        LetFun 273
          (rec, @.,
            [
              ((compare_aux_rec, [ ],
                [
                  (counter, Type (nat));
                  (e1,
                    Type
                      (Ex33/enumeration,
                        A));
                  (e2,
                    Type
                      (Ex33/enumeration,
                        B))
                ],
                Monad
                  ([
                    Type
                      (NonTermination)
                  ], Type (Z))),
                Match
                  (?,
                    Variable
                      (?,
                        Ex33/counter),
                    [
                      (Constructor
                        (O),
                        Apply
                          (?,
                            Variable
                              (?,
                                not_terminated),
                            [
                              Tuple
                                (?)
                            ]));
                      (Constructor
                        (S,
                          counter),
                        Match
                          (274,
                            Tuple
                              (274,
                                Variable
                                  (274,
                                    Ex33/e1),
                                Variable
                                  (274,
                                    Ex33/e2)),
                            [
                              (Tuple
                                (Constructor
                                  (Ex33/End),
                                  Constructor
                                    (Ex33/End)),
                                Return
                                  (?,
                                    Constant
                                      (275,
                                        Int(0))));
                              (Tuple
                                (Constructor
                                  (Ex33/End),
                                  Any),
                                Return
                                  (?,
                                    Constant
                                      (276,
                                        Int(-1))));
                              (Tuple
                                (Any,
                                  Constructor
                                    (Ex33/End)),
                                Return
                                  (?,
                                    Constant
                                      (277,
                                        Int(1))));
                              (Tuple
                                (Constructor
                                  (Ex33/More,
                                    v1,
                                    d1,
                                    r1,
                                    e1),
                                  Constructor
                                    (Ex33/More,
                                      v2,
                                      d2,
                                      r2,
                                      e2)),
                                LetVar
                                  ?
                                  c
                                  =
                                  Apply
                                    (279,
                                      Variable
                                        (279,
                                          Ex33/Ord.compare),
                                      [
                                        Variable
                                          (279,
                                            Ex33/v1);
                                        Variable
                                          (279,
                                            Ex33/v2)
                                      ])
                                  in
                                IfThenElse
                                  (280,
                                    Apply
                                      (280,
                                        Variable
                                          (280,
                                            nequiv_decb),
                                        [
                                          Variable
                                            (280,
                                              Ex33/c);
                                          Constant
                                            (280,
                                              Int(0))
                                        ]),
                                    Return
                                      (?,
                                        Variable
                                          (280,
                                            Ex33/c)),
                                    LetVar
                                      ?
                                      c
                                      =
                                      Apply
                                        (281,
                                          Variable
                                            (281,
                                              Ex33/cmp),
                                          [
                                            Variable
                                              (281,
                                                Ex33/d1);
                                            Variable
                                              (281,
                                                Ex33/d2)
                                          ])
                                      in
                                    IfThenElse
                                      (282,
                                        Apply
                                          (282,
                                            Variable
                                              (282,
                                                nequiv_decb),
                                            [
                                              Variable
                                                (282,
                                                  Ex33/c);
                                              Constant
                                                (282,
                                                  Int(0))
                                            ]),
                                        Return
                                          (?,
                                            Variable
                                              (282,
                                                Ex33/c)),
                                        Apply
                                          (283,
                                            Apply
                                              (?,
                                                Variable
                                                  (?,
                                                    Ex33/compare_aux_rec),
                                                [
                                                  Variable
                                                    (?,
                                                      Ex33/counter)
                                                ]),
                                            [
                                              Apply
                                                (283,
                                                  Variable
                                                    (283,
                                                      Ex33/cons_enum),
                                                  [
                                                    Variable
                                                      (283,
                                                        Ex33/r1);
                                                    Variable
                                                      (283,
                                                        Ex33/e1)
                                                  ]);
                                              Apply
                                                (283,
                                                  Variable
                                                    (283,
                                                      Ex33/cons_enum),
                                                  [
                                                    Variable
                                                      (283,
                                                        Ex33/r2);
                                                    Variable
                                                      (283,
                                                        Ex33/e2)
                                                  ])
                                            ]))))
                            ]))
                    ]))
            ]) in
        LetFun 273
          (non_rec, @.,
            [
              ((compare_aux, [ ],
                [
                  (e1,
                    Type
                      (Ex33/enumeration,
                        A));
                  (e2,
                    Type
                      (Ex33/enumeration,
                        B))
                ],
                Monad
                  ([
                    Type
                      (Counter);
                    Type
                      (NonTermination)
                  ], Type (Z))),
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          Type
                            (Counter)
                        ],
                        [
                          Type
                            (Counter);
                          Type
                            (NonTermination)
                        ],
                        Apply
                          (?,
                            Variable
                              (?,
                                read_counter),
                            [
                              Tuple
                                (?)
                            ])),
                    Some
                      x,
                    Lift
                      (?,
                        [
                          Type
                            (NonTermination)
                        ],
                        [
                          Type
                            (Counter);
                          Type
                            (NonTermination)
                        ],
                        Apply
                          (?,
                            Variable
                              (?,
                                Ex33/compare_aux_rec),
                            [
                              Variable
                                (?,
                                  Ex33/x);
                              Variable
                                (?,
                                  Ex33/e1);
                              Variable
                                (?,
                                  Ex33/e2)
                            ]))))
            ]) in
        Apply
          (284, Variable (284, Ex33/compare_aux),
            [
              Apply
                (284, Variable (284, Ex33/cons_enum),
                  [
                    Variable
                      (284,
                        Ex33/m1);
                    Constructor
                      (284,
                        Ex33/End)
                  ]);
              Apply
                (284, Variable (284, Ex33/cons_enum),
                  [
                    Variable
                      (284,
                        Ex33/m2);
                    Constructor
                      (284,
                        Ex33/End)
                  ])
            ]))
    ])

286
Value
  (non_rec, @.,
    [
      ((equal, [ A; B ],
        [
          (cmp, (A -> (B -> Type (bool))));
          (m1, Type (Ex33/t, A));
          (m2, Type (Ex33/t, B))
        ], Monad ([ Type (Counter); Type (NonTermination) ], Type (bool))),
        LetFun 287
          (rec, @.,
            [
              ((equal_aux_rec, [ ],
                [
                  (counter, Type (nat));
                  (e1,
                    Type
                      (Ex33/enumeration,
                        A));
                  (e2,
                    Type
                      (Ex33/enumeration,
                        B))
                ],
                Monad
                  ([
                    Type
                      (NonTermination)
                  ], Type (bool))),
                Match
                  (?,
                    Variable
                      (?,
                        Ex33/counter),
                    [
                      (Constructor
                        (O),
                        Apply
                          (?,
                            Variable
                              (?,
                                not_terminated),
                            [
                              Tuple
                                (?)
                            ]));
                      (Constructor
                        (S,
                          counter),
                        Match
                          (288,
                            Tuple
                              (288,
                                Variable
                                  (288,
                                    Ex33/e1),
                                Variable
                                  (288,
                                    Ex33/e2)),
                            [
                              (Tuple
                                (Constructor
                                  (Ex33/End),
                                  Constructor
                                    (Ex33/End)),
                                Return
                                  (?,
                                    Constructor
                                      (289,
                                        true)));
                              (Tuple
                                (Constructor
                                  (Ex33/End),
                                  Any),
                                Return
                                  (?,
                                    Constructor
                                      (290,
                                        false)));
                              (Tuple
                                (Any,
                                  Constructor
                                    (Ex33/End)),
                                Return
                                  (?,
                                    Constructor
                                      (291,
                                        false)));
                              (Tuple
                                (Constructor
                                  (Ex33/More,
                                    v1,
                                    d1,
                                    r1,
                                    e1),
                                  Constructor
                                    (Ex33/More,
                                      v2,
                                      d2,
                                      r2,
                                      e2)),
                                Bind
                                  (?,
                                    Bind
                                      (?,
                                        Apply
                                          (294,
                                            Apply
                                              (?,
                                                Variable
                                                  (?,
                                                    Ex33/equal_aux_rec),
                                                [
                                                  Variable
                                                    (?,
                                                      Ex33/counter)
                                                ]),
                                            [
                                              Apply
                                                (294,
                                                  Variable
                                                    (294,
                                                      Ex33/cons_enum),
                                                  [
                                                    Variable
                                                      (294,
                                                        Ex33/r1);
                                                    Variable
                                                      (294,
                                                        Ex33/e1)
                                                  ]);
                                              Apply
                                                (294,
                                                  Variable
                                                    (294,
                                                      Ex33/cons_enum),
                                                  [
                                                    Variable
                                                      (294,
                                                        Ex33/r2);
                                                    Variable
                                                      (294,
                                                        Ex33/e2)
                                                  ])
                                            ]),
                                        Some
                                          x,
                                        Return
                                          (?,
                                            Apply
                                              (293,
                                                Variable
                                                  (293,
                                                    andb),
                                                [
                                                  Apply
                                                    (293,
                                                      Variable
                                                        (293,
                                                          Ex33/cmp),
                                                      [
                                                        Variable
                                                          (293,
                                                            Ex33/d1);
                                                        Variable
                                                          (293,
                                                            Ex33/d2)
                                                      ]);
                                                  Variable
                                                    (?,
                                                      Ex33/x)
                                                ]))),
                                    Some
                                      x,
                                    Return
                                      (?,
                                        Apply
                                          (293,
                                            Variable
                                              (293,
                                                andb),
                                            [
                                              Apply
                                                (293,
                                                  Variable
                                                    (293,
                                                      equiv_decb),
                                                  [
                                                    Apply
                                                      (293,
                                                        Variable
                                                          (293,
                                                            Ex33/Ord.compare),
                                                        [
                                                          Variable
                                                            (293,
                                                              Ex33/v1);
                                                          Variable
                                                            (293,
                                                              Ex33/v2)
                                                        ]);
                                                    Constant
                                                      (293,
                                                        Int(0))
                                                  ]);
                                              Variable
                                                (?,
                                                  Ex33/x)
                                            ]))))
                            ]))
                    ]))
            ]) in
        LetFun 287
          (non_rec, @.,
            [
              ((equal_aux, [ ],
                [
                  (e1,
                    Type
                      (Ex33/enumeration,
                        A));
                  (e2,
                    Type
                      (Ex33/enumeration,
                        B))
                ],
                Monad
                  ([
                    Type
                      (Counter);
                    Type
                      (NonTermination)
                  ], Type (bool))),
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          Type
                            (Counter)
                        ],
                        [
                          Type
                            (Counter);
                          Type
                            (NonTermination)
                        ],
                        Apply
                          (?,
                            Variable
                              (?,
                                read_counter),
                            [
                              Tuple
                                (?)
                            ])),
                    Some
                      x,
                    Lift
                      (?,
                        [
                          Type
                            (NonTermination)
                        ],
                        [
                          Type
                            (Counter);
                          Type
                            (NonTermination)
                        ],
                        Apply
                          (?,
                            Variable
                              (?,
                                Ex33/equal_aux_rec),
                            [
                              Variable
                                (?,
                                  Ex33/x);
                              Variable
                                (?,
                                  Ex33/e1);
                              Variable
                                (?,
                                  Ex33/e2)
                            ]))))
            ]) in
        Apply
          (295, Variable (295, Ex33/equal_aux),
            [
              Apply
                (295, Variable (295, Ex33/cons_enum),
                  [
                    Variable
                      (295,
                        Ex33/m1);
                    Constructor
                      (295,
                        Ex33/End)
                  ]);
              Apply
                (295, Variable (295, Ex33/cons_enum),
                  [
                    Variable
                      (295,
                        Ex33/m2);
                    Constructor
                      (295,
                        Ex33/End)
                  ])
            ]))
    ])

297
Value
  (rec, @coq_rec,
    [
      ((cardinal, [ A ], [ (x, Type (Ex33/t, A)) ], Type (Z)),
        Match
          (298, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty), Constant (298, Int(0)));
              (Constructor (Ex33/Node, l, Any, Any, r, Any),
                Apply
                  (299,
                    Variable
                      (299,
                        Z.add),
                    [
                      Apply
                        (299,
                          Variable
                            (299,
                              Z.add),
                          [
                            Apply
                              (299,
                                Variable
                                  (299,
                                    Ex33/cardinal),
                                [
                                  Variable
                                    (299,
                                      Ex33/l)
                                ]);
                            Constant
                              (299,
                                Int(1))
                          ]);
                      Apply
                        (299,
                          Variable
                            (299,
                              Ex33/cardinal),
                          [
                            Variable
                              (299,
                                Ex33/r)
                          ])
                    ]))
            ]))
    ])

302
Value
  (rec, @coq_rec,
    [
      ((bindings_aux, [ A ],
        [ (accu, Type (list, (Type (Ex33/key) * A))); (x, Type (Ex33/t, A)) ],
        Type (list, (Type (Ex33/key) * A))),
        Match
          (303, Variable (?, Ex33/x),
            [
              (Constructor (Ex33/Empty), Variable (303, Ex33/accu));
              (Constructor (Ex33/Node, l, v, d, r, Any),
                Apply
                  (304,
                    Variable
                      (304,
                        Ex33/bindings_aux),
                    [
                      Constructor
                        (304,
                          cons,
                          Tuple
                            (304,
                              Variable
                                (304,
                                  Ex33/v),
                              Variable
                                (304,
                                  Ex33/d)),
                          Apply
                            (304,
                              Variable
                                (304,
                                  Ex33/bindings_aux),
                              [
                                Variable
                                  (304,
                                    Ex33/accu);
                                Variable
                                  (304,
                                    Ex33/r)
                              ]));
                      Variable
                        (304,
                          Ex33/l)
                    ]))
            ]))
    ])

307
Value
  (non_rec, @.,
    [
      ((bindings, [ A ], [ (s, Type (Ex33/t, A)) ],
        Type (list, (Type (Ex33/key) * A))),
        Apply
          (308, Variable (308, Ex33/bindings_aux),
            [ Constructor (308, []); Variable (308, Ex33/s) ]))
    ])

310
Value
  (non_rec, @.,
    [
      ((choose, [ A ], [ ],
        (Type (Ex33/t, A) ->
          Monad
            ([ Type (OCaml.exception, Type (OCaml/not_found)) ],
              (Type (Ex33/key) * A)))), Variable (310, Ex33/min_binding))
    ])
