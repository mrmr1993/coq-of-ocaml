3 Module Ord:
  4 Abstract (t, [ ])
  
  5
  Value
    (non_rec, @.,
      [
        ((compare, [ ], [ (x, Type (t/0)) ], (Type (t/0) -> Type (Z/4))),
          Match
            (?, Variable (?, x/0),
              [
                (Any,
                  Function
                    (5,
                      x_1,
                      Match
                        (?,
                          Variable
                            (?,
                              x_1/0),
                          [
                            (Any,
                              Constant
                                (5,
                                  Int(0)))
                          ])))
              ]))
      ])

8 Synonym (key, [ ], Type (Ord.t/0))

10
Inductive t:
  ([ a ],
    [
      (Empty, [ ]);
      (Node, [ Type (t/0, a); Type (key/0); a; Type (t/0, a); Type (Z/3) ])
    ])

14
Value
  (non_rec, @.,
    [
      ((height, [ A ], [ (x, Type (t/0, A)) ], Type (Z/3)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0), Constant (15, Int(0)));
              (Constructor (Node/0, Any, Any, Any, Any, h),
                Variable (16, h/0))
            ]))
    ])

18
Value
  (non_rec, @.,
    [
      ((create, [ A ],
        [ (l, Type (t/0, A)); (x, Type (key/0)); (d, A); (r, Type (t/0, A)) ],
        Type (t/0, A)),
        LetVar ? hl =
          Apply (19, Variable (19, height/0), [ Variable (19, l/0) ]) in
        LetVar ? hr =
          Apply (20, Variable (20, height/0), [ Variable (20, r/0) ]) in
        Constructor
          (21, Node/0, Variable (21, l/0), Variable (21, x/0),
            Variable (21, d/0), Variable (21, r/0),
            IfThenElse
              (21,
                Apply
                  (21, Variable (21, OCaml.Pervasives.ge/3),
                    [ Variable (21, hl/0); Variable (21, hr/0) ]),
                Apply
                  (21, Variable (21, Z.add/3),
                    [ Variable (21, hl/0); Constant (21, Int(1)) ]),
                Apply
                  (21, Variable (21, Z.add/3),
                    [ Variable (21, hr/0); Constant (21, Int(1)) ]))))
    ])

23
Value
  (non_rec, @.,
    [
      ((singleton, [ A ], [ (x, Type (key/0)); (d, A) ], Type (t/0, A)),
        Constructor
          (23, Node/0, Constructor (23, Empty/0), Variable (23, x/0),
            Variable (23, d/0), Constructor (23, Empty/0),
            Constant (23, Int(1))))
    ])

25
Value
  (non_rec, @.,
    [
      ((bal, [ A ],
        [ (l, Type (t/0, A)); (x, Type (key/0)); (d, A); (r, Type (t/0, A)) ],
        Monad ([ OCaml.Invalid_argument/3 ], Type (t/0, A))),
        LetVar ? hl =
          Match
            (26, Variable (26, l/0),
              [
                (Constructor (Empty/0), Constant (26, Int(0)));
                (Constructor (Node/0, Any, Any, Any, Any, h),
                  Variable (26, h/0))
              ]) in
        LetVar ? hr =
          Match
            (27, Variable (27, r/0),
              [
                (Constructor (Empty/0), Constant (27, Int(0)));
                (Constructor (Node/0, Any, Any, Any, Any, h),
                  Variable (27, h/0))
              ]) in
        IfThenElse
          (28,
            Apply
              (28, Variable (28, OCaml.Pervasives.gt/3),
                [
                  Variable (28, hl/0);
                  Apply
                    (28,
                      Variable
                        (28,
                          Z.add/3),
                      [
                        Variable
                          (28,
                            hr/0);
                        Constant
                          (28,
                            Int(2))
                      ])
                ]),
            Match
              (28, Variable (29, l/0),
                [
                  (Constructor (Empty/0),
                    Apply
                      (30,
                        Variable
                          (30,
                            OCaml.Pervasives.invalid_arg/3),
                        [
                          Constant
                            (30,
                              String("Map.bal"))
                        ]));
                  (Constructor (Node/0, ll, lv, ld, lr, Any),
                    IfThenElse
                      (32,
                        Apply
                          (32,
                            Variable
                              (32,
                                OCaml.Pervasives.ge/3),
                            [
                              Apply
                                (32,
                                  Variable
                                    (32,
                                      height/0),
                                  [
                                    Variable
                                      (32,
                                        ll/0)
                                  ]);
                              Apply
                                (32,
                                  Variable
                                    (32,
                                      height/0),
                                  [
                                    Variable
                                      (32,
                                        lr/0)
                                  ])
                            ]),
                        Return
                          (?,
                            Apply
                              (33,
                                Variable
                                  (33,
                                    create/0),
                                [
                                  Variable
                                    (33,
                                      ll/0);
                                  Variable
                                    (33,
                                      lv/0);
                                  Variable
                                    (33,
                                      ld/0);
                                  Apply
                                    (33,
                                      Variable
                                        (33,
                                          create/0),
                                      [
                                        Variable
                                          (33,
                                            lr/0);
                                        Variable
                                          (33,
                                            x/0);
                                        Variable
                                          (33,
                                            d/0);
                                        Variable
                                          (33,
                                            r/0)
                                      ])
                                ])),
                        Match
                          (34,
                            Variable
                              (35,
                                lr/0),
                            [
                              (Constructor
                                (Empty/0),
                                Apply
                                  (36,
                                    Variable
                                      (36,
                                        OCaml.Pervasives.invalid_arg/3),
                                    [
                                      Constant
                                        (36,
                                          String("Map.bal"))
                                    ]));
                              (Constructor
                                (Node/0,
                                  lrl,
                                  lrv,
                                  lrd,
                                  lrr,
                                  Any),
                                Return
                                  (?,
                                    Apply
                                      (38,
                                        Variable
                                          (38,
                                            create/0),
                                        [
                                          Apply
                                            (38,
                                              Variable
                                                (38,
                                                  create/0),
                                              [
                                                Variable
                                                  (38,
                                                    ll/0);
                                                Variable
                                                  (38,
                                                    lv/0);
                                                Variable
                                                  (38,
                                                    ld/0);
                                                Variable
                                                  (38,
                                                    lrl/0)
                                              ]);
                                          Variable
                                            (38,
                                              lrv/0);
                                          Variable
                                            (38,
                                              lrd/0);
                                          Apply
                                            (38,
                                              Variable
                                                (38,
                                                  create/0),
                                              [
                                                Variable
                                                  (38,
                                                    lrr/0);
                                                Variable
                                                  (38,
                                                    x/0);
                                                Variable
                                                  (38,
                                                    d/0);
                                                Variable
                                                  (38,
                                                    r/0)
                                              ])
                                        ])))
                            ])))
                ]),
            IfThenElse
              (40,
                Apply
                  (40, Variable (40, OCaml.Pervasives.gt/3),
                    [
                      Variable (40, hr/0);
                      Apply
                        (40,
                          Variable
                            (40,
                              Z.add/3),
                          [
                            Variable
                              (40,
                                hl/0);
                            Constant
                              (40,
                                Int(2))
                          ])
                    ]),
                Match
                  (40, Variable (41, r/0),
                    [
                      (Constructor (Empty/0),
                        Apply
                          (42,
                            Variable
                              (42,
                                OCaml.Pervasives.invalid_arg/3),
                            [
                              Constant
                                (42,
                                  String("Map.bal"))
                            ]));
                      (Constructor (Node/0, rl, rv, rd, rr, Any),
                        IfThenElse
                          (44,
                            Apply
                              (44,
                                Variable
                                  (44,
                                    OCaml.Pervasives.ge/3),
                                [
                                  Apply
                                    (44,
                                      Variable
                                        (44,
                                          height/0),
                                      [
                                        Variable
                                          (44,
                                            rr/0)
                                      ]);
                                  Apply
                                    (44,
                                      Variable
                                        (44,
                                          height/0),
                                      [
                                        Variable
                                          (44,
                                            rl/0)
                                      ])
                                ]),
                            Return
                              (?,
                                Apply
                                  (45,
                                    Variable
                                      (45,
                                        create/0),
                                    [
                                      Apply
                                        (45,
                                          Variable
                                            (45,
                                              create/0),
                                          [
                                            Variable
                                              (45,
                                                l/0);
                                            Variable
                                              (45,
                                                x/0);
                                            Variable
                                              (45,
                                                d/0);
                                            Variable
                                              (45,
                                                rl/0)
                                          ]);
                                      Variable
                                        (45,
                                          rv/0);
                                      Variable
                                        (45,
                                          rd/0);
                                      Variable
                                        (45,
                                          rr/0)
                                    ])),
                            Match
                              (46,
                                Variable
                                  (47,
                                    rl/0),
                                [
                                  (Constructor
                                    (Empty/0),
                                    Apply
                                      (48,
                                        Variable
                                          (48,
                                            OCaml.Pervasives.invalid_arg/3),
                                        [
                                          Constant
                                            (48,
                                              String("Map.bal"))
                                        ]));
                                  (Constructor
                                    (Node/0,
                                      rll,
                                      rlv,
                                      rld,
                                      rlr,
                                      Any),
                                    Return
                                      (?,
                                        Apply
                                          (50,
                                            Variable
                                              (50,
                                                create/0),
                                            [
                                              Apply
                                                (50,
                                                  Variable
                                                    (50,
                                                      create/0),
                                                  [
                                                    Variable
                                                      (50,
                                                        l/0);
                                                    Variable
                                                      (50,
                                                        x/0);
                                                    Variable
                                                      (50,
                                                        d/0);
                                                    Variable
                                                      (50,
                                                        rll/0)
                                                  ]);
                                              Variable
                                                (50,
                                                  rlv/0);
                                              Variable
                                                (50,
                                                  rld/0);
                                              Apply
                                                (50,
                                                  Variable
                                                    (50,
                                                      create/0),
                                                  [
                                                    Variable
                                                      (50,
                                                        rlr/0);
                                                    Variable
                                                      (50,
                                                        rv/0);
                                                    Variable
                                                      (50,
                                                        rd/0);
                                                    Variable
                                                      (50,
                                                        rr/0)
                                                  ])
                                            ])))
                                ])))
                    ]),
                Return
                  (?,
                    Constructor
                      (53, Node/0, Variable (53, l/0),
                        Variable (53, x/0),
                        Variable (53, d/0),
                        Variable (53, r/0),
                        IfThenElse
                          (53,
                            Apply
                              (53,
                                Variable
                                  (53,
                                    OCaml.Pervasives.ge/3),
                                [
                                  Variable
                                    (53,
                                      hl/0);
                                  Variable
                                    (53,
                                      hr/0)
                                ]),
                            Apply
                              (53,
                                Variable (53, Z.add/3),
                                [
                                  Variable
                                    (53,
                                      hl/0);
                                  Constant
                                    (53,
                                      Int(1))
                                ]),
                            Apply
                              (53,
                                Variable (53, Z.add/3),
                                [
                                  Variable
                                    (53,
                                      hr/0);
                                  Constant
                                    (53,
                                      Int(1))
                                ])))))))
    ])

55
Value
  (non_rec, @.,
    [ ((empty, [ A ], [ ], Type (t/0, A)), Constructor (55, Empty/0)) ])

57
Value
  (non_rec, @.,
    [
      ((is_empty, [ A ], [ (x, Type (t/0, A)) ], Type (bool/3)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0), Constructor (57, true/3));
              (Any, Constructor (57, false/3))
            ]))
    ])

59
Value
  (rec, @coq_rec,
    [
      ((add, [ A ], [ (x, Type (key/0)); (data, A); (x_1, Type (t/0, A)) ],
        Monad ([ OCaml.Invalid_argument/3 ], Type (t/0, A))),
        Match
          (?, Variable (?, x_1/0),
            [
              (Constructor (Empty/0),
                Return
                  (?,
                    Constructor
                      (61,
                        Node/0,
                        Constructor
                          (61,
                            Empty/0),
                        Variable
                          (61,
                            x/0),
                        Variable
                          (61,
                            data/0),
                        Constructor
                          (61,
                            Empty/0),
                        Constant
                          (61,
                            Int(1)))));
              (Constructor (Node/0, l, v, d, r, h),
                LetVar ? c =
                  Apply
                    (63,
                      Variable
                        (63,
                          Ord.compare/0),
                      [
                        Variable
                          (63,
                            x/0);
                        Variable
                          (63,
                            v/0)
                      ])
                  in
                IfThenElse
                  (64,
                    Apply
                      (64,
                        Variable
                          (64,
                            equiv_decb/3),
                        [
                          Variable
                            (64,
                              c/0);
                          Constant
                            (64,
                              Int(0))
                        ]),
                    Return
                      (?,
                        Constructor
                          (65,
                            Node/0,
                            Variable
                              (65,
                                l/0),
                            Variable
                              (65,
                                x/0),
                            Variable
                              (65,
                                data/0),
                            Variable
                              (65,
                                r/0),
                            Variable
                              (65,
                                h/0))),
                    IfThenElse
                      (66,
                        Apply
                          (66,
                            Variable
                              (66,
                                OCaml.Pervasives.lt/3),
                            [
                              Variable
                                (66,
                                  c/0);
                              Constant
                                (66,
                                  Int(0))
                            ]),
                        Bind
                          (?,
                            Apply
                              (67,
                                Variable
                                  (67,
                                    add/0),
                                [
                                  Variable
                                    (67,
                                      x/0);
                                  Variable
                                    (67,
                                      data/0);
                                  Variable
                                    (67,
                                      l/0)
                                ]),
                            Some
                              x_2,
                            Apply
                              (67,
                                Variable
                                  (67,
                                    bal/0),
                                [
                                  Variable
                                    (?,
                                      x_2/0);
                                  Variable
                                    (67,
                                      v/0);
                                  Variable
                                    (67,
                                      d/0);
                                  Variable
                                    (67,
                                      r/0)
                                ])),
                        Bind
                          (?,
                            Apply
                              (69,
                                Variable
                                  (69,
                                    add/0),
                                [
                                  Variable
                                    (69,
                                      x/0);
                                  Variable
                                    (69,
                                      data/0);
                                  Variable
                                    (69,
                                      r/0)
                                ]),
                            Some
                              x_2,
                            Apply
                              (69,
                                Variable
                                  (69,
                                    bal/0),
                                [
                                  Variable
                                    (69,
                                      l/0);
                                  Variable
                                    (69,
                                      v/0);
                                  Variable
                                    (69,
                                      d/0);
                                  Variable
                                    (?,
                                      x_2/0)
                                ])))))
            ]))
    ])

72
Value
  (rec, @coq_rec,
    [
      ((find, [ A ], [ (x, Type (Ord.t/0)); (x_1, Type (t/0, A)) ],
        Monad ([ OCaml.Not_found/3 ], A)),
        Match
          (?, Variable (?, x_1/0),
            [
              (Constructor (Empty/0),
                Apply
                  (74,
                    Variable
                      (74,
                        OCaml.raise_Not_found/3),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (Node/0, l, v, d, r, Any),
                LetVar ? c =
                  Apply
                    (76,
                      Variable
                        (76,
                          Ord.compare/0),
                      [
                        Variable
                          (76,
                            x/0);
                        Variable
                          (76,
                            v/0)
                      ])
                  in
                IfThenElse
                  (77,
                    Apply
                      (77,
                        Variable
                          (77,
                            equiv_decb/3),
                        [
                          Variable
                            (77,
                              c/0);
                          Constant
                            (77,
                              Int(0))
                        ]),
                    Return
                      (?,
                        Variable
                          (77,
                            d/0)),
                    Apply
                      (78,
                        Variable
                          (78,
                            find/0),
                        [
                          Variable
                            (78,
                              x/0);
                          IfThenElse
                            (78,
                              Apply
                                (78,
                                  Variable
                                    (78,
                                      OCaml.Pervasives.lt/3),
                                  [
                                    Variable
                                      (78,
                                        c/0);
                                    Constant
                                      (78,
                                        Int(0))
                                  ]),
                              Variable
                                (78,
                                  l/0),
                              Variable
                                (78,
                                  r/0))
                        ])))
            ]))
    ])

81
Value
  (rec, @coq_rec,
    [
      ((mem, [ A ], [ (x, Type (Ord.t/0)); (x_1, Type (t/0, A)) ], Type (bool/3)),
        Match
          (?, Variable (?, x_1/0),
            [
              (Constructor (Empty/0), Constructor (83, false/3));
              (Constructor (Node/0, l, v, d, r, Any),
                LetVar ? c =
                  Apply
                    (85,
                      Variable
                        (85,
                          Ord.compare/0),
                      [
                        Variable
                          (85,
                            x/0);
                        Variable
                          (85,
                            v/0)
                      ])
                  in
                Apply
                  (86,
                    Variable
                      (86,
                        orb/3),
                    [
                      Apply
                        (86,
                          Variable
                            (86,
                              equiv_decb/3),
                          [
                            Variable
                              (86,
                                c/0);
                            Constant
                              (86,
                                Int(0))
                          ]);
                      Apply
                        (86,
                          Variable
                            (86,
                              mem/0),
                          [
                            Variable
                              (86,
                                x/0);
                            IfThenElse
                              (86,
                                Apply
                                  (86,
                                    Variable
                                      (86,
                                        OCaml.Pervasives.lt/3),
                                    [
                                      Variable
                                        (86,
                                          c/0);
                                      Constant
                                        (86,
                                          Int(0))
                                    ]),
                                Variable
                                  (86,
                                    l/0),
                                Variable
                                  (86,
                                    r/0))
                          ])
                    ]))
            ]))
    ])

89
Value
  (rec, @coq_rec,
    [
      ((min_binding, [ A ], [ (x, Type (t/0, A)) ],
        Monad ([ OCaml.Not_found/3 ], (Type (key/0) * A))),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0),
                Apply
                  (90,
                    Variable
                      (90,
                        OCaml.raise_Not_found/3),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (Node/0, Constructor (Empty/0), x, d, r, Any),
                Return
                  (?,
                    Tuple
                      (91,
                        Variable
                          (91,
                            x/0),
                        Variable
                          (91,
                            d/0))));
              (Constructor (Node/0, l, x, d, r, Any),
                Apply
                  (92,
                    Variable
                      (92,
                        min_binding/0),
                    [
                      Variable
                        (92,
                          l/0)
                    ]))
            ]))
    ])

95
Value
  (rec, @coq_rec,
    [
      ((max_binding, [ A ], [ (x, Type (t/0, A)) ],
        Monad ([ OCaml.Not_found/3 ], (Type (key/0) * A))),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0),
                Apply
                  (96,
                    Variable
                      (96,
                        OCaml.raise_Not_found/3),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (Node/0, l, x, d, Constructor (Empty/0), Any),
                Return
                  (?,
                    Tuple
                      (97,
                        Variable
                          (97,
                            x/0),
                        Variable
                          (97,
                            d/0))));
              (Constructor (Node/0, l, x, d, r, Any),
                Apply
                  (98,
                    Variable
                      (98,
                        max_binding/0),
                    [
                      Variable
                        (98,
                          r/0)
                    ]))
            ]))
    ])

101
Value
  (rec, @coq_rec,
    [
      ((remove_min_binding, [ A ], [ (x, Type (t/0, A)) ],
        Monad ([ OCaml.Invalid_argument/3 ], Type (t/0, A))),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0),
                Apply
                  (102,
                    Variable
                      (102,
                        OCaml.Pervasives.invalid_arg/3),
                    [
                      Constant
                        (102,
                          String("Map.remove_min_elt"))
                    ]));
              (Constructor (Node/0, Constructor (Empty/0), x, d, r, Any),
                Return (?, Variable (103, r/0)));
              (Constructor (Node/0, l, x, d, r, Any),
                Bind
                  (?,
                    Apply
                      (104,
                        Variable
                          (104,
                            remove_min_binding/0),
                        [
                          Variable
                            (104,
                              l/0)
                        ]),
                    Some
                      x_1,
                    Apply
                      (104,
                        Variable
                          (104,
                            bal/0),
                        [
                          Variable
                            (?,
                              x_1/0);
                          Variable
                            (104,
                              x/0);
                          Variable
                            (104,
                              d/0);
                          Variable
                            (104,
                              r/0)
                        ])))
            ]))
    ])

107
Value
  (non_rec, @.,
    [
      ((remove_merge, [ A ], [ (t1, Type (t/0, A)); (t2, Type (t/0, A)) ],
        Monad ([ OCaml.Invalid_argument/3; OCaml.Not_found/3 ], Type (t/0, A))),
        Match
          (108, Tuple (108, Variable (108, t1/0), Variable (108, t2/0)),
            [
              (Tuple (Constructor (Empty/0), t (= t_1)),
                Return (?, Variable (109, t_1/0)));
              (Tuple (t (= t_1), Constructor (Empty/0)),
                Return (?, Variable (110, t_1/0)));
              (Tuple (Any, Any),
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          OCaml.Not_found/3
                        ],
                        [
                          OCaml.Invalid_argument/3;
                          OCaml.Not_found/3
                        ],
                        Apply
                          (112,
                            Variable
                              (112,
                                min_binding/0),
                            [
                              Variable
                                (112,
                                  t2/0)
                            ])),
                    Some
                      x,
                    Match
                      (112,
                        Variable
                          (?,
                            x/0),
                        [
                          (Tuple
                            (x,
                              d),
                            Lift
                              (?,
                                [
                                  OCaml.Invalid_argument/3
                                ],
                                [
                                  OCaml.Invalid_argument/3;
                                  OCaml.Not_found/3
                                ],
                                Bind
                                  (?,
                                    Apply
                                      (113,
                                        Variable
                                          (113,
                                            remove_min_binding/0),
                                        [
                                          Variable
                                            (113,
                                              t2/0)
                                        ]),
                                    Some
                                      x_1,
                                    Apply
                                      (113,
                                        Variable
                                          (113,
                                            bal/0),
                                        [
                                          Variable
                                            (113,
                                              t1/0);
                                          Variable
                                            (113,
                                              x/0);
                                          Variable
                                            (113,
                                              d/0);
                                          Variable
                                            (?,
                                              x_1/0)
                                        ]))))
                        ])))
            ]))
    ])

115
Value
  (rec, @coq_rec,
    [
      ((remove, [ A ], [ (x, Type (Ord.t/0)); (x_1, Type (t/0, A)) ],
        Monad ([ OCaml.Invalid_argument/3; OCaml.Not_found/3 ], Type (t/0, A))),
        Match
          (?, Variable (?, x_1/0),
            [
              (Constructor (Empty/0),
                Return (?, Constructor (117, Empty/0)));
              (Constructor (Node/0, l, v, d, r, h),
                LetVar ? c =
                  Apply
                    (119,
                      Variable
                        (119,
                          Ord.compare/0),
                      [
                        Variable
                          (119,
                            x/0);
                        Variable
                          (119,
                            v/0)
                      ])
                  in
                IfThenElse
                  (120,
                    Apply
                      (120,
                        Variable
                          (120,
                            equiv_decb/3),
                        [
                          Variable
                            (120,
                              c/0);
                          Constant
                            (120,
                              Int(0))
                        ]),
                    Apply
                      (121,
                        Variable
                          (121,
                            remove_merge/0),
                        [
                          Variable
                            (121,
                              l/0);
                          Variable
                            (121,
                              r/0)
                        ]),
                    IfThenElse
                      (122,
                        Apply
                          (122,
                            Variable
                              (122,
                                OCaml.Pervasives.lt/3),
                            [
                              Variable
                                (122,
                                  c/0);
                              Constant
                                (122,
                                  Int(0))
                            ]),
                        Bind
                          (?,
                            Apply
                              (123,
                                Variable
                                  (123,
                                    remove/0),
                                [
                                  Variable
                                    (123,
                                      x/0);
                                  Variable
                                    (123,
                                      l/0)
                                ]),
                            Some
                              x_2,
                            Lift
                              (?,
                                [
                                  OCaml.Invalid_argument/3
                                ],
                                [
                                  OCaml.Invalid_argument/3;
                                  OCaml.Not_found/3
                                ],
                                Apply
                                  (123,
                                    Variable
                                      (123,
                                        bal/0),
                                    [
                                      Variable
                                        (?,
                                          x_2/0);
                                      Variable
                                        (123,
                                          v/0);
                                      Variable
                                        (123,
                                          d/0);
                                      Variable
                                        (123,
                                          r/0)
                                    ]))),
                        Bind
                          (?,
                            Apply
                              (125,
                                Variable
                                  (125,
                                    remove/0),
                                [
                                  Variable
                                    (125,
                                      x/0);
                                  Variable
                                    (125,
                                      r/0)
                                ]),
                            Some
                              x_2,
                            Lift
                              (?,
                                [
                                  OCaml.Invalid_argument/3
                                ],
                                [
                                  OCaml.Invalid_argument/3;
                                  OCaml.Not_found/3
                                ],
                                Apply
                                  (125,
                                    Variable
                                      (125,
                                        bal/0),
                                    [
                                      Variable
                                        (125,
                                          l/0);
                                      Variable
                                        (125,
                                          v/0);
                                      Variable
                                        (125,
                                          d/0);
                                      Variable
                                        (?,
                                          x_2/0)
                                    ]))))))
            ]))
    ])

128
Value
  (rec, @coq_rec,
    [
      ((iter, [ A; B ], [ (f, (Type (key/0) -> (A -> B))); (x, Type (t/0, A)) ],
        Type (unit/3)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0), Constructor (129, tt/3));
              (Constructor (Node/0, l, v, d, r, Any),
                Apply
                  (131,
                    Variable
                      (131,
                        iter/0),
                    [
                      Variable
                        (131,
                          f/0);
                      Variable
                        (131,
                          r/0)
                    ]))
            ]))
    ])

134
Value
  (rec, @coq_rec,
    [
      ((map, [ A; B ], [ (f, (A -> B)); (x, Type (t/0, A)) ], Type (t/0, B)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0), Constructor (136, Empty/0));
              (Constructor (Node/0, l, v, d, r, h),
                LetVar ? l' =
                  Apply
                    (138,
                      Variable
                        (138,
                          map/0),
                      [
                        Variable
                          (138,
                            f/0);
                        Variable
                          (138,
                            l/0)
                      ])
                  in
                LetVar ? d' =
                  Apply
                    (139,
                      Variable
                        (139,
                          f/0),
                      [
                        Variable
                          (139,
                            d/0)
                      ])
                  in
                LetVar ? r' =
                  Apply
                    (140,
                      Variable
                        (140,
                          map/0),
                      [
                        Variable
                          (140,
                            f/0);
                        Variable
                          (140,
                            r/0)
                      ])
                  in
                Constructor
                  (141, Node/0,
                    Variable
                      (141,
                        l'/0),
                    Variable
                      (141,
                        v/0),
                    Variable
                      (141,
                        d'/0),
                    Variable
                      (141,
                        r'/0),
                    Variable
                      (141,
                        h/0)))
            ]))
    ])

144
Value
  (rec, @coq_rec,
    [
      ((mapi, [ A; B ], [ (f, (Type (key/0) -> (A -> B))); (x, Type (t/0, A)) ],
        Type (t/0, B)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0), Constructor (146, Empty/0));
              (Constructor (Node/0, l, v, d, r, h),
                LetVar ? l' =
                  Apply
                    (148,
                      Variable
                        (148,
                          mapi/0),
                      [
                        Variable
                          (148,
                            f/0);
                        Variable
                          (148,
                            l/0)
                      ])
                  in
                LetVar ? d' =
                  Apply
                    (149,
                      Variable
                        (149,
                          f/0),
                      [
                        Variable
                          (149,
                            v/0);
                        Variable
                          (149,
                            d/0)
                      ])
                  in
                LetVar ? r' =
                  Apply
                    (150,
                      Variable
                        (150,
                          mapi/0),
                      [
                        Variable
                          (150,
                            f/0);
                        Variable
                          (150,
                            r/0)
                      ])
                  in
                Constructor
                  (151, Node/0,
                    Variable
                      (151,
                        l'/0),
                    Variable
                      (151,
                        v/0),
                    Variable
                      (151,
                        d'/0),
                    Variable
                      (151,
                        r'/0),
                    Variable
                      (151,
                        h/0)))
            ]))
    ])

154
Value
  (rec, @coq_rec,
    [
      ((fold, [ A; B ],
        [
          (f, (Type (key/0) -> (A -> (B -> B))));
          (m, Type (t/0, A));
          (accu, B)
        ], B),
        Match
          (155, Variable (155, m/0),
            [
              (Constructor (Empty/0), Variable (156, accu/0));
              (Constructor (Node/0, l, v, d, r, Any),
                Apply
                  (158,
                    Variable
                      (158,
                        fold/0),
                    [
                      Variable
                        (158,
                          f/0);
                      Variable
                        (158,
                          r/0);
                      Apply
                        (158,
                          Variable
                            (158,
                              f/0),
                          [
                            Variable
                              (158,
                                v/0);
                            Variable
                              (158,
                                d/0);
                            Apply
                              (158,
                                Variable
                                  (158,
                                    fold/0),
                                [
                                  Variable
                                    (158,
                                      f/0);
                                  Variable
                                    (158,
                                      l/0);
                                  Variable
                                    (158,
                                      accu/0)
                                ])
                          ])
                    ]))
            ]))
    ])

161
Value
  (rec, @coq_rec,
    [
      ((for_all, [ A ],
        [ (p, (Type (key/0) -> (A -> Type (bool/3)))); (x, Type (t/0, A)) ],
        Type (bool/3)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0), Constructor (162, true/3));
              (Constructor (Node/0, l, v, d, r, Any),
                Apply
                  (163,
                    Variable
                      (163,
                        andb/3),
                    [
                      Apply
                        (163,
                          Variable
                            (163,
                              p/0),
                          [
                            Variable
                              (163,
                                v/0);
                            Variable
                              (163,
                                d/0)
                          ]);
                      Apply
                        (163,
                          Variable
                            (163,
                              andb/3),
                          [
                            Apply
                              (163,
                                Variable
                                  (163,
                                    for_all/0),
                                [
                                  Variable
                                    (163,
                                      p/0);
                                  Variable
                                    (163,
                                      l/0)
                                ]);
                            Apply
                              (163,
                                Variable
                                  (163,
                                    for_all/0),
                                [
                                  Variable
                                    (163,
                                      p/0);
                                  Variable
                                    (163,
                                      r/0)
                                ])
                          ])
                    ]))
            ]))
    ])

166
Value
  (rec, @coq_rec,
    [
      ((exists_, [ A ],
        [ (p, (Type (key/0) -> (A -> Type (bool/3)))); (x, Type (t/0, A)) ],
        Type (bool/3)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0), Constructor (167, false/3));
              (Constructor (Node/0, l, v, d, r, Any),
                Apply
                  (168,
                    Variable
                      (168,
                        orb/3),
                    [
                      Apply
                        (168,
                          Variable
                            (168,
                              p/0),
                          [
                            Variable
                              (168,
                                v/0);
                            Variable
                              (168,
                                d/0)
                          ]);
                      Apply
                        (168,
                          Variable
                            (168,
                              orb/3),
                          [
                            Apply
                              (168,
                                Variable
                                  (168,
                                    exists_/0),
                                [
                                  Variable
                                    (168,
                                      p/0);
                                  Variable
                                    (168,
                                      l/0)
                                ]);
                            Apply
                              (168,
                                Variable
                                  (168,
                                    exists_/0),
                                [
                                  Variable
                                    (168,
                                      p/0);
                                  Variable
                                    (168,
                                      r/0)
                                ])
                          ])
                    ]))
            ]))
    ])

179
Value
  (rec, @coq_rec,
    [
      ((add_min_binding, [ A ],
        [ (k, Type (key/0)); (v, A); (x, Type (t/0, A)) ],
        Monad ([ OCaml.Invalid_argument/3 ], Type (t/0, A))),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0),
                Return
                  (?,
                    Apply
                      (180,
                        Variable
                          (180,
                            singleton/0),
                        [
                          Variable
                            (180,
                              k/0);
                          Variable
                            (180,
                              v/0)
                        ])));
              (Constructor (Node/0, l, x, d, r, h),
                Bind
                  (?,
                    Apply
                      (182,
                        Variable
                          (182,
                            add_min_binding/0),
                        [
                          Variable
                            (182,
                              k/0);
                          Variable
                            (182,
                              v/0);
                          Variable
                            (182,
                              l/0)
                        ]),
                    Some
                      x_1,
                    Apply
                      (182,
                        Variable
                          (182,
                            bal/0),
                        [
                          Variable
                            (?,
                              x_1/0);
                          Variable
                            (182,
                              x/0);
                          Variable
                            (182,
                              d/0);
                          Variable
                            (182,
                              r/0)
                        ])))
            ]))
    ])

185
Value
  (rec, @coq_rec,
    [
      ((add_max_binding, [ A ],
        [ (k, Type (key/0)); (v, A); (x, Type (t/0, A)) ],
        Monad ([ OCaml.Invalid_argument/3 ], Type (t/0, A))),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0),
                Return
                  (?,
                    Apply
                      (186,
                        Variable
                          (186,
                            singleton/0),
                        [
                          Variable
                            (186,
                              k/0);
                          Variable
                            (186,
                              v/0)
                        ])));
              (Constructor (Node/0, l, x, d, r, h),
                Bind
                  (?,
                    Apply
                      (188,
                        Variable
                          (188,
                            add_max_binding/0),
                        [
                          Variable
                            (188,
                              k/0);
                          Variable
                            (188,
                              v/0);
                          Variable
                            (188,
                              r/0)
                        ]),
                    Some
                      x_1,
                    Apply
                      (188,
                        Variable
                          (188,
                            bal/0),
                        [
                          Variable
                            (188,
                              l/0);
                          Variable
                            (188,
                              x/0);
                          Variable
                            (188,
                              d/0);
                          Variable
                            (?,
                              x_1/0)
                        ])))
            ]))
    ])

194
Value
  (rec, @.,
    [
      ((join_rec, [ A ],
        [
          (counter, Type (nat/3));
          (l, Type (t/0, A));
          (v, Type (key/0));
          (d, A);
          (r, Type (t/0, A))
        ],
        Monad ([ OCaml.Invalid_argument/3; NonTermination/3 ], Type (t/0, A))),
        Match
          (?, Variable (?, counter/0),
            [
              (Constructor (O/3),
                Lift
                  (?,
                    [
                      NonTermination/3
                    ],
                    [
                      OCaml.Invalid_argument/3;
                      NonTermination/3
                    ],
                    Apply
                      (?,
                        Variable
                          (?,
                            not_terminated/3),
                        [
                          Tuple
                            (?)
                        ])));
              (Constructor (S/3, counter),
                Match
                  (195,
                    Tuple
                      (195,
                        Variable
                          (195,
                            l/0),
                        Variable
                          (195,
                            r/0)),
                    [
                      (Tuple
                        (Constructor
                          (Empty/0),
                          Any),
                        Lift
                          (?,
                            [
                              OCaml.Invalid_argument/3
                            ],
                            [
                              OCaml.Invalid_argument/3;
                              NonTermination/3
                            ],
                            Apply
                              (196,
                                Variable
                                  (196,
                                    add_min_binding/0),
                                [
                                  Variable
                                    (196,
                                      v/0);
                                  Variable
                                    (196,
                                      d/0);
                                  Variable
                                    (196,
                                      r/0)
                                ])));
                      (Tuple
                        (Any,
                          Constructor
                            (Empty/0)),
                        Lift
                          (?,
                            [
                              OCaml.Invalid_argument/3
                            ],
                            [
                              OCaml.Invalid_argument/3;
                              NonTermination/3
                            ],
                            Apply
                              (197,
                                Variable
                                  (197,
                                    add_max_binding/0),
                                [
                                  Variable
                                    (197,
                                      v/0);
                                  Variable
                                    (197,
                                      d/0);
                                  Variable
                                    (197,
                                      l/0)
                                ])));
                      (Tuple
                        (Constructor
                          (Node/0,
                            ll,
                            lv,
                            ld,
                            lr,
                            lh),
                          Constructor
                            (Node/0,
                              rl,
                              rv,
                              rd,
                              rr,
                              rh)),
                        IfThenElse
                          (199,
                            Apply
                              (199,
                                Variable
                                  (199,
                                    OCaml.Pervasives.gt/3),
                                [
                                  Variable
                                    (199,
                                      lh/0);
                                  Apply
                                    (199,
                                      Variable
                                        (199,
                                          Z.add/3),
                                      [
                                        Variable
                                          (199,
                                            rh/0);
                                        Constant
                                          (199,
                                            Int(2))
                                      ])
                                ]),
                            Bind
                              (?,
                                Apply
                                  (199,
                                    Apply
                                      (?,
                                        Variable
                                          (?,
                                            join_rec/0),
                                        [
                                          Variable
                                            (?,
                                              counter/0)
                                        ]),
                                    [
                                      Variable
                                        (199,
                                          lr/0);
                                      Variable
                                        (199,
                                          v/0);
                                      Variable
                                        (199,
                                          d/0);
                                      Variable
                                        (199,
                                          r/0)
                                    ]),
                                Some
                                  x,
                                Lift
                                  (?,
                                    [
                                      OCaml.Invalid_argument/3
                                    ],
                                    [
                                      OCaml.Invalid_argument/3;
                                      NonTermination/3
                                    ],
                                    Apply
                                      (199,
                                        Variable
                                          (199,
                                            bal/0),
                                        [
                                          Variable
                                            (199,
                                              ll/0);
                                          Variable
                                            (199,
                                              lv/0);
                                          Variable
                                            (199,
                                              ld/0);
                                          Variable
                                            (?,
                                              x/0)
                                        ]))),
                            IfThenElse
                              (200,
                                Apply
                                  (200,
                                    Variable
                                      (200,
                                        OCaml.Pervasives.gt/3),
                                    [
                                      Variable
                                        (200,
                                          rh/0);
                                      Apply
                                        (200,
                                          Variable
                                            (200,
                                              Z.add/3),
                                          [
                                            Variable
                                              (200,
                                                lh/0);
                                            Constant
                                              (200,
                                                Int(2))
                                          ])
                                    ]),
                                Bind
                                  (?,
                                    Apply
                                      (200,
                                        Apply
                                          (?,
                                            Variable
                                              (?,
                                                join_rec/0),
                                            [
                                              Variable
                                                (?,
                                                  counter/0)
                                            ]),
                                        [
                                          Variable
                                            (200,
                                              l/0);
                                          Variable
                                            (200,
                                              v/0);
                                          Variable
                                            (200,
                                              d/0);
                                          Variable
                                            (200,
                                              rl/0)
                                        ]),
                                    Some
                                      x,
                                    Lift
                                      (?,
                                        [
                                          OCaml.Invalid_argument/3
                                        ],
                                        [
                                          OCaml.Invalid_argument/3;
                                          NonTermination/3
                                        ],
                                        Apply
                                          (200,
                                            Variable
                                              (200,
                                                bal/0),
                                            [
                                              Variable
                                                (?,
                                                  x/0);
                                              Variable
                                                (200,
                                                  rv/0);
                                              Variable
                                                (200,
                                                  rd/0);
                                              Variable
                                                (200,
                                                  rr/0)
                                            ]))),
                                Return
                                  (?,
                                    Apply
                                      (201,
                                        Variable
                                          (201,
                                            create/0),
                                        [
                                          Variable
                                            (201,
                                              l/0);
                                          Variable
                                            (201,
                                              v/0);
                                          Variable
                                            (201,
                                              d/0);
                                          Variable
                                            (201,
                                              r/0)
                                        ])))))
                    ]))
            ]))
    ])

194
Value
  (non_rec, @.,
    [
      ((join, [ A ],
        [ (l, Type (t/0, A)); (v, Type (key/0)); (d, A); (r, Type (t/0, A)) ],
        Monad
          ([ Counter/3; OCaml.Invalid_argument/3; NonTermination/3 ],
            Type (t/0, A))),
        Bind
          (?,
            Lift
              (?, [ Counter/3 ],
                [
                  Counter/3;
                  OCaml.Invalid_argument/3;
                  NonTermination/3
                ],
                Apply (?, Variable (?, read_counter/3), [ Tuple (?) ])),
            Some x,
            Lift
              (?, [ OCaml.Invalid_argument/3; NonTermination/3 ],
                [
                  Counter/3;
                  OCaml.Invalid_argument/3;
                  NonTermination/3
                ],
                Apply
                  (?, Variable (?, join_rec/0),
                    [
                      Variable (?, x/0);
                      Variable (?, l/0);
                      Variable (?, v/0);
                      Variable (?, d/0);
                      Variable (?, r/0)
                    ]))))
    ])

207
Value
  (non_rec, @.,
    [
      ((concat, [ A ], [ (t1, Type (t/0, A)); (t2, Type (t/0, A)) ],
        Monad
          ([
            Counter/3;
            OCaml.Invalid_argument/3;
            NonTermination/3;
            OCaml.Not_found/3
          ], Type (t/0, A))),
        Match
          (208, Tuple (208, Variable (208, t1/0), Variable (208, t2/0)),
            [
              (Tuple (Constructor (Empty/0), t (= t_1)),
                Return (?, Variable (209, t_1/0)));
              (Tuple (t (= t_1), Constructor (Empty/0)),
                Return (?, Variable (210, t_1/0)));
              (Tuple (Any, Any),
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          OCaml.Not_found/3
                        ],
                        [
                          Counter/3;
                          OCaml.Invalid_argument/3;
                          NonTermination/3;
                          OCaml.Not_found/3
                        ],
                        Apply
                          (212,
                            Variable
                              (212,
                                min_binding/0),
                            [
                              Variable
                                (212,
                                  t2/0)
                            ])),
                    Some
                      x,
                    Match
                      (212,
                        Variable
                          (?,
                            x/0),
                        [
                          (Tuple
                            (x,
                              d),
                            Lift
                              (?,
                                [
                                  Counter/3;
                                  OCaml.Invalid_argument/3;
                                  NonTermination/3
                                ],
                                [
                                  Counter/3;
                                  OCaml.Invalid_argument/3;
                                  NonTermination/3;
                                  OCaml.Not_found/3
                                ],
                                Bind
                                  (?,
                                    Lift
                                      (?,
                                        [
                                          OCaml.Invalid_argument/3
                                        ],
                                        [
                                          Counter/3;
                                          OCaml.Invalid_argument/3;
                                          NonTermination/3
                                        ],
                                        Apply
                                          (213,
                                            Variable
                                              (213,
                                                remove_min_binding/0),
                                            [
                                              Variable
                                                (213,
                                                  t2/0)
                                            ])),
                                    Some
                                      x_1,
                                    Apply
                                      (213,
                                        Variable
                                          (213,
                                            join/0),
                                        [
                                          Variable
                                            (213,
                                              t1/0);
                                          Variable
                                            (213,
                                              x/0);
                                          Variable
                                            (213,
                                              d/0);
                                          Variable
                                            (?,
                                              x_1/0)
                                        ]))))
                        ])))
            ]))
    ])

215
Value
  (non_rec, @.,
    [
      ((concat_or_join, [ A ],
        [
          (t1, Type (t/0, A));
          (v, Type (key/0));
          (d, Type (option/3, A));
          (t2, Type (t/0, A))
        ],
        Monad
          ([
            Counter/3;
            OCaml.Invalid_argument/3;
            NonTermination/3;
            OCaml.Not_found/3
          ], Type (t/0, A))),
        Match
          (216, Variable (216, d/0),
            [
              (Constructor (Some/3, d),
                Lift
                  (?,
                    [
                      Counter/3;
                      OCaml.Invalid_argument/3;
                      NonTermination/3
                    ],
                    [
                      Counter/3;
                      OCaml.Invalid_argument/3;
                      NonTermination/3;
                      OCaml.Not_found/3
                    ],
                    Apply
                      (217,
                        Variable
                          (217,
                            join/0),
                        [
                          Variable
                            (217,
                              t1/0);
                          Variable
                            (217,
                              v/0);
                          Variable
                            (217,
                              d/0);
                          Variable
                            (217,
                              t2/0)
                        ])));
              (Constructor (None/3),
                Apply
                  (218,
                    Variable
                      (218,
                        concat/0),
                    [
                      Variable
                        (218,
                          t1/0);
                      Variable
                        (218,
                          t2/0)
                    ]))
            ]))
    ])

220
Value
  (rec, @coq_rec,
    [
      ((split, [ A ], [ (x, Type (Ord.t/0)); (x_1, Type (t/0, A)) ],
        Monad
          ([ Counter/3; OCaml.Invalid_argument/3; NonTermination/3 ],
            (Type (t/0, A) * Type (option/3, A) * Type (t/0, A)))),
        Match
          (?, Variable (?, x_1/0),
            [
              (Constructor (Empty/0),
                Return
                  (?,
                    Tuple
                      (222,
                        Constructor
                          (222,
                            Empty/0),
                        Constructor
                          (222,
                            None/3),
                        Constructor
                          (222,
                            Empty/0))));
              (Constructor (Node/0, l, v, d, r, Any),
                LetVar ? c =
                  Apply
                    (224,
                      Variable
                        (224,
                          Ord.compare/0),
                      [
                        Variable
                          (224,
                            x/0);
                        Variable
                          (224,
                            v/0)
                      ])
                  in
                IfThenElse
                  (225,
                    Apply
                      (225,
                        Variable
                          (225,
                            equiv_decb/3),
                        [
                          Variable
                            (225,
                              c/0);
                          Constant
                            (225,
                              Int(0))
                        ]),
                    Return
                      (?,
                        Tuple
                          (225,
                            Variable
                              (225,
                                l/0),
                            Constructor
                              (225,
                                Some/3,
                                Variable
                                  (225,
                                    d/0)),
                            Variable
                              (225,
                                r/0))),
                    IfThenElse
                      (226,
                        Apply
                          (226,
                            Variable
                              (226,
                                OCaml.Pervasives.lt/3),
                            [
                              Variable
                                (226,
                                  c/0);
                              Constant
                                (226,
                                  Int(0))
                            ]),
                        Bind
                          (?,
                            Apply
                              (227,
                                Variable
                                  (227,
                                    split/0),
                                [
                                  Variable
                                    (227,
                                      x/0);
                                  Variable
                                    (227,
                                      l/0)
                                ]),
                            Some
                              x_2,
                            Match
                              (227,
                                Variable
                                  (?,
                                    x_2/0),
                                [
                                  (Tuple
                                    (ll,
                                      pres,
                                      rl),
                                    Bind
                                      (?,
                                        Apply
                                          (227,
                                            Variable
                                              (227,
                                                join/0),
                                            [
                                              Variable
                                                (227,
                                                  rl/0);
                                              Variable
                                                (227,
                                                  v/0);
                                              Variable
                                                (227,
                                                  d/0);
                                              Variable
                                                (227,
                                                  r/0)
                                            ]),
                                        Some
                                          x_2,
                                        Return
                                          (?,
                                            Tuple
                                              (227,
                                                Variable
                                                  (227,
                                                    ll/0),
                                                Variable
                                                  (227,
                                                    pres/0),
                                                Variable
                                                  (?,
                                                    x_2/0)))))
                                ])),
                        Bind
                          (?,
                            Apply
                              (229,
                                Variable
                                  (229,
                                    split/0),
                                [
                                  Variable
                                    (229,
                                      x/0);
                                  Variable
                                    (229,
                                      r/0)
                                ]),
                            Some
                              x_2,
                            Match
                              (229,
                                Variable
                                  (?,
                                    x_2/0),
                                [
                                  (Tuple
                                    (lr,
                                      pres,
                                      rr),
                                    Bind
                                      (?,
                                        Apply
                                          (229,
                                            Variable
                                              (229,
                                                join/0),
                                            [
                                              Variable
                                                (229,
                                                  l/0);
                                              Variable
                                                (229,
                                                  v/0);
                                              Variable
                                                (229,
                                                  d/0);
                                              Variable
                                                (229,
                                                  lr/0)
                                            ]),
                                        Some
                                          x_2,
                                        Return
                                          (?,
                                            Tuple
                                              (229,
                                                Variable
                                                  (?,
                                                    x_2/0),
                                                Variable
                                                  (229,
                                                    pres/0),
                                                Variable
                                                  (229,
                                                    rr/0)))))
                                ])))))
            ]))
    ])

232
Value
  (rec, @.,
    [
      ((merge_rec, [ A; B; C ],
        [
          (counter, Type (nat/3));
          (f,
            (Type (key/0) ->
              (Type (option/3, A) ->
                (Type (option/3, B) ->
                  Type (option/3, C)))));
          (s1, Type (t/0, A));
          (s2, Type (t/0, B))
        ],
        Monad
          ([
            Counter/3;
            OCaml.Invalid_argument/3;
            NonTermination/3;
            OCaml.Not_found/3
          ], Type (t/0, C))),
        Match
          (?, Variable (?, counter/0),
            [
              (Constructor (O/3),
                Lift
                  (?,
                    [
                      NonTermination/3
                    ],
                    [
                      Counter/3;
                      OCaml.Invalid_argument/3;
                      NonTermination/3;
                      OCaml.Not_found/3
                    ],
                    Apply
                      (?,
                        Variable
                          (?,
                            not_terminated/3),
                        [
                          Tuple
                            (?)
                        ])));
              (Constructor (S/3, counter),
                Match
                  (233,
                    Tuple
                      (233,
                        Variable
                          (233,
                            s1/0),
                        Variable
                          (233,
                            s2/0)),
                    [
                      (Tuple
                        (Constructor
                          (Empty/0),
                          Constructor
                            (Empty/0)),
                        Return
                          (?,
                            Constructor
                              (234,
                                Empty/0)));
                      (Tuple
                        (Constructor
                          (Node/0,
                            l1,
                            v1,
                            d1,
                            r1,
                            h1),
                          Any),
                        Bind
                          (?,
                            Lift
                              (?,
                                [
                                  Counter/3;
                                  OCaml.Invalid_argument/3;
                                  NonTermination/3
                                ],
                                [
                                  Counter/3;
                                  OCaml.Invalid_argument/3;
                                  NonTermination/3;
                                  OCaml.Not_found/3
                                ],
                                Apply
                                  (236,
                                    Variable
                                      (236,
                                        split/0),
                                    [
                                      Variable
                                        (236,
                                          v1/0);
                                      Variable
                                        (236,
                                          s2/0)
                                    ])),
                            Some
                              x,
                            Match
                              (236,
                                Variable
                                  (?,
                                    x/0),
                                [
                                  (Tuple
                                    (l2,
                                      d2,
                                      r2),
                                    Bind
                                      (?,
                                        Apply
                                          (237,
                                            Apply
                                              (?,
                                                Variable
                                                  (?,
                                                    merge_rec/0),
                                                [
                                                  Variable
                                                    (?,
                                                      counter/0)
                                                ]),
                                            [
                                              Variable
                                                (237,
                                                  f/0);
                                              Variable
                                                (237,
                                                  l1/0);
                                              Variable
                                                (237,
                                                  l2/0)
                                            ]),
                                        Some
                                          x,
                                        Bind
                                          (?,
                                            Apply
                                              (237,
                                                Apply
                                                  (?,
                                                    Variable
                                                      (?,
                                                        merge_rec/0),
                                                    [
                                                      Variable
                                                        (?,
                                                          counter/0)
                                                    ]),
                                                [
                                                  Variable
                                                    (237,
                                                      f/0);
                                                  Variable
                                                    (237,
                                                      r1/0);
                                                  Variable
                                                    (237,
                                                      r2/0)
                                                ]),
                                            Some
                                              x_1,
                                            Apply
                                              (237,
                                                Variable
                                                  (237,
                                                    concat_or_join/0),
                                                [
                                                  Variable
                                                    (?,
                                                      x/0);
                                                  Variable
                                                    (237,
                                                      v1/0);
                                                  Apply
                                                    (237,
                                                      Variable
                                                        (237,
                                                          f/0),
                                                      [
                                                        Variable
                                                          (237,
                                                            v1/0);
                                                        Constructor
                                                          (237,
                                                            Some/3,
                                                            Variable
                                                              (237,
                                                                d1/0));
                                                        Variable
                                                          (237,
                                                            d2/0)
                                                      ]);
                                                  Variable
                                                    (?,
                                                      x_1/0)
                                                ]))))
                                ])));
                      (Tuple
                        (Any,
                          Constructor
                            (Node/0,
                              l2,
                              v2,
                              d2,
                              r2,
                              h2)),
                        Bind
                          (?,
                            Lift
                              (?,
                                [
                                  Counter/3;
                                  OCaml.Invalid_argument/3;
                                  NonTermination/3
                                ],
                                [
                                  Counter/3;
                                  OCaml.Invalid_argument/3;
                                  NonTermination/3;
                                  OCaml.Not_found/3
                                ],
                                Apply
                                  (239,
                                    Variable
                                      (239,
                                        split/0),
                                    [
                                      Variable
                                        (239,
                                          v2/0);
                                      Variable
                                        (239,
                                          s1/0)
                                    ])),
                            Some
                              x,
                            Match
                              (239,
                                Variable
                                  (?,
                                    x/0),
                                [
                                  (Tuple
                                    (l1,
                                      d1,
                                      r1),
                                    Bind
                                      (?,
                                        Apply
                                          (240,
                                            Apply
                                              (?,
                                                Variable
                                                  (?,
                                                    merge_rec/0),
                                                [
                                                  Variable
                                                    (?,
                                                      counter/0)
                                                ]),
                                            [
                                              Variable
                                                (240,
                                                  f/0);
                                              Variable
                                                (240,
                                                  l1/0);
                                              Variable
                                                (240,
                                                  l2/0)
                                            ]),
                                        Some
                                          x,
                                        Bind
                                          (?,
                                            Apply
                                              (240,
                                                Apply
                                                  (?,
                                                    Variable
                                                      (?,
                                                        merge_rec/0),
                                                    [
                                                      Variable
                                                        (?,
                                                          counter/0)
                                                    ]),
                                                [
                                                  Variable
                                                    (240,
                                                      f/0);
                                                  Variable
                                                    (240,
                                                      r1/0);
                                                  Variable
                                                    (240,
                                                      r2/0)
                                                ]),
                                            Some
                                              x_1,
                                            Apply
                                              (240,
                                                Variable
                                                  (240,
                                                    concat_or_join/0),
                                                [
                                                  Variable
                                                    (?,
                                                      x/0);
                                                  Variable
                                                    (240,
                                                      v2/0);
                                                  Apply
                                                    (240,
                                                      Variable
                                                        (240,
                                                          f/0),
                                                      [
                                                        Variable
                                                          (240,
                                                            v2/0);
                                                        Variable
                                                          (240,
                                                            d1/0);
                                                        Constructor
                                                          (240,
                                                            Some/3,
                                                            Variable
                                                              (240,
                                                                d2/0))
                                                      ]);
                                                  Variable
                                                    (?,
                                                      x_1/0)
                                                ]))))
                                ])))
                    ]))
            ]))
    ])

232
Value
  (non_rec, @.,
    [
      ((merge, [ A; B; C ],
        [
          (f,
            (Type (key/0) ->
              (Type (option/3, A) ->
                (Type (option/3, B) ->
                  Type (option/3, C)))));
          (s1, Type (t/0, A));
          (s2, Type (t/0, B))
        ],
        Monad
          ([
            Counter/3;
            OCaml.Invalid_argument/3;
            NonTermination/3;
            OCaml.Not_found/3
          ], Type (t/0, C))),
        Bind
          (?,
            Lift
              (?, [ Counter/3 ],
                [
                  Counter/3;
                  OCaml.Invalid_argument/3;
                  NonTermination/3;
                  OCaml.Not_found/3
                ],
                Apply (?, Variable (?, read_counter/3), [ Tuple (?) ])),
            Some x,
            Apply
              (?, Variable (?, merge_rec/0),
                [
                  Variable (?, x/0);
                  Variable (?, f/0);
                  Variable (?, s1/0);
                  Variable (?, s2/0)
                ])))
    ])

242
Value
  (rec, @coq_rec,
    [
      ((filter, [ A ],
        [ (p, (Type (key/0) -> (A -> Type (bool/3)))); (x, Type (t/0, A)) ],
        Monad
          ([
            Counter/3;
            OCaml.Invalid_argument/3;
            NonTermination/3;
            OCaml.Not_found/3
          ], Type (t/0, A))),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0),
                Return (?, Constructor (243, Empty/0)));
              (Constructor (Node/0, l, v, d, r, Any),
                Bind
                  (?,
                    Apply
                      (246,
                        Variable
                          (246,
                            filter/0),
                        [
                          Variable
                            (246,
                              p/0);
                          Variable
                            (246,
                              l/0)
                        ]),
                    Some
                      l',
                    LetVar
                      ?
                      pvd
                      =
                      Apply
                        (247,
                          Variable
                            (247,
                              p/0),
                          [
                            Variable
                              (247,
                                v/0);
                            Variable
                              (247,
                                d/0)
                          ])
                      in
                    Bind
                      (?,
                        Apply
                          (248,
                            Variable
                              (248,
                                filter/0),
                            [
                              Variable
                                (248,
                                  p/0);
                              Variable
                                (248,
                                  r/0)
                            ]),
                        Some
                          r',
                        IfThenElse
                          (249,
                            Variable
                              (249,
                                pvd/0),
                            Lift
                              (?,
                                [
                                  Counter/3;
                                  OCaml.Invalid_argument/3;
                                  NonTermination/3
                                ],
                                [
                                  Counter/3;
                                  OCaml.Invalid_argument/3;
                                  NonTermination/3;
                                  OCaml.Not_found/3
                                ],
                                Apply
                                  (249,
                                    Variable
                                      (249,
                                        join/0),
                                    [
                                      Variable
                                        (249,
                                          l'/0);
                                      Variable
                                        (249,
                                          v/0);
                                      Variable
                                        (249,
                                          d/0);
                                      Variable
                                        (249,
                                          r'/0)
                                    ])),
                            Apply
                              (249,
                                Variable
                                  (249,
                                    concat/0),
                                [
                                  Variable
                                    (249,
                                      l'/0);
                                  Variable
                                    (249,
                                      r'/0)
                                ])))))
            ]))
    ])

252
Value
  (rec, @coq_rec,
    [
      ((partition, [ A ],
        [ (p, (Type (key/0) -> (A -> Type (bool/3)))); (x, Type (t/0, A)) ],
        Monad
          ([
            Counter/3;
            OCaml.Invalid_argument/3;
            NonTermination/3;
            OCaml.Not_found/3
          ], (Type (t/0, A) * Type (t/0, A)))),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0),
                Return
                  (?,
                    Tuple
                      (253,
                        Constructor
                          (253,
                            Empty/0),
                        Constructor
                          (253,
                            Empty/0))));
              (Constructor (Node/0, l, v, d, r, Any),
                Bind
                  (?,
                    Apply
                      (256,
                        Variable
                          (256,
                            partition/0),
                        [
                          Variable
                            (256,
                              p/0);
                          Variable
                            (256,
                              l/0)
                        ]),
                    Some
                      x_1,
                    Match
                      (256,
                        Variable
                          (?,
                            x_1/0),
                        [
                          (Tuple
                            (lt,
                              lf),
                            LetVar
                              ?
                              pvd
                              =
                              Apply
                                (257,
                                  Variable
                                    (257,
                                      p/0),
                                  [
                                    Variable
                                      (257,
                                        v/0);
                                    Variable
                                      (257,
                                        d/0)
                                  ])
                              in
                            Bind
                              (?,
                                Apply
                                  (258,
                                    Variable
                                      (258,
                                        partition/0),
                                    [
                                      Variable
                                        (258,
                                          p/0);
                                      Variable
                                        (258,
                                          r/0)
                                    ]),
                                Some
                                  x_1,
                                Match
                                  (258,
                                    Variable
                                      (?,
                                        x_1/0),
                                    [
                                      (Tuple
                                        (rt,
                                          rf),
                                        IfThenElse
                                          (259,
                                            Variable
                                              (259,
                                                pvd/0),
                                            Bind
                                              (?,
                                                Lift
                                                  (?,
                                                    [
                                                      Counter/3;
                                                      OCaml.Invalid_argument/3;
                                                      NonTermination/3
                                                    ],
                                                    [
                                                      Counter/3;
                                                      OCaml.Invalid_argument/3;
                                                      NonTermination/3;
                                                      OCaml.Not_found/3
                                                    ],
                                                    Apply
                                                      (260,
                                                        Variable
                                                          (260,
                                                            join/0),
                                                        [
                                                          Variable
                                                            (260,
                                                              lt/0);
                                                          Variable
                                                            (260,
                                                              v/0);
                                                          Variable
                                                            (260,
                                                              d/0);
                                                          Variable
                                                            (260,
                                                              rt/0)
                                                        ])),
                                                Some
                                                  x_1,
                                                Bind
                                                  (?,
                                                    Apply
                                                      (260,
                                                        Variable
                                                          (260,
                                                            concat/0),
                                                        [
                                                          Variable
                                                            (260,
                                                              lf/0);
                                                          Variable
                                                            (260,
                                                              rf/0)
                                                        ]),
                                                    Some
                                                      x_2,
                                                    Return
                                                      (?,
                                                        Tuple
                                                          (260,
                                                            Variable
                                                              (?,
                                                                x_1/0),
                                                            Variable
                                                              (?,
                                                                x_2/0))))),
                                            Bind
                                              (?,
                                                Apply
                                                  (261,
                                                    Variable
                                                      (261,
                                                        concat/0),
                                                    [
                                                      Variable
                                                        (261,
                                                          lt/0);
                                                      Variable
                                                        (261,
                                                          rt/0)
                                                    ]),
                                                Some
                                                  x_1,
                                                Bind
                                                  (?,
                                                    Lift
                                                      (?,
                                                        [
                                                          Counter/3;
                                                          OCaml.Invalid_argument/3;
                                                          NonTermination/3
                                                        ],
                                                        [
                                                          Counter/3;
                                                          OCaml.Invalid_argument/3;
                                                          NonTermination/3;
                                                          OCaml.Not_found/3
                                                        ],
                                                        Apply
                                                          (261,
                                                            Variable
                                                              (261,
                                                                join/0),
                                                            [
                                                              Variable
                                                                (261,
                                                                  lf/0);
                                                              Variable
                                                                (261,
                                                                  v/0);
                                                              Variable
                                                                (261,
                                                                  d/0);
                                                              Variable
                                                                (261,
                                                                  rf/0)
                                                            ])),
                                                    Some
                                                      x_2,
                                                    Return
                                                      (?,
                                                        Tuple
                                                          (261,
                                                            Variable
                                                              (?,
                                                                x_1/0),
                                                            Variable
                                                              (?,
                                                                x_2/0)))))))
                                    ])))
                        ])))
            ]))
    ])

264
Inductive enumeration:
  ([ a ],
    [
      (End, [ ]);
      (More, [ Type (key/0); a; Type (t/0, a); Type (enumeration/0, a) ])
    ])

266
Value
  (rec, @coq_rec,
    [
      ((cons_enum, [ A ], [ (m, Type (t/0, A)); (e, Type (enumeration/0, A)) ],
        Type (enumeration/0, A)),
        Match
          (267, Variable (267, m/0),
            [
              (Constructor (Empty/0), Variable (268, e/0));
              (Constructor (Node/0, l, v, d, r, Any),
                Apply
                  (269,
                    Variable
                      (269,
                        cons_enum/0),
                    [
                      Variable
                        (269,
                          l/0);
                      Constructor
                        (269,
                          More/0,
                          Variable
                            (269,
                              v/0),
                          Variable
                            (269,
                              d/0),
                          Variable
                            (269,
                              r/0),
                          Variable
                            (269,
                              e/0))
                    ]))
            ]))
    ])

272
Value
  (non_rec, @.,
    [
      ((compare, [ A; B ],
        [
          (cmp, (A -> (B -> Type (Z/3))));
          (m1, Type (t/0, A));
          (m2, Type (t/0, B))
        ], Monad ([ Counter/3; NonTermination/3 ], Type (Z/3))),
        LetFun 273
          (rec, @.,
            [
              ((compare_aux_rec, [ ],
                [
                  (counter, Type (nat/3));
                  (e1,
                    Type
                      (enumeration/0,
                        A));
                  (e2,
                    Type
                      (enumeration/0,
                        B))
                ],
                Monad ([ NonTermination/3 ], Type (Z/3))),
                Match
                  (?,
                    Variable
                      (?,
                        counter/0),
                    [
                      (Constructor
                        (O/3),
                        Apply
                          (?,
                            Variable
                              (?,
                                not_terminated/3),
                            [
                              Tuple
                                (?)
                            ]));
                      (Constructor
                        (S/3,
                          counter),
                        Match
                          (274,
                            Tuple
                              (274,
                                Variable
                                  (274,
                                    e1/0),
                                Variable
                                  (274,
                                    e2/0)),
                            [
                              (Tuple
                                (Constructor
                                  (End/0),
                                  Constructor
                                    (End/0)),
                                Return
                                  (?,
                                    Constant
                                      (275,
                                        Int(0))));
                              (Tuple
                                (Constructor
                                  (End/0),
                                  Any),
                                Return
                                  (?,
                                    Constant
                                      (276,
                                        Int(-1))));
                              (Tuple
                                (Any,
                                  Constructor
                                    (End/0)),
                                Return
                                  (?,
                                    Constant
                                      (277,
                                        Int(1))));
                              (Tuple
                                (Constructor
                                  (More/0,
                                    v1,
                                    d1,
                                    r1,
                                    e1),
                                  Constructor
                                    (More/0,
                                      v2,
                                      d2,
                                      r2,
                                      e2)),
                                LetVar
                                  ?
                                  c
                                  =
                                  Apply
                                    (279,
                                      Variable
                                        (279,
                                          Ord.compare/0),
                                      [
                                        Variable
                                          (279,
                                            v1/0);
                                        Variable
                                          (279,
                                            v2/0)
                                      ])
                                  in
                                IfThenElse
                                  (280,
                                    Apply
                                      (280,
                                        Variable
                                          (280,
                                            nequiv_decb/3),
                                        [
                                          Variable
                                            (280,
                                              c/0);
                                          Constant
                                            (280,
                                              Int(0))
                                        ]),
                                    Return
                                      (?,
                                        Variable
                                          (280,
                                            c/0)),
                                    LetVar
                                      ?
                                      c
                                      =
                                      Apply
                                        (281,
                                          Variable
                                            (281,
                                              cmp/0),
                                          [
                                            Variable
                                              (281,
                                                d1/0);
                                            Variable
                                              (281,
                                                d2/0)
                                          ])
                                      in
                                    IfThenElse
                                      (282,
                                        Apply
                                          (282,
                                            Variable
                                              (282,
                                                nequiv_decb/3),
                                            [
                                              Variable
                                                (282,
                                                  c/0);
                                              Constant
                                                (282,
                                                  Int(0))
                                            ]),
                                        Return
                                          (?,
                                            Variable
                                              (282,
                                                c/0)),
                                        Apply
                                          (283,
                                            Apply
                                              (?,
                                                Variable
                                                  (?,
                                                    compare_aux_rec/0),
                                                [
                                                  Variable
                                                    (?,
                                                      counter/0)
                                                ]),
                                            [
                                              Apply
                                                (283,
                                                  Variable
                                                    (283,
                                                      cons_enum/0),
                                                  [
                                                    Variable
                                                      (283,
                                                        r1/0);
                                                    Variable
                                                      (283,
                                                        e1/0)
                                                  ]);
                                              Apply
                                                (283,
                                                  Variable
                                                    (283,
                                                      cons_enum/0),
                                                  [
                                                    Variable
                                                      (283,
                                                        r2/0);
                                                    Variable
                                                      (283,
                                                        e2/0)
                                                  ])
                                            ]))))
                            ]))
                    ]))
            ]) in
        LetFun 273
          (non_rec, @.,
            [
              ((compare_aux, [ ],
                [
                  (e1,
                    Type
                      (enumeration/0,
                        A));
                  (e2,
                    Type
                      (enumeration/0,
                        B))
                ],
                Monad
                  ([
                    Counter/3;
                    NonTermination/3
                  ], Type (Z/3))),
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          Counter/3
                        ],
                        [
                          Counter/3;
                          NonTermination/3
                        ],
                        Apply
                          (?,
                            Variable
                              (?,
                                read_counter/3),
                            [
                              Tuple
                                (?)
                            ])),
                    Some
                      x,
                    Lift
                      (?,
                        [
                          NonTermination/3
                        ],
                        [
                          Counter/3;
                          NonTermination/3
                        ],
                        Apply
                          (?,
                            Variable
                              (?,
                                compare_aux_rec/0),
                            [
                              Variable
                                (?,
                                  x/0);
                              Variable
                                (?,
                                  e1/0);
                              Variable
                                (?,
                                  e2/0)
                            ]))))
            ]) in
        Apply
          (284, Variable (284, compare_aux/0),
            [
              Apply
                (284, Variable (284, cons_enum/0),
                  [
                    Variable
                      (284,
                        m1/0);
                    Constructor
                      (284,
                        End/0)
                  ]);
              Apply
                (284, Variable (284, cons_enum/0),
                  [
                    Variable
                      (284,
                        m2/0);
                    Constructor
                      (284,
                        End/0)
                  ])
            ]))
    ])

286
Value
  (non_rec, @.,
    [
      ((equal, [ A; B ],
        [
          (cmp, (A -> (B -> Type (bool/3))));
          (m1, Type (t/0, A));
          (m2, Type (t/0, B))
        ], Monad ([ Counter/3; NonTermination/3 ], Type (bool/3))),
        LetFun 287
          (rec, @.,
            [
              ((equal_aux_rec, [ ],
                [
                  (counter, Type (nat/3));
                  (e1,
                    Type
                      (enumeration/0,
                        A));
                  (e2,
                    Type
                      (enumeration/0,
                        B))
                ],
                Monad
                  ([ NonTermination/3 ],
                    Type
                      (bool/3))),
                Match
                  (?,
                    Variable
                      (?,
                        counter/0),
                    [
                      (Constructor
                        (O/3),
                        Apply
                          (?,
                            Variable
                              (?,
                                not_terminated/3),
                            [
                              Tuple
                                (?)
                            ]));
                      (Constructor
                        (S/3,
                          counter),
                        Match
                          (288,
                            Tuple
                              (288,
                                Variable
                                  (288,
                                    e1/0),
                                Variable
                                  (288,
                                    e2/0)),
                            [
                              (Tuple
                                (Constructor
                                  (End/0),
                                  Constructor
                                    (End/0)),
                                Return
                                  (?,
                                    Constructor
                                      (289,
                                        true/3)));
                              (Tuple
                                (Constructor
                                  (End/0),
                                  Any),
                                Return
                                  (?,
                                    Constructor
                                      (290,
                                        false/3)));
                              (Tuple
                                (Any,
                                  Constructor
                                    (End/0)),
                                Return
                                  (?,
                                    Constructor
                                      (291,
                                        false/3)));
                              (Tuple
                                (Constructor
                                  (More/0,
                                    v1,
                                    d1,
                                    r1,
                                    e1),
                                  Constructor
                                    (More/0,
                                      v2,
                                      d2,
                                      r2,
                                      e2)),
                                Bind
                                  (?,
                                    Bind
                                      (?,
                                        Apply
                                          (294,
                                            Apply
                                              (?,
                                                Variable
                                                  (?,
                                                    equal_aux_rec/0),
                                                [
                                                  Variable
                                                    (?,
                                                      counter/0)
                                                ]),
                                            [
                                              Apply
                                                (294,
                                                  Variable
                                                    (294,
                                                      cons_enum/0),
                                                  [
                                                    Variable
                                                      (294,
                                                        r1/0);
                                                    Variable
                                                      (294,
                                                        e1/0)
                                                  ]);
                                              Apply
                                                (294,
                                                  Variable
                                                    (294,
                                                      cons_enum/0),
                                                  [
                                                    Variable
                                                      (294,
                                                        r2/0);
                                                    Variable
                                                      (294,
                                                        e2/0)
                                                  ])
                                            ]),
                                        Some
                                          x,
                                        Return
                                          (?,
                                            Apply
                                              (293,
                                                Variable
                                                  (293,
                                                    andb/3),
                                                [
                                                  Apply
                                                    (293,
                                                      Variable
                                                        (293,
                                                          cmp/0),
                                                      [
                                                        Variable
                                                          (293,
                                                            d1/0);
                                                        Variable
                                                          (293,
                                                            d2/0)
                                                      ]);
                                                  Variable
                                                    (?,
                                                      x/0)
                                                ]))),
                                    Some
                                      x,
                                    Return
                                      (?,
                                        Apply
                                          (293,
                                            Variable
                                              (293,
                                                andb/3),
                                            [
                                              Apply
                                                (293,
                                                  Variable
                                                    (293,
                                                      equiv_decb/3),
                                                  [
                                                    Apply
                                                      (293,
                                                        Variable
                                                          (293,
                                                            Ord.compare/0),
                                                        [
                                                          Variable
                                                            (293,
                                                              v1/0);
                                                          Variable
                                                            (293,
                                                              v2/0)
                                                        ]);
                                                    Constant
                                                      (293,
                                                        Int(0))
                                                  ]);
                                              Variable
                                                (?,
                                                  x/0)
                                            ]))))
                            ]))
                    ]))
            ]) in
        LetFun 287
          (non_rec, @.,
            [
              ((equal_aux, [ ],
                [
                  (e1,
                    Type
                      (enumeration/0,
                        A));
                  (e2,
                    Type
                      (enumeration/0,
                        B))
                ],
                Monad
                  ([
                    Counter/3;
                    NonTermination/3
                  ], Type (bool/3))),
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          Counter/3
                        ],
                        [
                          Counter/3;
                          NonTermination/3
                        ],
                        Apply
                          (?,
                            Variable
                              (?,
                                read_counter/3),
                            [
                              Tuple
                                (?)
                            ])),
                    Some
                      x,
                    Lift
                      (?,
                        [
                          NonTermination/3
                        ],
                        [
                          Counter/3;
                          NonTermination/3
                        ],
                        Apply
                          (?,
                            Variable
                              (?,
                                equal_aux_rec/0),
                            [
                              Variable
                                (?,
                                  x/0);
                              Variable
                                (?,
                                  e1/0);
                              Variable
                                (?,
                                  e2/0)
                            ]))))
            ]) in
        Apply
          (295, Variable (295, equal_aux/0),
            [
              Apply
                (295, Variable (295, cons_enum/0),
                  [
                    Variable
                      (295,
                        m1/0);
                    Constructor
                      (295,
                        End/0)
                  ]);
              Apply
                (295, Variable (295, cons_enum/0),
                  [
                    Variable
                      (295,
                        m2/0);
                    Constructor
                      (295,
                        End/0)
                  ])
            ]))
    ])

297
Value
  (rec, @coq_rec,
    [
      ((cardinal, [ A ], [ (x, Type (t/0, A)) ], Type (Z/3)),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0), Constant (298, Int(0)));
              (Constructor (Node/0, l, Any, Any, r, Any),
                Apply
                  (299,
                    Variable
                      (299,
                        Z.add/3),
                    [
                      Apply
                        (299,
                          Variable
                            (299,
                              Z.add/3),
                          [
                            Apply
                              (299,
                                Variable
                                  (299,
                                    cardinal/0),
                                [
                                  Variable
                                    (299,
                                      l/0)
                                ]);
                            Constant
                              (299,
                                Int(1))
                          ]);
                      Apply
                        (299,
                          Variable
                            (299,
                              cardinal/0),
                          [
                            Variable
                              (299,
                                r/0)
                          ])
                    ]))
            ]))
    ])

302
Value
  (rec, @coq_rec,
    [
      ((bindings_aux, [ A ],
        [ (accu, Type (list/3, (Type (key/0) * A))); (x, Type (t/0, A)) ],
        Type (list/3, (Type (key/0) * A))),
        Match
          (?, Variable (?, x/0),
            [
              (Constructor (Empty/0), Variable (303, accu/0));
              (Constructor (Node/0, l, v, d, r, Any),
                Apply
                  (304,
                    Variable
                      (304,
                        bindings_aux/0),
                    [
                      Constructor
                        (304,
                          cons/3,
                          Tuple
                            (304,
                              Variable
                                (304,
                                  v/0),
                              Variable
                                (304,
                                  d/0)),
                          Apply
                            (304,
                              Variable
                                (304,
                                  bindings_aux/0),
                              [
                                Variable
                                  (304,
                                    accu/0);
                                Variable
                                  (304,
                                    r/0)
                              ]));
                      Variable
                        (304,
                          l/0)
                    ]))
            ]))
    ])

307
Value
  (non_rec, @.,
    [
      ((bindings, [ A ], [ (s, Type (t/0, A)) ],
        Type (list/3, (Type (key/0) * A))),
        Apply
          (308, Variable (308, bindings_aux/0),
            [ Constructor (308, []/3); Variable (308, s/0) ]))
    ])

310
Value
  (non_rec, @.,
    [
      ((choose, [ A ], [ ],
        (Type (t/0, A) -> Monad ([ OCaml.Not_found/3 ], (Type (key/0) * A)))),
        Variable (310, min_binding/0))
    ])
