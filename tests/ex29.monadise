3
Value
  (rec, @coq_rec,
    [
      ((odd_length, [ A ], [ (l, Type (list, A)) ], Type (bool)),
        Match
          (4, Variable (4, l),
            [
              (Constructor ([]), Constructor (5, false));
              (Constructor (cons, Any, l),
                Apply
                  (6,
                    Variable
                      (6,
                        negb),
                    [
                      Apply
                        (6,
                          Variable
                            (6,
                              even_length),
                          [
                            Variable
                              (6,
                                l)
                          ])
                    ]))
            ]));
      ((even_length, [ A ], [ (l, Type (list, A)) ], Type (bool)),
        Match
          (10, Variable (10, l),
            [
              (Constructor ([]), Constructor (11, true));
              (Constructor (cons, Any, l),
                Apply
                  (12,
                    Variable
                      (12,
                        negb),
                    [
                      Apply
                        (12,
                          Variable
                            (12,
                              odd_length),
                          [
                            Variable
                              (12,
                                l)
                          ])
                    ]))
            ]))
    ])

14
Value
  (rec, @coq_rec,
    [
      ((odd_length_with_print, [ A ], [ (l, Type (list, A)) ],
        Monad ([ IO ], Type (bool))),
        Match
          (15, Variable (15, l),
            [
              (Constructor ([]),
                Bind
                  (?,
                    Apply
                      (16,
                        Variable
                          (16,
                            OCaml.Pervasives.print_endline),
                        [
                          Constant
                            (16,
                              String("false"))
                        ]),
                    None,
                    Return
                      (?,
                        Constructor
                          (16,
                            false))));
              (Constructor (cons, Any, l),
                Bind
                  (?,
                    Apply
                      (17,
                        Variable
                          (17,
                            even_length_with_print),
                        [
                          Variable
                            (17,
                              l)
                        ]),
                    Some
                      x,
                    Return
                      (?,
                        Apply
                          (17,
                            Variable
                              (17,
                                negb),
                            [
                              Variable
                                (?,
                                  x)
                            ]))))
            ]));
      ((even_length_with_print, [ A ], [ (l, Type (list, A)) ],
        Monad ([ IO ], Type (bool))),
        Match
          (21, Variable (21, l),
            [
              (Constructor ([]), Return (?, Constructor (22, true)));
              (Constructor (cons, Any, l),
                Bind
                  (?,
                    Apply
                      (23,
                        Variable
                          (23,
                            odd_length_with_print),
                        [
                          Variable
                            (23,
                              l)
                        ]),
                    Some
                      x,
                    Return
                      (?,
                        Apply
                          (23,
                            Variable
                              (23,
                                negb),
                            [
                              Variable
                                (?,
                                  x)
                            ]))))
            ]))
    ])

25
Value
  (rec, @.,
    [
      ((odd_length_free_rec, [ A ],
        [ (counter, Type (nat)); (l, Type (list, A)) ],
        Monad ([ NonTermination ], Type (bool))),
        Match
          (?, Variable (?, counter),
            [
              (Constructor (O),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S, counter),
                Match
                  (26, Variable (26, l),
                    [
                      (Constructor
                        ([]),
                        Return
                          (?,
                            Constructor
                              (27,
                                false)));
                      (Constructor
                        (cons,
                          Any,
                          l),
                        Bind
                          (?,
                            Apply
                              (28,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        even_length_free_rec),
                                    [
                                      Variable
                                        (?,
                                          counter)
                                    ]),
                                [
                                  Variable
                                    (28,
                                      l)
                                ]),
                            Some
                              x,
                            Return
                              (?,
                                Apply
                                  (28,
                                    Variable
                                      (28,
                                        negb),
                                    [
                                      Variable
                                        (?,
                                          x)
                                    ]))))
                    ]))
            ]));
      ((even_length_free_rec, [ A ],
        [ (counter, Type (nat)); (l, Type (list, A)) ],
        Monad ([ NonTermination ], Type (bool))),
        Match
          (?, Variable (?, counter),
            [
              (Constructor (O),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S, counter),
                Match
                  (31, Variable (31, l),
                    [
                      (Constructor
                        ([]),
                        Return
                          (?,
                            Constructor
                              (32,
                                true)));
                      (Constructor
                        (cons,
                          Any,
                          l),
                        Bind
                          (?,
                            Apply
                              (33,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        odd_length_free_rec),
                                    [
                                      Variable
                                        (?,
                                          counter)
                                    ]),
                                [
                                  Variable
                                    (33,
                                      l)
                                ]),
                            Some
                              x,
                            Return
                              (?,
                                Apply
                                  (33,
                                    Variable
                                      (33,
                                        negb),
                                    [
                                      Variable
                                        (?,
                                          x)
                                    ]))))
                    ]))
            ]))
    ])

25
Value
  (non_rec, @.,
    [
      ((odd_length_free, [ A ], [ (l, Type (list, A)) ],
        Monad ([ Counter; NonTermination ], Type (bool))),
        Bind
          (?,
            Lift
              (?, [ Counter ], [ Counter; NonTermination ],
                Apply (?, Variable (?, read_counter), [ Tuple (?) ])),
            Some x,
            Lift
              (?, [ NonTermination ], [ Counter; NonTermination ],
                Apply
                  (?, Variable (?, odd_length_free_rec),
                    [ Variable (?, x); Variable (?, l) ]))))
    ])

25
Value
  (non_rec, @.,
    [
      ((even_length_free, [ A ], [ (l, Type (list, A)) ],
        Monad ([ Counter; NonTermination ], Type (bool))),
        Bind
          (?,
            Lift
              (?, [ Counter ], [ Counter; NonTermination ],
                Apply (?, Variable (?, read_counter), [ Tuple (?) ])),
            Some x,
            Lift
              (?, [ NonTermination ], [ Counter; NonTermination ],
                Apply
                  (?, Variable (?, even_length_free_rec),
                    [ Variable (?, x); Variable (?, l) ]))))
    ])
