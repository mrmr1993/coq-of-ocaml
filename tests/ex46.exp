2 Open t

4
Value
  (non_rec, @.,
    [
      ((f, [ ], [ (x, Type (unit)) ], OpenApply (Ex46/t, {})),
        Match
          (4, Variable (?, Ex46/x),
            [
              (Constructor (tt),
                Apply
                  (4,
                    Variable
                      (4,
                        OCaml/assert),
                    [
                      Constructor
                        (4,
                          false)
                    ]))
            ]))
    ])

6 Open u

8
Value
  (non_rec, @.,
    [
      ((g, [ A ], [ (x, A) ], OpenApply (Ex46/u, {}, A)),
        Apply
          (8, Variable (8, OCaml/Pervasives.failwith),
            [ Constant (8, String("fail")) ]))
    ])

10 TypeExt
(Ex46/t,
  Inductive t_1:
    ([ ], [ (Test1, [ ]); (Test2, [ Type (bool) ]) ]))

12 TypeExt
(Ex46/t,
  Inductive t_2:
    ([ ], [ (Test3, [ Type (Z) ]); (Test4, [ Type (option, Type (Z)) ]) ]))

14 TypeExt
(Ex46/u,
  Inductive u_1:
    ([ b ], [ (Test5, [ b ]); (Test6, [ Type (Z) ]) ]))

16
Value
  (non_rec, @.,
    [
      ((x, [ ], [ ], OpenApply (Ex46/t, {})),
        Constructor (?, inl, Constructor (16, Ex46/Test1)))
    ])

18
Value
  (non_rec, @.,
    [
      ((y, [ ], [ ], OpenApply (Ex46/u, {}, Type (Z))),
        Constructor
          (?, inl, Constructor (18, Ex46/Test5, Constant (18, Int(5)))))
    ])

20
Value
  (non_rec, @.,
    [
      ((z, [ A ], [ ], OpenApply (Ex46/u, {}, A)),
        Constructor
          (?, inl, Constructor (20, Ex46/Test6, Constant (20, Int(6)))))
    ])

22
Value
  (non_rec, @.,
    [
      ((failure, [ ], [ ], OpenApply (OCaml/exn, {})),
        Constructor
          (?, inl,
            Constructor (22, OCaml/Failure, Constant (22, String("")))))
    ])
