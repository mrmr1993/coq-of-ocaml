Require [ OCaml.List ]

3 Module Ord:
  4 Abstract (t, [ ])
  
  5
  Value
    (non_rec, @.,
      [
        ((compare, [ ], [ (x, Type (t/0)) ], Some (Type (t/0) -> Type (Z/2))),
          Match
            ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), x/0),
              [
                (Any,
                  Function
                    ((5,
                      Effect
                        ([
                        ],
                          .
                            ->
                            .)),
                      x_1,
                      Match
                        ((?,
                          Effect
                            ([
                            ],
                              .)),
                          Variable
                            ((?,
                              Effect
                                ([
                                ],
                                  .)),
                              x_1/0),
                          [
                            (Any,
                              Constant
                                ((5,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Int(0)))
                          ])))
              ]))
      ])

8 Synonym (elt, [ ], Type (Ord.t/0))

9
Inductive t:
  ([ ],
    [
      (Empty, [ ]);
      (Node, [ Type (t/0); Type (elt/0); Type (t/0); Type (Z/1) ])
    ])

14
Value
  (non_rec, @.,
    [
      ((height, [ ], [ (x, Type (t/0)) ], Some Type (Z/1)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), x/0),
            [
              (Constructor (Empty/0),
                Constant ((15, Effect ([ ], .)), Int(0)));
              (Constructor (Node/0, Any, Any, Any, h),
                Variable ((16, Effect ([ ], .)), h/0))
            ]))
    ])

23
Value
  (non_rec, @.,
    [
      ((create, [ ], [ (l, Type (t/0)); (v, Type (elt/0)); (r, Type (t/0)) ],
        Some Type (t/0)),
        LetVar (24, Effect ([ ], .)) hl =
          Match
            ((24, Effect ([ ], .)), Variable ((24, Effect ([ ], .)), l/0),
              [
                (Constructor (Empty/0),
                  Constant
                    ((24,
                      Effect
                        ([
                        ],
                          .)),
                      Int(0)));
                (Constructor (Node/0, Any, Any, Any, h),
                  Variable
                    ((24,
                      Effect
                        ([
                        ],
                          .)),
                      h/0))
              ]) in
        LetVar (25, Effect ([ ], .)) hr =
          Match
            ((25, Effect ([ ], .)), Variable ((25, Effect ([ ], .)), r/0),
              [
                (Constructor (Empty/0),
                  Constant
                    ((25,
                      Effect
                        ([
                        ],
                          .)),
                      Int(0)));
                (Constructor (Node/0, Any, Any, Any, h),
                  Variable
                    ((25,
                      Effect
                        ([
                        ],
                          .)),
                      h/0))
              ]) in
        Constructor
          ((26, Effect ([ ], .)), Node/0,
            Variable ((26, Effect ([ ], .)), l/0),
            Variable ((26, Effect ([ ], .)), v/0),
            Variable ((26, Effect ([ ], .)), r/0),
            IfThenElse
              ((26, Effect ([ ], .)),
                Apply
                  ((26, Effect ([ ], .)),
                    Variable
                      ((26, Effect ([ ], .)),
                        OCaml.Pervasives.ge/1),
                    [
                      Variable ((26, Effect ([ ], .)), hl/0);
                      Variable ((26, Effect ([ ], .)), hr/0)
                    ]),
                Apply
                  ((26, Effect ([ ], .)),
                    Variable ((26, Effect ([ ], .)), Z.add/1),
                    [
                      Variable ((26, Effect ([ ], .)), hl/0);
                      Constant ((26, Effect ([ ], .)), Int(1))
                    ]),
                Apply
                  ((26, Effect ([ ], .)),
                    Variable ((26, Effect ([ ], .)), Z.add/1),
                    [
                      Variable ((26, Effect ([ ], .)), hr/0);
                      Constant ((26, Effect ([ ], .)), Int(1))
                    ]))))
    ])

33
Value
  (non_rec, @.,
    [
      ((bal, [ ], [ (l, Type (t/0)); (v, Type (elt/0)); (r, Type (t/0)) ],
        Some Type (t/0)),
        LetVar (34, Effect ([ OCaml.Invalid_argument/1 ], .)) hl =
          Match
            ((34, Effect ([ ], .)), Variable ((34, Effect ([ ], .)), l/0),
              [
                (Constructor (Empty/0),
                  Constant
                    ((34,
                      Effect
                        ([
                        ],
                          .)),
                      Int(0)));
                (Constructor (Node/0, Any, Any, Any, h),
                  Variable
                    ((34,
                      Effect
                        ([
                        ],
                          .)),
                      h/0))
              ]) in
        LetVar (35, Effect ([ OCaml.Invalid_argument/1 ], .)) hr =
          Match
            ((35, Effect ([ ], .)), Variable ((35, Effect ([ ], .)), r/0),
              [
                (Constructor (Empty/0),
                  Constant
                    ((35,
                      Effect
                        ([
                        ],
                          .)),
                      Int(0)));
                (Constructor (Node/0, Any, Any, Any, h),
                  Variable
                    ((35,
                      Effect
                        ([
                        ],
                          .)),
                      h/0))
              ]) in
        IfThenElse
          ((36, Effect ([ OCaml.Invalid_argument/1 ], .)),
            Apply
              ((36, Effect ([ ], .)),
                Variable
                  ((36, Effect ([ ], .)), OCaml.Pervasives.gt/1),
                [
                  Variable ((36, Effect ([ ], .)), hl/0);
                  Apply
                    ((36, Effect ([ ], .)),
                      Variable
                        ((36,
                          Effect
                            ([
                            ],
                              .)),
                          Z.add/1),
                      [
                        Variable
                          ((36,
                            Effect
                              ([
                              ],
                                .)),
                            hr/0);
                        Constant
                          ((36,
                            Effect
                              ([
                              ],
                                .)),
                            Int(2))
                      ])
                ]),
            Match
              ((36, Effect ([ OCaml.Invalid_argument/1 ], .)),
                Variable ((37, Effect ([ ], .)), l/0),
                [
                  (Constructor (Empty/0),
                    Apply
                      ((38,
                        Effect
                          ([
                            OCaml.Invalid_argument/1
                          ],
                            .)),
                        Variable
                          ((38,
                            Effect
                              ([
                              ],
                                .
                                  -[
                                    OCaml.Invalid_argument/1
                                  ]->
                                  .)),
                            OCaml.Pervasives.invalid_arg/1),
                        [
                          Constant
                            ((38,
                              Effect
                                ([
                                ],
                                  .)),
                              String("Set.bal"))
                        ]));
                  (Constructor (Node/0, ll, lv, lr, Any),
                    IfThenElse
                      ((40,
                        Effect
                          ([
                            OCaml.Invalid_argument/1
                          ],
                            .)),
                        Apply
                          ((40,
                            Effect
                              ([
                              ],
                                .)),
                            Variable
                              ((40,
                                Effect
                                  ([
                                  ],
                                    .)),
                                OCaml.Pervasives.ge/1),
                            [
                              Apply
                                ((40,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Variable
                                    ((40,
                                      Effect
                                        ([
                                        ],
                                          .
                                            ->
                                            .)),
                                      height/0),
                                  [
                                    Variable
                                      ((40,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        ll/0)
                                  ]);
                              Apply
                                ((40,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Variable
                                    ((40,
                                      Effect
                                        ([
                                        ],
                                          .
                                            ->
                                            .)),
                                      height/0),
                                  [
                                    Variable
                                      ((40,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        lr/0)
                                  ])
                            ]),
                        Apply
                          ((41,
                            Effect
                              ([
                              ],
                                .)),
                            Variable
                              ((41,
                                Effect
                                  ([
                                  ],
                                    .
                                      ->
                                      .
                                        ->
                                        .
                                          ->
                                          .)),
                                create/0),
                            [
                              Variable
                                ((41,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  ll/0);
                              Variable
                                ((41,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  lv/0);
                              Apply
                                ((41,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Variable
                                    ((41,
                                      Effect
                                        ([
                                        ],
                                          .
                                            ->
                                            .
                                              ->
                                              .
                                                ->
                                                .)),
                                      create/0),
                                  [
                                    Variable
                                      ((41,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        lr/0);
                                    Variable
                                      ((41,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        v/0);
                                    Variable
                                      ((41,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        r/0)
                                  ])
                            ]),
                        Match
                          ((42,
                            Effect
                              ([
                                OCaml.Invalid_argument/1
                              ],
                                .)),
                            Variable
                              ((43,
                                Effect
                                  ([
                                  ],
                                    .)),
                                lr/0),
                            [
                              (Constructor
                                (Empty/0),
                                Apply
                                  ((44,
                                    Effect
                                      ([
                                        OCaml.Invalid_argument/1
                                      ],
                                        .)),
                                    Variable
                                      ((44,
                                        Effect
                                          ([
                                          ],
                                            .
                                              -[
                                                OCaml.Invalid_argument/1
                                              ]->
                                              .)),
                                        OCaml.Pervasives.invalid_arg/1),
                                    [
                                      Constant
                                        ((44,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          String("Set.bal"))
                                    ]));
                              (Constructor
                                (Node/0,
                                  lrl,
                                  lrv,
                                  lrr,
                                  Any),
                                Apply
                                  ((46,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    Variable
                                      ((46,
                                        Effect
                                          ([
                                          ],
                                            .
                                              ->
                                              .
                                                ->
                                                .
                                                  ->
                                                  .)),
                                        create/0),
                                    [
                                      Apply
                                        ((46,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          Variable
                                            ((46,
                                              Effect
                                                ([
                                                ],
                                                  .
                                                    ->
                                                    .
                                                      ->
                                                      .
                                                        ->
                                                        .)),
                                              create/0),
                                          [
                                            Variable
                                              ((46,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                ll/0);
                                            Variable
                                              ((46,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                lv/0);
                                            Variable
                                              ((46,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                lrl/0)
                                          ]);
                                      Variable
                                        ((46,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          lrv/0);
                                      Apply
                                        ((46,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          Variable
                                            ((46,
                                              Effect
                                                ([
                                                ],
                                                  .
                                                    ->
                                                    .
                                                      ->
                                                      .
                                                        ->
                                                        .)),
                                              create/0),
                                          [
                                            Variable
                                              ((46,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                lrr/0);
                                            Variable
                                              ((46,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                v/0);
                                            Variable
                                              ((46,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                r/0)
                                          ])
                                    ]))
                            ])))
                ]),
            IfThenElse
              ((48, Effect ([ OCaml.Invalid_argument/1 ], .)),
                Apply
                  ((48, Effect ([ ], .)),
                    Variable
                      ((48, Effect ([ ], .)),
                        OCaml.Pervasives.gt/1),
                    [
                      Variable ((48, Effect ([ ], .)), hr/0);
                      Apply
                        ((48,
                          Effect
                            ([
                            ],
                              .)),
                          Variable
                            ((48,
                              Effect
                                ([
                                ],
                                  .)),
                              Z.add/1),
                          [
                            Variable
                              ((48,
                                Effect
                                  ([
                                  ],
                                    .)),
                                hl/0);
                            Constant
                              ((48,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Int(2))
                          ])
                    ]),
                Match
                  ((48, Effect ([ OCaml.Invalid_argument/1 ], .)),
                    Variable ((49, Effect ([ ], .)), r/0),
                    [
                      (Constructor (Empty/0),
                        Apply
                          ((50,
                            Effect
                              ([
                                OCaml.Invalid_argument/1
                              ],
                                .)),
                            Variable
                              ((50,
                                Effect
                                  ([
                                  ],
                                    .
                                      -[
                                        OCaml.Invalid_argument/1
                                      ]->
                                      .)),
                                OCaml.Pervasives.invalid_arg/1),
                            [
                              Constant
                                ((50,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  String("Set.bal"))
                            ]));
                      (Constructor (Node/0, rl, rv, rr, Any),
                        IfThenElse
                          ((52,
                            Effect
                              ([
                                OCaml.Invalid_argument/1
                              ],
                                .)),
                            Apply
                              ((52,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Variable
                                  ((52,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    OCaml.Pervasives.ge/1),
                                [
                                  Apply
                                    ((52,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      Variable
                                        ((52,
                                          Effect
                                            ([
                                            ],
                                              .
                                                ->
                                                .)),
                                          height/0),
                                      [
                                        Variable
                                          ((52,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            rr/0)
                                      ]);
                                  Apply
                                    ((52,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      Variable
                                        ((52,
                                          Effect
                                            ([
                                            ],
                                              .
                                                ->
                                                .)),
                                          height/0),
                                      [
                                        Variable
                                          ((52,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            rl/0)
                                      ])
                                ]),
                            Apply
                              ((53,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Variable
                                  ((53,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .
                                            ->
                                            .
                                              ->
                                              .)),
                                    create/0),
                                [
                                  Apply
                                    ((53,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      Variable
                                        ((53,
                                          Effect
                                            ([
                                            ],
                                              .
                                                ->
                                                .
                                                  ->
                                                  .
                                                    ->
                                                    .)),
                                          create/0),
                                      [
                                        Variable
                                          ((53,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            l/0);
                                        Variable
                                          ((53,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            v/0);
                                        Variable
                                          ((53,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            rl/0)
                                      ]);
                                  Variable
                                    ((53,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      rv/0);
                                  Variable
                                    ((53,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      rr/0)
                                ]),
                            Match
                              ((54,
                                Effect
                                  ([
                                    OCaml.Invalid_argument/1
                                  ],
                                    .)),
                                Variable
                                  ((55,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    rl/0),
                                [
                                  (Constructor
                                    (Empty/0),
                                    Apply
                                      ((56,
                                        Effect
                                          ([
                                            OCaml.Invalid_argument/1
                                          ],
                                            .)),
                                        Variable
                                          ((56,
                                            Effect
                                              ([
                                              ],
                                                .
                                                  -[
                                                    OCaml.Invalid_argument/1
                                                  ]->
                                                  .)),
                                            OCaml.Pervasives.invalid_arg/1),
                                        [
                                          Constant
                                            ((56,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              String("Set.bal"))
                                        ]));
                                  (Constructor
                                    (Node/0,
                                      rll,
                                      rlv,
                                      rlr,
                                      Any),
                                    Apply
                                      ((58,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        Variable
                                          ((58,
                                            Effect
                                              ([
                                              ],
                                                .
                                                  ->
                                                  .
                                                    ->
                                                    .
                                                      ->
                                                      .)),
                                            create/0),
                                        [
                                          Apply
                                            ((58,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              Variable
                                                ((58,
                                                  Effect
                                                    ([
                                                    ],
                                                      .
                                                        ->
                                                        .
                                                          ->
                                                          .
                                                            ->
                                                            .)),
                                                  create/0),
                                              [
                                                Variable
                                                  ((58,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    l/0);
                                                Variable
                                                  ((58,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    v/0);
                                                Variable
                                                  ((58,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    rll/0)
                                              ]);
                                          Variable
                                            ((58,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              rlv/0);
                                          Apply
                                            ((58,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              Variable
                                                ((58,
                                                  Effect
                                                    ([
                                                    ],
                                                      .
                                                        ->
                                                        .
                                                          ->
                                                          .
                                                            ->
                                                            .)),
                                                  create/0),
                                              [
                                                Variable
                                                  ((58,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    rlr/0);
                                                Variable
                                                  ((58,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    rv/0);
                                                Variable
                                                  ((58,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    rr/0)
                                              ])
                                        ]))
                                ])))
                    ]),
                Constructor
                  ((61, Effect ([ ], .)), Node/0,
                    Variable ((61, Effect ([ ], .)), l/0),
                    Variable ((61, Effect ([ ], .)), v/0),
                    Variable ((61, Effect ([ ], .)), r/0),
                    IfThenElse
                      ((61, Effect ([ ], .)),
                        Apply
                          ((61, Effect ([ ], .)),
                            Variable
                              ((61, Effect ([ ], .)),
                                OCaml.Pervasives.ge/1),
                            [
                              Variable
                                ((61,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  hl/0);
                              Variable
                                ((61,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  hr/0)
                            ]),
                        Apply
                          ((61, Effect ([ ], .)),
                            Variable
                              ((61, Effect ([ ], .)),
                                Z.add/1),
                            [
                              Variable
                                ((61,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  hl/0);
                              Constant
                                ((61,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Int(1))
                            ]),
                        Apply
                          ((61, Effect ([ ], .)),
                            Variable
                              ((61, Effect ([ ], .)),
                                Z.add/1),
                            [
                              Variable
                                ((61,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  hr/0);
                              Constant
                                ((61,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Int(1))
                            ]))))))
    ])

65
Value
  (rec, @coq_rec,
    [
      ((add, [ ], [ (x, Type (elt/0)); (x_1, Type (t/0)) ], Some Type (t/0)),
        Match
          ((?, Effect ([ OCaml.Invalid_argument/1 ], .)),
            Variable ((?, Effect ([ ], .)), x_1/0),
            [
              (Constructor (Empty/0),
                Constructor
                  ((66, Effect ([ ], .)),
                    Node/0,
                    Constructor
                      ((66,
                        Effect
                          ([
                          ],
                            .)),
                        Empty/0),
                    Variable
                      ((66,
                        Effect
                          ([
                          ],
                            .)),
                        x/0),
                    Constructor
                      ((66,
                        Effect
                          ([
                          ],
                            .)),
                        Empty/0),
                    Constant
                      ((66,
                        Effect
                          ([
                          ],
                            .)),
                        Int(1))));
              (Alias (Constructor (Node/0, l, v, r, Any), t),
                LetVar
                  (68,
                    Effect
                      ([
                        OCaml.Invalid_argument/1
                      ],
                        .))
                  c =
                  Apply
                    ((68,
                      Effect
                        ([
                        ],
                          .)),
                      Variable
                        ((68,
                          Effect
                            ([
                            ],
                              .
                                ->
                                .)),
                          Ord.compare/0),
                      [
                        Variable
                          ((68,
                            Effect
                              ([
                              ],
                                .)),
                            x/0);
                        Variable
                          ((68,
                            Effect
                              ([
                              ],
                                .)),
                            v/0)
                      ])
                  in
                IfThenElse
                  ((69,
                    Effect
                      ([
                        OCaml.Invalid_argument/1
                      ],
                        .)),
                    Apply
                      ((69,
                        Effect
                          ([
                          ],
                            .)),
                        Variable
                          ((69,
                            Effect
                              ([
                              ],
                                .)),
                            equiv_decb/1),
                        [
                          Variable
                            ((69,
                              Effect
                                ([
                                ],
                                  .)),
                              c/0);
                          Constant
                            ((69,
                              Effect
                                ([
                                ],
                                  .)),
                              Int(0))
                        ]),
                    Variable
                      ((69,
                        Effect
                          ([
                          ],
                            .)),
                        t/0),
                    IfThenElse
                      ((70,
                        Effect
                          ([
                            OCaml.Invalid_argument/1
                          ],
                            .)),
                        Apply
                          ((70,
                            Effect
                              ([
                              ],
                                .)),
                            Variable
                              ((70,
                                Effect
                                  ([
                                  ],
                                    .)),
                                OCaml.Pervasives.lt/1),
                            [
                              Variable
                                ((70,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  c/0);
                              Constant
                                ((70,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Int(0))
                            ]),
                        Apply
                          ((70,
                            Effect
                              ([
                                OCaml.Invalid_argument/1
                              ],
                                .)),
                            Variable
                              ((70,
                                Effect
                                  ([
                                  ],
                                    .
                                      ->
                                      .
                                        ->
                                        .
                                          -[
                                            OCaml.Invalid_argument/1
                                          ]->
                                          .)),
                                bal/0),
                            [
                              Apply
                                ((70,
                                  Effect
                                    ([
                                      OCaml.Invalid_argument/1
                                    ],
                                      .)),
                                  Variable
                                    ((70,
                                      Effect
                                        ([
                                        ],
                                          .
                                            ->
                                            .
                                              -[
                                                OCaml.Invalid_argument/1
                                              ]->
                                              .)),
                                      add/0),
                                  [
                                    Variable
                                      ((70,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        x/0);
                                    Variable
                                      ((70,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        l/0)
                                  ]);
                              Variable
                                ((70,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  v/0);
                              Variable
                                ((70,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  r/0)
                            ]),
                        Apply
                          ((70,
                            Effect
                              ([
                                OCaml.Invalid_argument/1
                              ],
                                .)),
                            Variable
                              ((70,
                                Effect
                                  ([
                                  ],
                                    .
                                      ->
                                      .
                                        ->
                                        .
                                          -[
                                            OCaml.Invalid_argument/1
                                          ]->
                                          .)),
                                bal/0),
                            [
                              Variable
                                ((70,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  l/0);
                              Variable
                                ((70,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  v/0);
                              Apply
                                ((70,
                                  Effect
                                    ([
                                      OCaml.Invalid_argument/1
                                    ],
                                      .)),
                                  Variable
                                    ((70,
                                      Effect
                                        ([
                                        ],
                                          .
                                            ->
                                            .
                                              -[
                                                OCaml.Invalid_argument/1
                                              ]->
                                              .)),
                                      add/0),
                                  [
                                    Variable
                                      ((70,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        x/0);
                                    Variable
                                      ((70,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        r/0)
                                  ])
                            ]))))
            ]))
    ])

73
Value
  (non_rec, @.,
    [
      ((singleton, [ ], [ (x, Type (elt/0)) ], Some Type (t/0)),
        Constructor
          ((73, Effect ([ ], .)), Node/0,
            Constructor ((73, Effect ([ ], .)), Empty/0),
            Variable ((73, Effect ([ ], .)), x/0),
            Constructor ((73, Effect ([ ], .)), Empty/0),
            Constant ((73, Effect ([ ], .)), Int(1))))
    ])

82
Value
  (rec, @coq_rec,
    [
      ((add_min_element, [ ], [ (v, Type (elt/0)); (x, Type (t/0)) ],
        Some Type (t/0)),
        Match
          ((?, Effect ([ OCaml.Invalid_argument/1 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Constructor (Empty/0),
                Apply
                  ((83, Effect ([ ], .)),
                    Variable
                      ((83,
                        Effect
                          ([
                          ],
                            .
                              ->
                              .)),
                        singleton/0),
                    [
                      Variable
                        ((83,
                          Effect
                            ([
                            ],
                              .)),
                          v/0)
                    ]));
              (Constructor (Node/0, l, x, r, h),
                Apply
                  ((85,
                    Effect
                      ([
                        OCaml.Invalid_argument/1
                      ],
                        .)),
                    Variable
                      ((85,
                        Effect
                          ([
                          ],
                            .
                              ->
                              .
                                ->
                                .
                                  -[
                                    OCaml.Invalid_argument/1
                                  ]->
                                  .)),
                        bal/0),
                    [
                      Apply
                        ((85,
                          Effect
                            ([
                              OCaml.Invalid_argument/1
                            ],
                              .)),
                          Variable
                            ((85,
                              Effect
                                ([
                                ],
                                  .
                                    ->
                                    .
                                      -[
                                        OCaml.Invalid_argument/1
                                      ]->
                                      .)),
                              add_min_element/0),
                          [
                            Variable
                              ((85,
                                Effect
                                  ([
                                  ],
                                    .)),
                                v/0);
                            Variable
                              ((85,
                                Effect
                                  ([
                                  ],
                                    .)),
                                l/0)
                          ]);
                      Variable
                        ((85,
                          Effect
                            ([
                            ],
                              .)),
                          x/0);
                      Variable
                        ((85,
                          Effect
                            ([
                            ],
                              .)),
                          r/0)
                    ]))
            ]))
    ])

88
Value
  (rec, @coq_rec,
    [
      ((add_max_element, [ ], [ (v, Type (elt/0)); (x, Type (t/0)) ],
        Some Type (t/0)),
        Match
          ((?, Effect ([ OCaml.Invalid_argument/1 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Constructor (Empty/0),
                Apply
                  ((89, Effect ([ ], .)),
                    Variable
                      ((89,
                        Effect
                          ([
                          ],
                            .
                              ->
                              .)),
                        singleton/0),
                    [
                      Variable
                        ((89,
                          Effect
                            ([
                            ],
                              .)),
                          v/0)
                    ]));
              (Constructor (Node/0, l, x, r, h),
                Apply
                  ((91,
                    Effect
                      ([
                        OCaml.Invalid_argument/1
                      ],
                        .)),
                    Variable
                      ((91,
                        Effect
                          ([
                          ],
                            .
                              ->
                              .
                                ->
                                .
                                  -[
                                    OCaml.Invalid_argument/1
                                  ]->
                                  .)),
                        bal/0),
                    [
                      Variable
                        ((91,
                          Effect
                            ([
                            ],
                              .)),
                          l/0);
                      Variable
                        ((91,
                          Effect
                            ([
                            ],
                              .)),
                          x/0);
                      Apply
                        ((91,
                          Effect
                            ([
                              OCaml.Invalid_argument/1
                            ],
                              .)),
                          Variable
                            ((91,
                              Effect
                                ([
                                ],
                                  .
                                    ->
                                    .
                                      -[
                                        OCaml.Invalid_argument/1
                                      ]->
                                      .)),
                              add_max_element/0),
                          [
                            Variable
                              ((91,
                                Effect
                                  ([
                                  ],
                                    .)),
                                v/0);
                            Variable
                              ((91,
                                Effect
                                  ([
                                  ],
                                    .)),
                                r/0)
                          ])
                    ]))
            ]))
    ])

97
Value
  (rec, @.,
    [
      ((join_rec, [ ],
        [
          (counter, Type (nat/1));
          (l, Type (t/0));
          (v, Type (elt/0));
          (r, Type (t/0))
        ], Some Type (t/0)),
        Match
          ((?, Effect ([ NonTermination/1; OCaml.Invalid_argument/1 ], .)),
            Variable ((?, Effect ([ ], .)), counter/0),
            [
              (Constructor (O/1),
                Apply
                  ((?,
                    Effect
                      ([
                        NonTermination/1
                      ],
                        .)),
                    Variable
                      ((?,
                        Effect
                          ([
                          ],
                            .
                              -[
                                NonTermination/1
                              ]->
                              .)),
                        not_terminated/1),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)))
                    ]));
              (Constructor (S/1, counter),
                Match
                  ((98,
                    Effect
                      ([
                        NonTermination/1;
                        OCaml.Invalid_argument/1
                      ],
                        .)),
                    Tuple
                      ((98,
                        Effect
                          ([
                          ],
                            .)),
                        Variable
                          ((98,
                            Effect
                              ([
                              ],
                                .)),
                            l/0),
                        Variable
                          ((98,
                            Effect
                              ([
                              ],
                                .)),
                            r/0)),
                    [
                      (Tuple
                        (Constructor
                          (Empty/0),
                          Any),
                        Apply
                          ((99,
                            Effect
                              ([
                                OCaml.Invalid_argument/1
                              ],
                                .)),
                            Variable
                              ((99,
                                Effect
                                  ([
                                  ],
                                    .
                                      ->
                                      .
                                        -[
                                          OCaml.Invalid_argument/1
                                        ]->
                                        .)),
                                add_min_element/0),
                            [
                              Variable
                                ((99,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  v/0);
                              Variable
                                ((99,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  r/0)
                            ]));
                      (Tuple
                        (Any,
                          Constructor
                            (Empty/0)),
                        Apply
                          ((100,
                            Effect
                              ([
                                OCaml.Invalid_argument/1
                              ],
                                .)),
                            Variable
                              ((100,
                                Effect
                                  ([
                                  ],
                                    .
                                      ->
                                      .
                                        -[
                                          OCaml.Invalid_argument/1
                                        ]->
                                        .)),
                                add_max_element/0),
                            [
                              Variable
                                ((100,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  v/0);
                              Variable
                                ((100,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  l/0)
                            ]));
                      (Tuple
                        (Constructor
                          (Node/0,
                            ll,
                            lv,
                            lr,
                            lh),
                          Constructor
                            (Node/0,
                              rl,
                              rv,
                              rr,
                              rh)),
                        IfThenElse
                          ((102,
                            Effect
                              ([
                                NonTermination/1;
                                OCaml.Invalid_argument/1
                              ],
                                .)),
                            Apply
                              ((102,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Variable
                                  ((102,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    OCaml.Pervasives.gt/1),
                                [
                                  Variable
                                    ((102,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      lh/0);
                                  Apply
                                    ((102,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      Variable
                                        ((102,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          Z.add/1),
                                      [
                                        Variable
                                          ((102,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            rh/0);
                                        Constant
                                          ((102,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            Int(2))
                                      ])
                                ]),
                            Apply
                              ((102,
                                Effect
                                  ([
                                    NonTermination/1;
                                    OCaml.Invalid_argument/1
                                  ],
                                    .)),
                                Variable
                                  ((102,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .
                                            ->
                                            .
                                              -[
                                                OCaml.Invalid_argument/1
                                              ]->
                                              .)),
                                    bal/0),
                                [
                                  Variable
                                    ((102,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      ll/0);
                                  Variable
                                    ((102,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      lv/0);
                                  Apply
                                    ((102,
                                      Effect
                                        ([
                                          NonTermination/1;
                                          OCaml.Invalid_argument/1
                                        ],
                                          .)),
                                      Apply
                                        ((?,
                                          Effect
                                            ([
                                            ],
                                              .
                                                ->
                                                .
                                                  ->
                                                  .
                                                    -[
                                                      NonTermination/1;
                                                      OCaml.Invalid_argument/1
                                                    ]->
                                                    .)),
                                          Variable
                                            ((?,
                                              Effect
                                                ([
                                                ],
                                                  .
                                                    ->
                                                    .
                                                      ->
                                                      .
                                                        ->
                                                        .
                                                          -[
                                                            NonTermination/1;
                                                            OCaml.Invalid_argument/1
                                                          ]->
                                                          .)),
                                              join_rec/0),
                                          [
                                            Variable
                                              ((?,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                counter/0)
                                          ]),
                                      [
                                        Variable
                                          ((102,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            lr/0);
                                        Variable
                                          ((102,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            v/0);
                                        Variable
                                          ((102,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            r/0)
                                      ])
                                ]),
                            IfThenElse
                              ((103,
                                Effect
                                  ([
                                    NonTermination/1;
                                    OCaml.Invalid_argument/1
                                  ],
                                    .)),
                                Apply
                                  ((103,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    Variable
                                      ((103,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        OCaml.Pervasives.gt/1),
                                    [
                                      Variable
                                        ((103,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          rh/0);
                                      Apply
                                        ((103,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          Variable
                                            ((103,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              Z.add/1),
                                          [
                                            Variable
                                              ((103,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                lh/0);
                                            Constant
                                              ((103,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                Int(2))
                                          ])
                                    ]),
                                Apply
                                  ((103,
                                    Effect
                                      ([
                                        NonTermination/1;
                                        OCaml.Invalid_argument/1
                                      ],
                                        .)),
                                    Variable
                                      ((103,
                                        Effect
                                          ([
                                          ],
                                            .
                                              ->
                                              .
                                                ->
                                                .
                                                  -[
                                                    OCaml.Invalid_argument/1
                                                  ]->
                                                  .)),
                                        bal/0),
                                    [
                                      Apply
                                        ((103,
                                          Effect
                                            ([
                                              NonTermination/1;
                                              OCaml.Invalid_argument/1
                                            ],
                                              .)),
                                          Apply
                                            ((?,
                                              Effect
                                                ([
                                                ],
                                                  .
                                                    ->
                                                    .
                                                      ->
                                                      .
                                                        -[
                                                          NonTermination/1;
                                                          OCaml.Invalid_argument/1
                                                        ]->
                                                        .)),
                                              Variable
                                                ((?,
                                                  Effect
                                                    ([
                                                    ],
                                                      .
                                                        ->
                                                        .
                                                          ->
                                                          .
                                                            ->
                                                            .
                                                              -[
                                                                NonTermination/1;
                                                                OCaml.Invalid_argument/1
                                                              ]->
                                                              .)),
                                                  join_rec/0),
                                              [
                                                Variable
                                                  ((?,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    counter/0)
                                              ]),
                                          [
                                            Variable
                                              ((103,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                l/0);
                                            Variable
                                              ((103,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                v/0);
                                            Variable
                                              ((103,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                rl/0)
                                          ]);
                                      Variable
                                        ((103,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          rv/0);
                                      Variable
                                        ((103,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          rr/0)
                                    ]),
                                Apply
                                  ((104,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    Variable
                                      ((104,
                                        Effect
                                          ([
                                          ],
                                            .
                                              ->
                                              .
                                                ->
                                                .
                                                  ->
                                                  .)),
                                        create/0),
                                    [
                                      Variable
                                        ((104,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          l/0);
                                      Variable
                                        ((104,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          v/0);
                                      Variable
                                        ((104,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          r/0)
                                    ]))))
                    ]))
            ]))
    ])

97
Value
  (non_rec, @.,
    [
      ((join, [ ], [ (l, Type (t/0)); (v, Type (elt/0)); (r, Type (t/0)) ],
        Some Type (t/0)),
        Apply
          ((?,
            Effect
              ([ Counter/1; NonTermination/1; OCaml.Invalid_argument/1 ],
                .)),
            Variable
              ((?,
                Effect
                  ([ ],
                    . ->
                      . ->
                        . ->
                          .
                            -[
                              NonTermination/1;
                              OCaml.Invalid_argument/1
                            ]-> .)), join_rec/0),
            [
              Apply
                ((?, Effect ([ Counter/1 ], .)),
                  Variable
                    ((?,
                      Effect
                        ([
                        ],
                          .
                            -[
                              Counter/1
                            ]->
                            .)),
                      read_counter/1),
                  [
                    Tuple
                      ((?,
                        Effect
                          ([
                          ],
                            .)))
                  ]);
              Variable ((?, Effect ([ ], .)), l/0);
              Variable ((?, Effect ([ ], .)), v/0);
              Variable ((?, Effect ([ ], .)), r/0)
            ]))
    ])

108
Value
  (rec, @coq_rec,
    [
      ((min_elt, [ ], [ (x, Type (t/0)) ], Some Type (elt/0)),
        Match
          ((?, Effect ([ OCaml.Not_found/1 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Constructor (Empty/0),
                Apply
                  ((109,
                    Effect
                      ([
                        OCaml.Not_found/1
                      ],
                        .)),
                    Variable
                      ((109,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Not_found/1
                              ]->
                              .)),
                        OCaml.raise_Not_found/1),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)))
                    ]));
              (Constructor (Node/0, Constructor (Empty/0), v, r, Any),
                Variable ((110, Effect ([ ], .)), v/0));
              (Constructor (Node/0, l, v, r, Any),
                Apply
                  ((111,
                    Effect
                      ([
                        OCaml.Not_found/1
                      ],
                        .)),
                    Variable
                      ((111,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Not_found/1
                              ]->
                              .)),
                        min_elt/0),
                    [
                      Variable
                        ((111,
                          Effect
                            ([
                            ],
                              .)),
                          l/0)
                    ]))
            ]))
    ])

114
Value
  (rec, @coq_rec,
    [
      ((max_elt, [ ], [ (x, Type (t/0)) ], Some Type (elt/0)),
        Match
          ((?, Effect ([ OCaml.Not_found/1 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Constructor (Empty/0),
                Apply
                  ((115,
                    Effect
                      ([
                        OCaml.Not_found/1
                      ],
                        .)),
                    Variable
                      ((115,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Not_found/1
                              ]->
                              .)),
                        OCaml.raise_Not_found/1),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)))
                    ]));
              (Constructor (Node/0, l, v, Constructor (Empty/0), Any),
                Variable ((116, Effect ([ ], .)), v/0));
              (Constructor (Node/0, l, v, r, Any),
                Apply
                  ((117,
                    Effect
                      ([
                        OCaml.Not_found/1
                      ],
                        .)),
                    Variable
                      ((117,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Not_found/1
                              ]->
                              .)),
                        max_elt/0),
                    [
                      Variable
                        ((117,
                          Effect
                            ([
                            ],
                              .)),
                          r/0)
                    ]))
            ]))
    ])

122
Value
  (rec, @coq_rec,
    [
      ((remove_min_elt, [ ], [ (x, Type (t/0)) ], Some Type (t/0)),
        Match
          ((?, Effect ([ OCaml.Invalid_argument/1 ], .)),
            Variable ((?, Effect ([ ], .)), x/0),
            [
              (Constructor (Empty/0),
                Apply
                  ((123,
                    Effect
                      ([
                        OCaml.Invalid_argument/1
                      ],
                        .)),
                    Variable
                      ((123,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Invalid_argument/1
                              ]->
                              .)),
                        OCaml.Pervasives.invalid_arg/1),
                    [
                      Constant
                        ((123,
                          Effect
                            ([
                            ],
                              .)),
                          String("Set.remove_min_elt"))
                    ]));
              (Constructor (Node/0, Constructor (Empty/0), v, r, Any),
                Variable ((124, Effect ([ ], .)), r/0));
              (Constructor (Node/0, l, v, r, Any),
                Apply
                  ((125,
                    Effect
                      ([
                        OCaml.Invalid_argument/1
                      ],
                        .)),
                    Variable
                      ((125,
                        Effect
                          ([
                          ],
                            .
                              ->
                              .
                                ->
                                .
                                  -[
                                    OCaml.Invalid_argument/1
                                  ]->
                                  .)),
                        bal/0),
                    [
                      Apply
                        ((125,
                          Effect
                            ([
                              OCaml.Invalid_argument/1
                            ],
                              .)),
                          Variable
                            ((125,
                              Effect
                                ([
                                ],
                                  .
                                    -[
                                      OCaml.Invalid_argument/1
                                    ]->
                                    .)),
                              remove_min_elt/0),
                          [
                            Variable
                              ((125,
                                Effect
                                  ([
                                  ],
                                    .)),
                                l/0)
                          ]);
                      Variable
                        ((125,
                          Effect
                            ([
                            ],
                              .)),
                          v/0);
                      Variable
                        ((125,
                          Effect
                            ([
                            ],
                              .)),
                          r/0)
                    ]))
            ]))
    ])

132
Value
  (non_rec, @.,
    [
      ((merge, [ ], [ (t1, Type (t/0)); (t2, Type (t/0)) ], Some Type (t/0)),
        Match
          ((133, Effect ([ OCaml.Invalid_argument/1; OCaml.Not_found/1 ], .)),
            Tuple
              ((133, Effect ([ ], .)),
                Variable ((133, Effect ([ ], .)), t1/0),
                Variable ((133, Effect ([ ], .)), t2/0)),
            [
              (Tuple (Constructor (Empty/0), t),
                Variable ((134, Effect ([ ], .)), t/0));
              (Tuple (t, Constructor (Empty/0)),
                Variable ((135, Effect ([ ], .)), t/0));
              (Tuple (Any, Any),
                Apply
                  ((136,
                    Effect
                      ([
                        OCaml.Invalid_argument/1;
                        OCaml.Not_found/1
                      ],
                        .)),
                    Variable
                      ((136,
                        Effect
                          ([
                          ],
                            .
                              ->
                              .
                                ->
                                .
                                  -[
                                    OCaml.Invalid_argument/1
                                  ]->
                                  .)),
                        bal/0),
                    [
                      Variable
                        ((136,
                          Effect
                            ([
                            ],
                              .)),
                          t1/0);
                      Apply
                        ((136,
                          Effect
                            ([
                              OCaml.Not_found/1
                            ],
                              .)),
                          Variable
                            ((136,
                              Effect
                                ([
                                ],
                                  .
                                    -[
                                      OCaml.Not_found/1
                                    ]->
                                    .)),
                              min_elt/0),
                          [
                            Variable
                              ((136,
                                Effect
                                  ([
                                  ],
                                    .)),
                                t2/0)
                          ]);
                      Apply
                        ((136,
                          Effect
                            ([
                              OCaml.Invalid_argument/1
                            ],
                              .)),
                          Variable
                            ((136,
                              Effect
                                ([
                                ],
                                  .
                                    -[
                                      OCaml.Invalid_argument/1
                                    ]->
                                    .)),
                              remove_min_elt/0),
                          [
                            Variable
                              ((136,
                                Effect
                                  ([
                                  ],
                                    .)),
                                t2/0)
                          ])
                    ]))
            ]))
    ])

142
Value
  (non_rec, @.,
    [
      ((concat, [ ], [ (t1, Type (t/0)); (t2, Type (t/0)) ], Some Type (t/0)),
        Match
          ((143,
            Effect
              ([
                Counter/1;
                NonTermination/1;
                OCaml.Invalid_argument/1;
                OCaml.Not_found/1
              ], .)),
            Tuple
              ((143, Effect ([ ], .)),
                Variable ((143, Effect ([ ], .)), t1/0),
                Variable ((143, Effect ([ ], .)), t2/0)),
            [
              (Tuple (Constructor (Empty/0), t),
                Variable ((144, Effect ([ ], .)), t/0));
              (Tuple (t, Constructor (Empty/0)),
                Variable ((145, Effect ([ ], .)), t/0));
              (Tuple (Any, Any),
                Apply
                  ((146,
                    Effect
                      ([
                        Counter/1;
                        NonTermination/1;
                        OCaml.Invalid_argument/1;
                        OCaml.Not_found/1
                      ],
                        .)),
                    Variable
                      ((146,
                        Effect
                          ([
                          ],
                            .
                              ->
                              .
                                ->
                                .
                                  -[
                                    Counter/1;
                                    NonTermination/1;
                                    OCaml.Invalid_argument/1
                                  ]->
                                  .)),
                        join/0),
                    [
                      Variable
                        ((146,
                          Effect
                            ([
                            ],
                              .)),
                          t1/0);
                      Apply
                        ((146,
                          Effect
                            ([
                              OCaml.Not_found/1
                            ],
                              .)),
                          Variable
                            ((146,
                              Effect
                                ([
                                ],
                                  .
                                    -[
                                      OCaml.Not_found/1
                                    ]->
                                    .)),
                              min_elt/0),
                          [
                            Variable
                              ((146,
                                Effect
                                  ([
                                  ],
                                    .)),
                                t2/0)
                          ]);
                      Apply
                        ((146,
                          Effect
                            ([
                              OCaml.Invalid_argument/1
                            ],
                              .)),
                          Variable
                            ((146,
                              Effect
                                ([
                                ],
                                  .
                                    -[
                                      OCaml.Invalid_argument/1
                                    ]->
                                    .)),
                              remove_min_elt/0),
                          [
                            Variable
                              ((146,
                                Effect
                                  ([
                                  ],
                                    .)),
                                t2/0)
                          ])
                    ]))
            ]))
    ])

154
Value
  (rec, @coq_rec,
    [
      ((split, [ ], [ (x, Type (Ord.t/0)); (x_1, Type (t/0)) ],
        Some (Type (t/0) * Type (bool/1) * Type (t/0))),
        Match
          ((?,
            Effect
              ([ Counter/1; NonTermination/1; OCaml.Invalid_argument/1 ],
                .)), Variable ((?, Effect ([ ], .)), x_1/0),
            [
              (Constructor (Empty/0),
                Tuple
                  ((156, Effect ([ ], .)),
                    Constructor
                      ((156,
                        Effect
                          ([
                          ],
                            .)),
                        Empty/0),
                    Constructor
                      ((156,
                        Effect
                          ([
                          ],
                            .)),
                        false/1),
                    Constructor
                      ((156,
                        Effect
                          ([
                          ],
                            .)),
                        Empty/0)));
              (Constructor (Node/0, l, v, r, Any),
                LetVar
                  (158,
                    Effect
                      ([
                        Counter/1;
                        NonTermination/1;
                        OCaml.Invalid_argument/1
                      ],
                        .))
                  c =
                  Apply
                    ((158,
                      Effect
                        ([
                        ],
                          .)),
                      Variable
                        ((158,
                          Effect
                            ([
                            ],
                              .
                                ->
                                .)),
                          Ord.compare/0),
                      [
                        Variable
                          ((158,
                            Effect
                              ([
                              ],
                                .)),
                            x/0);
                        Variable
                          ((158,
                            Effect
                              ([
                              ],
                                .)),
                            v/0)
                      ])
                  in
                IfThenElse
                  ((159,
                    Effect
                      ([
                        Counter/1;
                        NonTermination/1;
                        OCaml.Invalid_argument/1
                      ],
                        .)),
                    Apply
                      ((159,
                        Effect
                          ([
                          ],
                            .)),
                        Variable
                          ((159,
                            Effect
                              ([
                              ],
                                .)),
                            equiv_decb/1),
                        [
                          Variable
                            ((159,
                              Effect
                                ([
                                ],
                                  .)),
                              c/0);
                          Constant
                            ((159,
                              Effect
                                ([
                                ],
                                  .)),
                              Int(0))
                        ]),
                    Tuple
                      ((159,
                        Effect
                          ([
                          ],
                            .)),
                        Variable
                          ((159,
                            Effect
                              ([
                              ],
                                .)),
                            l/0),
                        Constructor
                          ((159,
                            Effect
                              ([
                              ],
                                .)),
                            true/1),
                        Variable
                          ((159,
                            Effect
                              ([
                              ],
                                .)),
                            r/0)),
                    IfThenElse
                      ((160,
                        Effect
                          ([
                            Counter/1;
                            NonTermination/1;
                            OCaml.Invalid_argument/1
                          ],
                            .)),
                        Apply
                          ((160,
                            Effect
                              ([
                              ],
                                .)),
                            Variable
                              ((160,
                                Effect
                                  ([
                                  ],
                                    .)),
                                OCaml.Pervasives.lt/1),
                            [
                              Variable
                                ((160,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  c/0);
                              Constant
                                ((160,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Int(0))
                            ]),
                        Match
                          ((161,
                            Effect
                              ([
                                Counter/1;
                                NonTermination/1;
                                OCaml.Invalid_argument/1
                              ],
                                .)),
                            Apply
                              ((161,
                                Effect
                                  ([
                                    Counter/1;
                                    NonTermination/1;
                                    OCaml.Invalid_argument/1
                                  ],
                                    .)),
                                Variable
                                  ((161,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .
                                            -[
                                              Counter/1;
                                              NonTermination/1;
                                              OCaml.Invalid_argument/1
                                            ]->
                                            .)),
                                    split/0),
                                [
                                  Variable
                                    ((161,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      x/0);
                                  Variable
                                    ((161,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      l/0)
                                ]),
                            [
                              (Tuple
                                (ll,
                                  pres,
                                  rl),
                                Tuple
                                  ((161,
                                    Effect
                                      ([
                                        Counter/1;
                                        NonTermination/1;
                                        OCaml.Invalid_argument/1
                                      ],
                                        .)),
                                    Variable
                                      ((161,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        ll/0),
                                    Variable
                                      ((161,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        pres/0),
                                    Apply
                                      ((161,
                                        Effect
                                          ([
                                            Counter/1;
                                            NonTermination/1;
                                            OCaml.Invalid_argument/1
                                          ],
                                            .)),
                                        Variable
                                          ((161,
                                            Effect
                                              ([
                                              ],
                                                .
                                                  ->
                                                  .
                                                    ->
                                                    .
                                                      -[
                                                        Counter/1;
                                                        NonTermination/1;
                                                        OCaml.Invalid_argument/1
                                                      ]->
                                                      .)),
                                            join/0),
                                        [
                                          Variable
                                            ((161,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              rl/0);
                                          Variable
                                            ((161,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              v/0);
                                          Variable
                                            ((161,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              r/0)
                                        ])))
                            ]),
                        Match
                          ((163,
                            Effect
                              ([
                                Counter/1;
                                NonTermination/1;
                                OCaml.Invalid_argument/1
                              ],
                                .)),
                            Apply
                              ((163,
                                Effect
                                  ([
                                    Counter/1;
                                    NonTermination/1;
                                    OCaml.Invalid_argument/1
                                  ],
                                    .)),
                                Variable
                                  ((163,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .
                                            -[
                                              Counter/1;
                                              NonTermination/1;
                                              OCaml.Invalid_argument/1
                                            ]->
                                            .)),
                                    split/0),
                                [
                                  Variable
                                    ((163,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      x/0);
                                  Variable
                                    ((163,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      r/0)
                                ]),
                            [
                              (Tuple
                                (lr,
                                  pres,
                                  rr),
                                Tuple
                                  ((163,
                                    Effect
                                      ([
                                        Counter/1;
                                        NonTermination/1;
                                        OCaml.Invalid_argument/1
                                      ],
                                        .)),
                                    Apply
                                      ((163,
                                        Effect
                                          ([
                                            Counter/1;
                                            NonTermination/1;
                                            OCaml.Invalid_argument/1
                                          ],
                                            .)),
                                        Variable
                                          ((163,
                                            Effect
                                              ([
                                              ],
                                                .
                                                  ->
                                                  .
                                                    ->
                                                    .
                                                      -[
                                                        Counter/1;
                                                        NonTermination/1;
                                                        OCaml.Invalid_argument/1
                                                      ]->
                                                      .)),
                                            join/0),
                                        [
                                          Variable
                                            ((163,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              l/0);
                                          Variable
                                            ((163,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              v/0);
                                          Variable
                                            ((163,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              lr/0)
                                        ]),
                                    Variable
                                      ((163,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        pres/0),
                                    Variable
                                      ((163,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        rr/0)))
                            ]))))
            ]))
    ])

168
Value
  (non_rec, @.,
    [
      ((empty, [ ], [ ], Some Type (t/0)),
        Constructor ((168, Effect ([ ], .)), Empty/0))
    ])

170
Value
  (non_rec, @.,
    [
      ((is_empty, [ ], [ (x, Type (t/0)) ], Some Type (bool/1)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), x/0),
            [
              (Constructor (Empty/0),
                Constructor
                  ((170, Effect ([ ], .)),
                    true/1));
              (Any, Constructor ((170, Effect ([ ], .)), false/1))
            ]))
    ])

172
Value
  (rec, @coq_rec,
    [
      ((mem, [ ], [ (x, Type (Ord.t/0)); (x_1, Type (t/0)) ], Some Type (bool/1)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), x_1/0),
            [
              (Constructor (Empty/0),
                Constructor
                  ((173, Effect ([ ], .)),
                    false/1));
              (Constructor (Node/0, l, v, r, Any),
                LetVar (175, Effect ([ ], .)) c =
                  Apply
                    ((175,
                      Effect
                        ([
                        ],
                          .)),
                      Variable
                        ((175,
                          Effect
                            ([
                            ],
                              .
                                ->
                                .)),
                          Ord.compare/0),
                      [
                        Variable
                          ((175,
                            Effect
                              ([
                              ],
                                .)),
                            x/0);
                        Variable
                          ((175,
                            Effect
                              ([
                              ],
                                .)),
                            v/0)
                      ])
                  in
                Apply
                  ((176, Effect ([ ], .)),
                    Variable
                      ((176,
                        Effect
                          ([
                          ],
                            .)),
                        orb/1),
                    [
                      Apply
                        ((176,
                          Effect
                            ([
                            ],
                              .)),
                          Variable
                            ((176,
                              Effect
                                ([
                                ],
                                  .)),
                              equiv_decb/1),
                          [
                            Variable
                              ((176,
                                Effect
                                  ([
                                  ],
                                    .)),
                                c/0);
                            Constant
                              ((176,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Int(0))
                          ]);
                      Apply
                        ((176,
                          Effect
                            ([
                            ],
                              .)),
                          Variable
                            ((176,
                              Effect
                                ([
                                ],
                                  .
                                    ->
                                    .
                                      ->
                                      .)),
                              mem/0),
                          [
                            Variable
                              ((176,
                                Effect
                                  ([
                                  ],
                                    .)),
                                x/0);
                            IfThenElse
                              ((176,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Apply
                                  ((176,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    Variable
                                      ((176,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        OCaml.Pervasives.lt/1),
                                    [
                                      Variable
                                        ((176,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          c/0);
                                      Constant
                                        ((176,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          Int(0))
                                    ]),
                                Variable
                                  ((176,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    l/0),
                                Variable
                                  ((176,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    r/0))
                          ])
                    ]))
            ]))
    ])

179
Value
  (rec, @coq_rec,
    [
      ((remove, [ ], [ (x, Type (Ord.t/0)); (x_1, Type (t/0)) ], Some Type (t/0)),
        Match
          ((?, Effect ([ OCaml.Invalid_argument/1; OCaml.Not_found/1 ], .)),
            Variable ((?, Effect ([ ], .)), x_1/0),
            [
              (Constructor (Empty/0),
                Constructor
                  ((180, Effect ([ ], .)),
                    Empty/0));
              (Constructor (Node/0, l, v, r, Any),
                LetVar
                  (182,
                    Effect
                      ([
                        OCaml.Invalid_argument/1;
                        OCaml.Not_found/1
                      ],
                        .))
                  c =
                  Apply
                    ((182,
                      Effect
                        ([
                        ],
                          .)),
                      Variable
                        ((182,
                          Effect
                            ([
                            ],
                              .
                                ->
                                .)),
                          Ord.compare/0),
                      [
                        Variable
                          ((182,
                            Effect
                              ([
                              ],
                                .)),
                            x/0);
                        Variable
                          ((182,
                            Effect
                              ([
                              ],
                                .)),
                            v/0)
                      ])
                  in
                IfThenElse
                  ((183,
                    Effect
                      ([
                        OCaml.Invalid_argument/1;
                        OCaml.Not_found/1
                      ],
                        .)),
                    Apply
                      ((183,
                        Effect
                          ([
                          ],
                            .)),
                        Variable
                          ((183,
                            Effect
                              ([
                              ],
                                .)),
                            equiv_decb/1),
                        [
                          Variable
                            ((183,
                              Effect
                                ([
                                ],
                                  .)),
                              c/0);
                          Constant
                            ((183,
                              Effect
                                ([
                                ],
                                  .)),
                              Int(0))
                        ]),
                    Apply
                      ((183,
                        Effect
                          ([
                            OCaml.Invalid_argument/1;
                            OCaml.Not_found/1
                          ],
                            .)),
                        Variable
                          ((183,
                            Effect
                              ([
                              ],
                                .
                                  ->
                                  .
                                    -[
                                      OCaml.Invalid_argument/1;
                                      OCaml.Not_found/1
                                    ]->
                                    .)),
                            merge/0),
                        [
                          Variable
                            ((183,
                              Effect
                                ([
                                ],
                                  .)),
                              l/0);
                          Variable
                            ((183,
                              Effect
                                ([
                                ],
                                  .)),
                              r/0)
                        ]),
                    IfThenElse
                      ((184,
                        Effect
                          ([
                            OCaml.Invalid_argument/1;
                            OCaml.Not_found/1
                          ],
                            .)),
                        Apply
                          ((184,
                            Effect
                              ([
                              ],
                                .)),
                            Variable
                              ((184,
                                Effect
                                  ([
                                  ],
                                    .)),
                                OCaml.Pervasives.lt/1),
                            [
                              Variable
                                ((184,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  c/0);
                              Constant
                                ((184,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Int(0))
                            ]),
                        Apply
                          ((184,
                            Effect
                              ([
                                OCaml.Invalid_argument/1;
                                OCaml.Not_found/1
                              ],
                                .)),
                            Variable
                              ((184,
                                Effect
                                  ([
                                  ],
                                    .
                                      ->
                                      .
                                        ->
                                        .
                                          -[
                                            OCaml.Invalid_argument/1
                                          ]->
                                          .)),
                                bal/0),
                            [
                              Apply
                                ((184,
                                  Effect
                                    ([
                                      OCaml.Invalid_argument/1;
                                      OCaml.Not_found/1
                                    ],
                                      .)),
                                  Variable
                                    ((184,
                                      Effect
                                        ([
                                        ],
                                          .
                                            ->
                                            .
                                              -[
                                                OCaml.Invalid_argument/1;
                                                OCaml.Not_found/1
                                              ]->
                                              .)),
                                      remove/0),
                                  [
                                    Variable
                                      ((184,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        x/0);
                                    Variable
                                      ((184,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        l/0)
                                  ]);
                              Variable
                                ((184,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  v/0);
                              Variable
                                ((184,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  r/0)
                            ]),
                        Apply
                          ((184,
                            Effect
                              ([
                                OCaml.Invalid_argument/1;
                                OCaml.Not_found/1
                              ],
                                .)),
                            Variable
                              ((184,
                                Effect
                                  ([
                                  ],
                                    .
                                      ->
                                      .
                                        ->
                                        .
                                          -[
                                            OCaml.Invalid_argument/1
                                          ]->
                                          .)),
                                bal/0),
                            [
                              Variable
                                ((184,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  l/0);
                              Variable
                                ((184,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  v/0);
                              Apply
                                ((184,
                                  Effect
                                    ([
                                      OCaml.Invalid_argument/1;
                                      OCaml.Not_found/1
                                    ],
                                      .)),
                                  Variable
                                    ((184,
                                      Effect
                                        ([
                                        ],
                                          .
                                            ->
                                            .
                                              -[
                                                OCaml.Invalid_argument/1;
                                                OCaml.Not_found/1
                                              ]->
                                              .)),
                                      remove/0),
                                  [
                                    Variable
                                      ((184,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        x/0);
                                    Variable
                                      ((184,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        r/0)
                                  ])
                            ]))))
            ]))
    ])

187
Value
  (rec, @.,
    [
      ((union_rec, [ ],
        [ (counter, Type (nat/1)); (s1, Type (t/0)); (s2, Type (t/0)) ],
        Some Type (t/0)),
        Match
          ((?,
            Effect
              ([ Counter/1; NonTermination/1; OCaml.Invalid_argument/1 ],
                .)), Variable ((?, Effect ([ ], .)), counter/0),
            [
              (Constructor (O/1),
                Apply
                  ((?,
                    Effect
                      ([
                        NonTermination/1
                      ],
                        .)),
                    Variable
                      ((?,
                        Effect
                          ([
                          ],
                            .
                              -[
                                NonTermination/1
                              ]->
                              .)),
                        not_terminated/1),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)))
                    ]));
              (Constructor (S/1, counter),
                Match
                  ((188,
                    Effect
                      ([
                        Counter/1;
                        NonTermination/1;
                        OCaml.Invalid_argument/1
                      ],
                        .)),
                    Tuple
                      ((188,
                        Effect
                          ([
                          ],
                            .)),
                        Variable
                          ((188,
                            Effect
                              ([
                              ],
                                .)),
                            s1/0),
                        Variable
                          ((188,
                            Effect
                              ([
                              ],
                                .)),
                            s2/0)),
                    [
                      (Tuple
                        (Constructor
                          (Empty/0),
                          t2),
                        Variable
                          ((189,
                            Effect
                              ([
                              ],
                                .)),
                            t2/0));
                      (Tuple
                        (t1,
                          Constructor
                            (Empty/0)),
                        Variable
                          ((190,
                            Effect
                              ([
                              ],
                                .)),
                            t1/0));
                      (Tuple
                        (Constructor
                          (Node/0,
                            l1,
                            v1,
                            r1,
                            h1),
                          Constructor
                            (Node/0,
                              l2,
                              v2,
                              r2,
                              h2)),
                        IfThenElse
                          ((192,
                            Effect
                              ([
                                Counter/1;
                                NonTermination/1;
                                OCaml.Invalid_argument/1
                              ],
                                .)),
                            Apply
                              ((192,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Variable
                                  ((192,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    OCaml.Pervasives.ge/1),
                                [
                                  Variable
                                    ((192,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      h1/0);
                                  Variable
                                    ((192,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      h2/0)
                                ]),
                            IfThenElse
                              ((193,
                                Effect
                                  ([
                                    Counter/1;
                                    NonTermination/1;
                                    OCaml.Invalid_argument/1
                                  ],
                                    .)),
                                Apply
                                  ((193,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    Variable
                                      ((193,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        equiv_decb/1),
                                    [
                                      Variable
                                        ((193,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          h2/0);
                                      Constant
                                        ((193,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          Int(1))
                                    ]),
                                Apply
                                  ((193,
                                    Effect
                                      ([
                                        OCaml.Invalid_argument/1
                                      ],
                                        .)),
                                    Variable
                                      ((193,
                                        Effect
                                          ([
                                          ],
                                            .
                                              ->
                                              .
                                                -[
                                                  OCaml.Invalid_argument/1
                                                ]->
                                                .)),
                                        add/0),
                                    [
                                      Variable
                                        ((193,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          v2/0);
                                      Variable
                                        ((193,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          s1/0)
                                    ]),
                                Match
                                  ((193,
                                    Effect
                                      ([
                                        Counter/1;
                                        NonTermination/1;
                                        OCaml.Invalid_argument/1
                                      ],
                                        .)),
                                    Apply
                                      ((194,
                                        Effect
                                          ([
                                            Counter/1;
                                            NonTermination/1;
                                            OCaml.Invalid_argument/1
                                          ],
                                            .)),
                                        Variable
                                          ((194,
                                            Effect
                                              ([
                                              ],
                                                .
                                                  ->
                                                  .
                                                    -[
                                                      Counter/1;
                                                      NonTermination/1;
                                                      OCaml.Invalid_argument/1
                                                    ]->
                                                    .)),
                                            split/0),
                                        [
                                          Variable
                                            ((194,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              v1/0);
                                          Variable
                                            ((194,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              s2/0)
                                        ]),
                                    [
                                      (Tuple
                                        (l2,
                                          Any,
                                          r2),
                                        Apply
                                          ((195,
                                            Effect
                                              ([
                                                Counter/1;
                                                NonTermination/1;
                                                OCaml.Invalid_argument/1
                                              ],
                                                .)),
                                            Variable
                                              ((195,
                                                Effect
                                                  ([
                                                  ],
                                                    .
                                                      ->
                                                      .
                                                        ->
                                                        .
                                                          -[
                                                            Counter/1;
                                                            NonTermination/1;
                                                            OCaml.Invalid_argument/1
                                                          ]->
                                                          .)),
                                                join/0),
                                            [
                                              Apply
                                                ((195,
                                                  Effect
                                                    ([
                                                      Counter/1;
                                                      NonTermination/1;
                                                      OCaml.Invalid_argument/1
                                                    ],
                                                      .)),
                                                  Apply
                                                    ((?,
                                                      Effect
                                                        ([
                                                        ],
                                                          .
                                                            ->
                                                            .
                                                              -[
                                                                Counter/1;
                                                                NonTermination/1;
                                                                OCaml.Invalid_argument/1
                                                              ]->
                                                              .)),
                                                      Variable
                                                        ((?,
                                                          Effect
                                                            ([
                                                            ],
                                                              .
                                                                ->
                                                                .
                                                                  ->
                                                                  .
                                                                    -[
                                                                      Counter/1;
                                                                      NonTermination/1;
                                                                      OCaml.Invalid_argument/1
                                                                    ]->
                                                                    .)),
                                                          union_rec/0),
                                                      [
                                                        Variable
                                                          ((?,
                                                            Effect
                                                              ([
                                                              ],
                                                                .)),
                                                            counter/0)
                                                      ]),
                                                  [
                                                    Variable
                                                      ((195,
                                                        Effect
                                                          ([
                                                          ],
                                                            .)),
                                                        l1/0);
                                                    Variable
                                                      ((195,
                                                        Effect
                                                          ([
                                                          ],
                                                            .)),
                                                        l2/0)
                                                  ]);
                                              Variable
                                                ((195,
                                                  Effect
                                                    ([
                                                    ],
                                                      .)),
                                                  v1/0);
                                              Apply
                                                ((195,
                                                  Effect
                                                    ([
                                                      Counter/1;
                                                      NonTermination/1;
                                                      OCaml.Invalid_argument/1
                                                    ],
                                                      .)),
                                                  Apply
                                                    ((?,
                                                      Effect
                                                        ([
                                                        ],
                                                          .
                                                            ->
                                                            .
                                                              -[
                                                                Counter/1;
                                                                NonTermination/1;
                                                                OCaml.Invalid_argument/1
                                                              ]->
                                                              .)),
                                                      Variable
                                                        ((?,
                                                          Effect
                                                            ([
                                                            ],
                                                              .
                                                                ->
                                                                .
                                                                  ->
                                                                  .
                                                                    -[
                                                                      Counter/1;
                                                                      NonTermination/1;
                                                                      OCaml.Invalid_argument/1
                                                                    ]->
                                                                    .)),
                                                          union_rec/0),
                                                      [
                                                        Variable
                                                          ((?,
                                                            Effect
                                                              ([
                                                              ],
                                                                .)),
                                                            counter/0)
                                                      ]),
                                                  [
                                                    Variable
                                                      ((195,
                                                        Effect
                                                          ([
                                                          ],
                                                            .)),
                                                        r1/0);
                                                    Variable
                                                      ((195,
                                                        Effect
                                                          ([
                                                          ],
                                                            .)),
                                                        r2/0)
                                                  ])
                                            ]))
                                    ])),
                            IfThenElse
                              ((198,
                                Effect
                                  ([
                                    Counter/1;
                                    NonTermination/1;
                                    OCaml.Invalid_argument/1
                                  ],
                                    .)),
                                Apply
                                  ((198,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    Variable
                                      ((198,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        equiv_decb/1),
                                    [
                                      Variable
                                        ((198,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          h1/0);
                                      Constant
                                        ((198,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          Int(1))
                                    ]),
                                Apply
                                  ((198,
                                    Effect
                                      ([
                                        OCaml.Invalid_argument/1
                                      ],
                                        .)),
                                    Variable
                                      ((198,
                                        Effect
                                          ([
                                          ],
                                            .
                                              ->
                                              .
                                                -[
                                                  OCaml.Invalid_argument/1
                                                ]->
                                                .)),
                                        add/0),
                                    [
                                      Variable
                                        ((198,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          v1/0);
                                      Variable
                                        ((198,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          s2/0)
                                    ]),
                                Match
                                  ((198,
                                    Effect
                                      ([
                                        Counter/1;
                                        NonTermination/1;
                                        OCaml.Invalid_argument/1
                                      ],
                                        .)),
                                    Apply
                                      ((199,
                                        Effect
                                          ([
                                            Counter/1;
                                            NonTermination/1;
                                            OCaml.Invalid_argument/1
                                          ],
                                            .)),
                                        Variable
                                          ((199,
                                            Effect
                                              ([
                                              ],
                                                .
                                                  ->
                                                  .
                                                    -[
                                                      Counter/1;
                                                      NonTermination/1;
                                                      OCaml.Invalid_argument/1
                                                    ]->
                                                    .)),
                                            split/0),
                                        [
                                          Variable
                                            ((199,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              v2/0);
                                          Variable
                                            ((199,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              s1/0)
                                        ]),
                                    [
                                      (Tuple
                                        (l1,
                                          Any,
                                          r1),
                                        Apply
                                          ((200,
                                            Effect
                                              ([
                                                Counter/1;
                                                NonTermination/1;
                                                OCaml.Invalid_argument/1
                                              ],
                                                .)),
                                            Variable
                                              ((200,
                                                Effect
                                                  ([
                                                  ],
                                                    .
                                                      ->
                                                      .
                                                        ->
                                                        .
                                                          -[
                                                            Counter/1;
                                                            NonTermination/1;
                                                            OCaml.Invalid_argument/1
                                                          ]->
                                                          .)),
                                                join/0),
                                            [
                                              Apply
                                                ((200,
                                                  Effect
                                                    ([
                                                      Counter/1;
                                                      NonTermination/1;
                                                      OCaml.Invalid_argument/1
                                                    ],
                                                      .)),
                                                  Apply
                                                    ((?,
                                                      Effect
                                                        ([
                                                        ],
                                                          .
                                                            ->
                                                            .
                                                              -[
                                                                Counter/1;
                                                                NonTermination/1;
                                                                OCaml.Invalid_argument/1
                                                              ]->
                                                              .)),
                                                      Variable
                                                        ((?,
                                                          Effect
                                                            ([
                                                            ],
                                                              .
                                                                ->
                                                                .
                                                                  ->
                                                                  .
                                                                    -[
                                                                      Counter/1;
                                                                      NonTermination/1;
                                                                      OCaml.Invalid_argument/1
                                                                    ]->
                                                                    .)),
                                                          union_rec/0),
                                                      [
                                                        Variable
                                                          ((?,
                                                            Effect
                                                              ([
                                                              ],
                                                                .)),
                                                            counter/0)
                                                      ]),
                                                  [
                                                    Variable
                                                      ((200,
                                                        Effect
                                                          ([
                                                          ],
                                                            .)),
                                                        l1/0);
                                                    Variable
                                                      ((200,
                                                        Effect
                                                          ([
                                                          ],
                                                            .)),
                                                        l2/0)
                                                  ]);
                                              Variable
                                                ((200,
                                                  Effect
                                                    ([
                                                    ],
                                                      .)),
                                                  v2/0);
                                              Apply
                                                ((200,
                                                  Effect
                                                    ([
                                                      Counter/1;
                                                      NonTermination/1;
                                                      OCaml.Invalid_argument/1
                                                    ],
                                                      .)),
                                                  Apply
                                                    ((?,
                                                      Effect
                                                        ([
                                                        ],
                                                          .
                                                            ->
                                                            .
                                                              -[
                                                                Counter/1;
                                                                NonTermination/1;
                                                                OCaml.Invalid_argument/1
                                                              ]->
                                                              .)),
                                                      Variable
                                                        ((?,
                                                          Effect
                                                            ([
                                                            ],
                                                              .
                                                                ->
                                                                .
                                                                  ->
                                                                  .
                                                                    -[
                                                                      Counter/1;
                                                                      NonTermination/1;
                                                                      OCaml.Invalid_argument/1
                                                                    ]->
                                                                    .)),
                                                          union_rec/0),
                                                      [
                                                        Variable
                                                          ((?,
                                                            Effect
                                                              ([
                                                              ],
                                                                .)),
                                                            counter/0)
                                                      ]),
                                                  [
                                                    Variable
                                                      ((200,
                                                        Effect
                                                          ([
                                                          ],
                                                            .)),
                                                        r1/0);
                                                    Variable
                                                      ((200,
                                                        Effect
                                                          ([
                                                          ],
                                                            .)),
                                                        r2/0)
                                                  ])
                                            ]))
                                    ]))))
                    ]))
            ]))
    ])

187
Value
  (non_rec, @.,
    [
      ((union, [ ], [ (s1, Type (t/0)); (s2, Type (t/0)) ], Some Type (t/0)),
        Apply
          ((?,
            Effect
              ([ Counter/1; NonTermination/1; OCaml.Invalid_argument/1 ],
                .)),
            Variable
              ((?,
                Effect
                  ([ ],
                    . ->
                      . ->
                        .
                          -[
                            Counter/1;
                            NonTermination/1;
                            OCaml.Invalid_argument/1
                          ]-> .)), union_rec/0),
            [
              Apply
                ((?, Effect ([ Counter/1 ], .)),
                  Variable
                    ((?,
                      Effect
                        ([
                        ],
                          .
                            -[
                              Counter/1
                            ]->
                            .)),
                      read_counter/1),
                  [
                    Tuple
                      ((?,
                        Effect
                          ([
                          ],
                            .)))
                  ]);
              Variable ((?, Effect ([ ], .)), s1/0);
              Variable ((?, Effect ([ ], .)), s2/0)
            ]))
    ])

203
Value
  (rec, @coq_rec,
    [
      ((inter, [ ], [ (s1, Type (t/0)); (s2, Type (t/0)) ], Some Type (t/0)),
        Match
          ((204,
            Effect
              ([
                Counter/1;
                NonTermination/1;
                OCaml.Invalid_argument/1;
                OCaml.Not_found/1
              ], .)),
            Tuple
              ((204, Effect ([ ], .)),
                Variable ((204, Effect ([ ], .)), s1/0),
                Variable ((204, Effect ([ ], .)), s2/0)),
            [
              (Tuple (Constructor (Empty/0), t2),
                Constructor
                  ((205, Effect ([ ], .)),
                    Empty/0));
              (Tuple (t1, Constructor (Empty/0)),
                Constructor
                  ((206, Effect ([ ], .)),
                    Empty/0));
              (Tuple (Constructor (Node/0, l1, v1, r1, Any), t2),
                Match
                  ((208,
                    Effect
                      ([
                        Counter/1;
                        NonTermination/1;
                        OCaml.Invalid_argument/1;
                        OCaml.Not_found/1
                      ],
                        .)),
                    Apply
                      ((208,
                        Effect
                          ([
                            Counter/1;
                            NonTermination/1;
                            OCaml.Invalid_argument/1
                          ],
                            .)),
                        Variable
                          ((208,
                            Effect
                              ([
                              ],
                                .
                                  ->
                                  .
                                    -[
                                      Counter/1;
                                      NonTermination/1;
                                      OCaml.Invalid_argument/1
                                    ]->
                                    .)),
                            split/0),
                        [
                          Variable
                            ((208,
                              Effect
                                ([
                                ],
                                  .)),
                              v1/0);
                          Variable
                            ((208,
                              Effect
                                ([
                                ],
                                  .)),
                              t2/0)
                        ]),
                    [
                      (Tuple
                        (l2,
                          Constructor
                            (false/1),
                          r2),
                        Apply
                          ((210,
                            Effect
                              ([
                                Counter/1;
                                NonTermination/1;
                                OCaml.Invalid_argument/1;
                                OCaml.Not_found/1
                              ],
                                .)),
                            Variable
                              ((210,
                                Effect
                                  ([
                                  ],
                                    .
                                      ->
                                      .
                                        -[
                                          Counter/1;
                                          NonTermination/1;
                                          OCaml.Invalid_argument/1;
                                          OCaml.Not_found/1
                                        ]->
                                        .)),
                                concat/0),
                            [
                              Apply
                                ((210,
                                  Effect
                                    ([
                                      Counter/1;
                                      NonTermination/1;
                                      OCaml.Invalid_argument/1;
                                      OCaml.Not_found/1
                                    ],
                                      .)),
                                  Variable
                                    ((210,
                                      Effect
                                        ([
                                        ],
                                          .
                                            ->
                                            .
                                              -[
                                                Counter/1;
                                                NonTermination/1;
                                                OCaml.Invalid_argument/1;
                                                OCaml.Not_found/1
                                              ]->
                                              .)),
                                      inter/0),
                                  [
                                    Variable
                                      ((210,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        l1/0);
                                    Variable
                                      ((210,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        l2/0)
                                  ]);
                              Apply
                                ((210,
                                  Effect
                                    ([
                                      Counter/1;
                                      NonTermination/1;
                                      OCaml.Invalid_argument/1;
                                      OCaml.Not_found/1
                                    ],
                                      .)),
                                  Variable
                                    ((210,
                                      Effect
                                        ([
                                        ],
                                          .
                                            ->
                                            .
                                              -[
                                                Counter/1;
                                                NonTermination/1;
                                                OCaml.Invalid_argument/1;
                                                OCaml.Not_found/1
                                              ]->
                                              .)),
                                      inter/0),
                                  [
                                    Variable
                                      ((210,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        r1/0);
                                    Variable
                                      ((210,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        r2/0)
                                  ])
                            ]));
                      (Tuple
                        (l2,
                          Constructor
                            (true/1),
                          r2),
                        Apply
                          ((212,
                            Effect
                              ([
                                Counter/1;
                                NonTermination/1;
                                OCaml.Invalid_argument/1;
                                OCaml.Not_found/1
                              ],
                                .)),
                            Variable
                              ((212,
                                Effect
                                  ([
                                  ],
                                    .
                                      ->
                                      .
                                        ->
                                        .
                                          -[
                                            Counter/1;
                                            NonTermination/1;
                                            OCaml.Invalid_argument/1
                                          ]->
                                          .)),
                                join/0),
                            [
                              Apply
                                ((212,
                                  Effect
                                    ([
                                      Counter/1;
                                      NonTermination/1;
                                      OCaml.Invalid_argument/1;
                                      OCaml.Not_found/1
                                    ],
                                      .)),
                                  Variable
                                    ((212,
                                      Effect
                                        ([
                                        ],
                                          .
                                            ->
                                            .
                                              -[
                                                Counter/1;
                                                NonTermination/1;
                                                OCaml.Invalid_argument/1;
                                                OCaml.Not_found/1
                                              ]->
                                              .)),
                                      inter/0),
                                  [
                                    Variable
                                      ((212,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        l1/0);
                                    Variable
                                      ((212,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        l2/0)
                                  ]);
                              Variable
                                ((212,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  v1/0);
                              Apply
                                ((212,
                                  Effect
                                    ([
                                      Counter/1;
                                      NonTermination/1;
                                      OCaml.Invalid_argument/1;
                                      OCaml.Not_found/1
                                    ],
                                      .)),
                                  Variable
                                    ((212,
                                      Effect
                                        ([
                                        ],
                                          .
                                            ->
                                            .
                                              -[
                                                Counter/1;
                                                NonTermination/1;
                                                OCaml.Invalid_argument/1;
                                                OCaml.Not_found/1
                                              ]->
                                              .)),
                                      inter/0),
                                  [
                                    Variable
                                      ((212,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        r1/0);
                                    Variable
                                      ((212,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        r2/0)
                                  ])
                            ]))
                    ]))
            ]))
    ])

215
Value
  (rec, @coq_rec,
    [
      ((diff, [ ], [ (s1, Type (t/0)); (s2, Type (t/0)) ], Some Type (t/0)),
        Match
          ((216,
            Effect
              ([
                Counter/1;
                NonTermination/1;
                OCaml.Invalid_argument/1;
                OCaml.Not_found/1
              ], .)),
            Tuple
              ((216, Effect ([ ], .)),
                Variable ((216, Effect ([ ], .)), s1/0),
                Variable ((216, Effect ([ ], .)), s2/0)),
            [
              (Tuple (Constructor (Empty/0), t2),
                Constructor
                  ((217, Effect ([ ], .)),
                    Empty/0));
              (Tuple (t1, Constructor (Empty/0)),
                Variable ((218, Effect ([ ], .)), t1/0));
              (Tuple (Constructor (Node/0, l1, v1, r1, Any), t2),
                Match
                  ((220,
                    Effect
                      ([
                        Counter/1;
                        NonTermination/1;
                        OCaml.Invalid_argument/1;
                        OCaml.Not_found/1
                      ],
                        .)),
                    Apply
                      ((220,
                        Effect
                          ([
                            Counter/1;
                            NonTermination/1;
                            OCaml.Invalid_argument/1
                          ],
                            .)),
                        Variable
                          ((220,
                            Effect
                              ([
                              ],
                                .
                                  ->
                                  .
                                    -[
                                      Counter/1;
                                      NonTermination/1;
                                      OCaml.Invalid_argument/1
                                    ]->
                                    .)),
                            split/0),
                        [
                          Variable
                            ((220,
                              Effect
                                ([
                                ],
                                  .)),
                              v1/0);
                          Variable
                            ((220,
                              Effect
                                ([
                                ],
                                  .)),
                              t2/0)
                        ]),
                    [
                      (Tuple
                        (l2,
                          Constructor
                            (false/1),
                          r2),
                        Apply
                          ((222,
                            Effect
                              ([
                                Counter/1;
                                NonTermination/1;
                                OCaml.Invalid_argument/1;
                                OCaml.Not_found/1
                              ],
                                .)),
                            Variable
                              ((222,
                                Effect
                                  ([
                                  ],
                                    .
                                      ->
                                      .
                                        ->
                                        .
                                          -[
                                            Counter/1;
                                            NonTermination/1;
                                            OCaml.Invalid_argument/1
                                          ]->
                                          .)),
                                join/0),
                            [
                              Apply
                                ((222,
                                  Effect
                                    ([
                                      Counter/1;
                                      NonTermination/1;
                                      OCaml.Invalid_argument/1;
                                      OCaml.Not_found/1
                                    ],
                                      .)),
                                  Variable
                                    ((222,
                                      Effect
                                        ([
                                        ],
                                          .
                                            ->
                                            .
                                              -[
                                                Counter/1;
                                                NonTermination/1;
                                                OCaml.Invalid_argument/1;
                                                OCaml.Not_found/1
                                              ]->
                                              .)),
                                      diff/0),
                                  [
                                    Variable
                                      ((222,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        l1/0);
                                    Variable
                                      ((222,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        l2/0)
                                  ]);
                              Variable
                                ((222,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  v1/0);
                              Apply
                                ((222,
                                  Effect
                                    ([
                                      Counter/1;
                                      NonTermination/1;
                                      OCaml.Invalid_argument/1;
                                      OCaml.Not_found/1
                                    ],
                                      .)),
                                  Variable
                                    ((222,
                                      Effect
                                        ([
                                        ],
                                          .
                                            ->
                                            .
                                              -[
                                                Counter/1;
                                                NonTermination/1;
                                                OCaml.Invalid_argument/1;
                                                OCaml.Not_found/1
                                              ]->
                                              .)),
                                      diff/0),
                                  [
                                    Variable
                                      ((222,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        r1/0);
                                    Variable
                                      ((222,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        r2/0)
                                  ])
                            ]));
                      (Tuple
                        (l2,
                          Constructor
                            (true/1),
                          r2),
                        Apply
                          ((224,
                            Effect
                              ([
                                Counter/1;
                                NonTermination/1;
                                OCaml.Invalid_argument/1;
                                OCaml.Not_found/1
                              ],
                                .)),
                            Variable
                              ((224,
                                Effect
                                  ([
                                  ],
                                    .
                                      ->
                                      .
                                        -[
                                          Counter/1;
                                          NonTermination/1;
                                          OCaml.Invalid_argument/1;
                                          OCaml.Not_found/1
                                        ]->
                                        .)),
                                concat/0),
                            [
                              Apply
                                ((224,
                                  Effect
                                    ([
                                      Counter/1;
                                      NonTermination/1;
                                      OCaml.Invalid_argument/1;
                                      OCaml.Not_found/1
                                    ],
                                      .)),
                                  Variable
                                    ((224,
                                      Effect
                                        ([
                                        ],
                                          .
                                            ->
                                            .
                                              -[
                                                Counter/1;
                                                NonTermination/1;
                                                OCaml.Invalid_argument/1;
                                                OCaml.Not_found/1
                                              ]->
                                              .)),
                                      diff/0),
                                  [
                                    Variable
                                      ((224,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        l1/0);
                                    Variable
                                      ((224,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        l2/0)
                                  ]);
                              Apply
                                ((224,
                                  Effect
                                    ([
                                      Counter/1;
                                      NonTermination/1;
                                      OCaml.Invalid_argument/1;
                                      OCaml.Not_found/1
                                    ],
                                      .)),
                                  Variable
                                    ((224,
                                      Effect
                                        ([
                                        ],
                                          .
                                            ->
                                            .
                                              -[
                                                Counter/1;
                                                NonTermination/1;
                                                OCaml.Invalid_argument/1;
                                                OCaml.Not_found/1
                                              ]->
                                              .)),
                                      diff/0),
                                  [
                                    Variable
                                      ((224,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        r1/0);
                                    Variable
                                      ((224,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        r2/0)
                                  ])
                            ]))
                    ]))
            ]))
    ])

227
Inductive enumeration:
  ([ ],
    [ (End, [ ]); (More, [ Type (elt/0); Type (t/0); Type (enumeration/0) ]) ])

229
Value
  (rec, @coq_rec,
    [
      ((cons_enum, [ ], [ (s, Type (t/0)); (e, Type (enumeration/0)) ],
        Some Type (enumeration/0)),
        Match
          ((230, Effect ([ ], .)), Variable ((230, Effect ([ ], .)), s/0),
            [
              (Constructor (Empty/0),
                Variable ((231, Effect ([ ], .)), e/0));
              (Constructor (Node/0, l, v, r, Any),
                Apply
                  ((232, Effect ([ ], .)),
                    Variable
                      ((232,
                        Effect
                          ([
                          ],
                            .
                              ->
                              .
                                ->
                                .)),
                        cons_enum/0),
                    [
                      Variable
                        ((232,
                          Effect
                            ([
                            ],
                              .)),
                          l/0);
                      Constructor
                        ((232,
                          Effect
                            ([
                            ],
                              .)),
                          More/0,
                          Variable
                            ((232,
                              Effect
                                ([
                                ],
                                  .)),
                              v/0),
                          Variable
                            ((232,
                              Effect
                                ([
                                ],
                                  .)),
                              r/0),
                          Variable
                            ((232,
                              Effect
                                ([
                                ],
                                  .)),
                              e/0))
                    ]))
            ]))
    ])

235
Value
  (rec, @.,
    [
      ((compare_aux_rec, [ ],
        [
          (counter, Type (nat/1));
          (e1, Type (enumeration/0));
          (e2, Type (enumeration/0))
        ], Some Type (Z/1)),
        Match
          ((?, Effect ([ NonTermination/1 ], .)),
            Variable ((?, Effect ([ ], .)), counter/0),
            [
              (Constructor (O/1),
                Apply
                  ((?,
                    Effect
                      ([
                        NonTermination/1
                      ],
                        .)),
                    Variable
                      ((?,
                        Effect
                          ([
                          ],
                            .
                              -[
                                NonTermination/1
                              ]->
                              .)),
                        not_terminated/1),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)))
                    ]));
              (Constructor (S/1, counter),
                Match
                  ((236,
                    Effect
                      ([
                        NonTermination/1
                      ],
                        .)),
                    Tuple
                      ((236,
                        Effect
                          ([
                          ],
                            .)),
                        Variable
                          ((236,
                            Effect
                              ([
                              ],
                                .)),
                            e1/0),
                        Variable
                          ((236,
                            Effect
                              ([
                              ],
                                .)),
                            e2/0)),
                    [
                      (Tuple
                        (Constructor
                          (End/0),
                          Constructor
                            (End/0)),
                        Constant
                          ((237,
                            Effect
                              ([
                              ],
                                .)),
                            Int(0)));
                      (Tuple
                        (Constructor
                          (End/0),
                          Any),
                        Constant
                          ((238,
                            Effect
                              ([
                              ],
                                .)),
                            Int(-1)));
                      (Tuple
                        (Any,
                          Constructor
                            (End/0)),
                        Constant
                          ((239,
                            Effect
                              ([
                              ],
                                .)),
                            Int(1)));
                      (Tuple
                        (Constructor
                          (More/0,
                            v1,
                            r1,
                            e1),
                          Constructor
                            (More/0,
                              v2,
                              r2,
                              e2)),
                        LetVar
                          (241,
                            Effect
                              ([
                                NonTermination/1
                              ],
                                .))
                          c
                          =
                          Apply
                            ((241,
                              Effect
                                ([
                                ],
                                  .)),
                              Variable
                                ((241,
                                  Effect
                                    ([
                                    ],
                                      .
                                        ->
                                        .)),
                                  Ord.compare/0),
                              [
                                Variable
                                  ((241,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    v1/0);
                                Variable
                                  ((241,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    v2/0)
                              ])
                          in
                        IfThenElse
                          ((242,
                            Effect
                              ([
                                NonTermination/1
                              ],
                                .)),
                            Apply
                              ((242,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Variable
                                  ((242,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    nequiv_decb/1),
                                [
                                  Variable
                                    ((242,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      c/0);
                                  Constant
                                    ((242,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      Int(0))
                                ]),
                            Variable
                              ((243,
                                Effect
                                  ([
                                  ],
                                    .)),
                                c/0),
                            Apply
                              ((244,
                                Effect
                                  ([
                                    NonTermination/1
                                  ],
                                    .)),
                                Apply
                                  ((?,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .
                                            -[
                                              NonTermination/1
                                            ]->
                                            .)),
                                    Variable
                                      ((?,
                                        Effect
                                          ([
                                          ],
                                            .
                                              ->
                                              .
                                                ->
                                                .
                                                  -[
                                                    NonTermination/1
                                                  ]->
                                                  .)),
                                        compare_aux_rec/0),
                                    [
                                      Variable
                                        ((?,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          counter/0)
                                    ]),
                                [
                                  Apply
                                    ((244,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      Variable
                                        ((244,
                                          Effect
                                            ([
                                            ],
                                              .
                                                ->
                                                .
                                                  ->
                                                  .)),
                                          cons_enum/0),
                                      [
                                        Variable
                                          ((244,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            r1/0);
                                        Variable
                                          ((244,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            e1/0)
                                      ]);
                                  Apply
                                    ((244,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      Variable
                                        ((244,
                                          Effect
                                            ([
                                            ],
                                              .
                                                ->
                                                .
                                                  ->
                                                  .)),
                                          cons_enum/0),
                                      [
                                        Variable
                                          ((244,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            r2/0);
                                        Variable
                                          ((244,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            e2/0)
                                      ])
                                ])))
                    ]))
            ]))
    ])

235
Value
  (non_rec, @.,
    [
      ((compare_aux, [ ],
        [ (e1, Type (enumeration/0)); (e2, Type (enumeration/0)) ],
        Some Type (Z/1)),
        Apply
          ((?, Effect ([ Counter/1; NonTermination/1 ], .)),
            Variable
              ((?, Effect ([ ], . -> . -> . -[ NonTermination/1 ]-> .)),
                compare_aux_rec/0),
            [
              Apply
                ((?, Effect ([ Counter/1 ], .)),
                  Variable
                    ((?,
                      Effect
                        ([
                        ],
                          .
                            -[
                              Counter/1
                            ]->
                            .)),
                      read_counter/1),
                  [
                    Tuple
                      ((?,
                        Effect
                          ([
                          ],
                            .)))
                  ]);
              Variable ((?, Effect ([ ], .)), e1/0);
              Variable ((?, Effect ([ ], .)), e2/0)
            ]))
    ])

246
Value
  (non_rec, @.,
    [
      ((compare, [ ], [ (s1, Type (t/0)); (s2, Type (t/0)) ], Some Type (Z/1)),
        Apply
          ((247, Effect ([ Counter/1; NonTermination/1 ], .)),
            Variable
              ((247,
                Effect
                  ([ ], . -> . -[ Counter/1; NonTermination/1 ]-> .)),
                compare_aux/0),
            [
              Apply
                ((247, Effect ([ ], .)),
                  Variable
                    ((247,
                      Effect
                        ([
                        ],
                          .
                            ->
                            .
                              ->
                              .)),
                      cons_enum/0),
                  [
                    Variable
                      ((247,
                        Effect
                          ([
                          ],
                            .)),
                        s1/0);
                    Constructor
                      ((247,
                        Effect
                          ([
                          ],
                            .)),
                        End/0)
                  ]);
              Apply
                ((247, Effect ([ ], .)),
                  Variable
                    ((247,
                      Effect
                        ([
                        ],
                          .
                            ->
                            .
                              ->
                              .)),
                      cons_enum/0),
                  [
                    Variable
                      ((247,
                        Effect
                          ([
                          ],
                            .)),
                        s2/0);
                    Constructor
                      ((247,
                        Effect
                          ([
                          ],
                            .)),
                        End/0)
                  ])
            ]))
    ])

249
Value
  (non_rec, @.,
    [
      ((equal, [ ], [ (s1, Type (t/0)); (s2, Type (t/0)) ], Some Type (bool/1)),
        Apply
          ((250, Effect ([ Counter/1; NonTermination/1 ], .)),
            Variable ((250, Effect ([ ], .)), equiv_decb/1),
            [
              Apply
                ((250,
                  Effect
                    ([
                      Counter/1;
                      NonTermination/1
                    ], .)),
                  Variable
                    ((250,
                      Effect
                        ([
                        ],
                          .
                            ->
                            .
                              -[
                                Counter/1;
                                NonTermination/1
                              ]->
                              .)),
                      compare/0),
                  [
                    Variable
                      ((250,
                        Effect
                          ([
                          ],
                            .)),
                        s1/0);
                    Variable
                      ((250,
                        Effect
                          ([
                          ],
                            .)),
                        s2/0)
                  ]);
              Constant ((250, Effect ([ ], .)), Int(0))
            ]))
    ])

252
Value
  (rec, @.,
    [
      ((subset_rec, [ ],
        [ (counter, Type (nat/1)); (s1, Type (t/0)); (s2, Type (t/0)) ],
        Some Type (bool/1)),
        Match
          ((?, Effect ([ NonTermination/1 ], .)),
            Variable ((?, Effect ([ ], .)), counter/0),
            [
              (Constructor (O/1),
                Apply
                  ((?,
                    Effect
                      ([
                        NonTermination/1
                      ],
                        .)),
                    Variable
                      ((?,
                        Effect
                          ([
                          ],
                            .
                              -[
                                NonTermination/1
                              ]->
                              .)),
                        not_terminated/1),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)))
                    ]));
              (Constructor (S/1, counter),
                Match
                  ((253,
                    Effect
                      ([
                        NonTermination/1
                      ],
                        .)),
                    Tuple
                      ((253,
                        Effect
                          ([
                          ],
                            .)),
                        Variable
                          ((253,
                            Effect
                              ([
                              ],
                                .)),
                            s1/0),
                        Variable
                          ((253,
                            Effect
                              ([
                              ],
                                .)),
                            s2/0)),
                    [
                      (Tuple
                        (Constructor
                          (Empty/0),
                          Any),
                        Constructor
                          ((255,
                            Effect
                              ([
                              ],
                                .)),
                            true/1));
                      (Tuple
                        (Any,
                          Constructor
                            (Empty/0)),
                        Constructor
                          ((257,
                            Effect
                              ([
                              ],
                                .)),
                            false/1));
                      (Tuple
                        (Constructor
                          (Node/0,
                            l1,
                            v1,
                            r1,
                            Any),
                          Alias
                            (Constructor
                              (Node/0,
                                l2,
                                v2,
                                r2,
                                Any),
                              t2)),
                        LetVar
                          (259,
                            Effect
                              ([
                                NonTermination/1
                              ],
                                .))
                          c
                          =
                          Apply
                            ((259,
                              Effect
                                ([
                                ],
                                  .)),
                              Variable
                                ((259,
                                  Effect
                                    ([
                                    ],
                                      .
                                        ->
                                        .)),
                                  Ord.compare/0),
                              [
                                Variable
                                  ((259,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    v1/0);
                                Variable
                                  ((259,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    v2/0)
                              ])
                          in
                        IfThenElse
                          ((260,
                            Effect
                              ([
                                NonTermination/1
                              ],
                                .)),
                            Apply
                              ((260,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Variable
                                  ((260,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    equiv_decb/1),
                                [
                                  Variable
                                    ((260,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      c/0);
                                  Constant
                                    ((260,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      Int(0))
                                ]),
                            Apply
                              ((261,
                                Effect
                                  ([
                                    NonTermination/1
                                  ],
                                    .)),
                                Variable
                                  ((261,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    andb/1),
                                [
                                  Apply
                                    ((261,
                                      Effect
                                        ([
                                          NonTermination/1
                                        ],
                                          .)),
                                      Apply
                                        ((?,
                                          Effect
                                            ([
                                            ],
                                              .
                                                ->
                                                .
                                                  -[
                                                    NonTermination/1
                                                  ]->
                                                  .)),
                                          Variable
                                            ((?,
                                              Effect
                                                ([
                                                ],
                                                  .
                                                    ->
                                                    .
                                                      ->
                                                      .
                                                        -[
                                                          NonTermination/1
                                                        ]->
                                                        .)),
                                              subset_rec/0),
                                          [
                                            Variable
                                              ((?,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                counter/0)
                                          ]),
                                      [
                                        Variable
                                          ((261,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            l1/0);
                                        Variable
                                          ((261,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            l2/0)
                                      ]);
                                  Apply
                                    ((261,
                                      Effect
                                        ([
                                          NonTermination/1
                                        ],
                                          .)),
                                      Apply
                                        ((?,
                                          Effect
                                            ([
                                            ],
                                              .
                                                ->
                                                .
                                                  -[
                                                    NonTermination/1
                                                  ]->
                                                  .)),
                                          Variable
                                            ((?,
                                              Effect
                                                ([
                                                ],
                                                  .
                                                    ->
                                                    .
                                                      ->
                                                      .
                                                        -[
                                                          NonTermination/1
                                                        ]->
                                                        .)),
                                              subset_rec/0),
                                          [
                                            Variable
                                              ((?,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                counter/0)
                                          ]),
                                      [
                                        Variable
                                          ((261,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            r1/0);
                                        Variable
                                          ((261,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            r2/0)
                                      ])
                                ]),
                            IfThenElse
                              ((262,
                                Effect
                                  ([
                                    NonTermination/1
                                  ],
                                    .)),
                                Apply
                                  ((262,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    Variable
                                      ((262,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        OCaml.Pervasives.lt/1),
                                    [
                                      Variable
                                        ((262,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          c/0);
                                      Constant
                                        ((262,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          Int(0))
                                    ]),
                                Apply
                                  ((263,
                                    Effect
                                      ([
                                        NonTermination/1
                                      ],
                                        .)),
                                    Variable
                                      ((263,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        andb/1),
                                    [
                                      Apply
                                        ((263,
                                          Effect
                                            ([
                                              NonTermination/1
                                            ],
                                              .)),
                                          Apply
                                            ((?,
                                              Effect
                                                ([
                                                ],
                                                  .
                                                    ->
                                                    .
                                                      -[
                                                        NonTermination/1
                                                      ]->
                                                      .)),
                                              Variable
                                                ((?,
                                                  Effect
                                                    ([
                                                    ],
                                                      .
                                                        ->
                                                        .
                                                          ->
                                                          .
                                                            -[
                                                              NonTermination/1
                                                            ]->
                                                            .)),
                                                  subset_rec/0),
                                              [
                                                Variable
                                                  ((?,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    counter/0)
                                              ]),
                                          [
                                            Constructor
                                              ((263,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                Node/0,
                                                Variable
                                                  ((263,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    l1/0),
                                                Variable
                                                  ((263,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    v1/0),
                                                Constructor
                                                  ((263,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    Empty/0),
                                                Constant
                                                  ((263,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    Int(0)));
                                            Variable
                                              ((263,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                l2/0)
                                          ]);
                                      Apply
                                        ((263,
                                          Effect
                                            ([
                                              NonTermination/1
                                            ],
                                              .)),
                                          Apply
                                            ((?,
                                              Effect
                                                ([
                                                ],
                                                  .
                                                    ->
                                                    .
                                                      -[
                                                        NonTermination/1
                                                      ]->
                                                      .)),
                                              Variable
                                                ((?,
                                                  Effect
                                                    ([
                                                    ],
                                                      .
                                                        ->
                                                        .
                                                          ->
                                                          .
                                                            -[
                                                              NonTermination/1
                                                            ]->
                                                            .)),
                                                  subset_rec/0),
                                              [
                                                Variable
                                                  ((?,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    counter/0)
                                              ]),
                                          [
                                            Variable
                                              ((263,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                r1/0);
                                            Variable
                                              ((263,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                t2/0)
                                          ])
                                    ]),
                                Apply
                                  ((265,
                                    Effect
                                      ([
                                        NonTermination/1
                                      ],
                                        .)),
                                    Variable
                                      ((265,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        andb/1),
                                    [
                                      Apply
                                        ((265,
                                          Effect
                                            ([
                                              NonTermination/1
                                            ],
                                              .)),
                                          Apply
                                            ((?,
                                              Effect
                                                ([
                                                ],
                                                  .
                                                    ->
                                                    .
                                                      -[
                                                        NonTermination/1
                                                      ]->
                                                      .)),
                                              Variable
                                                ((?,
                                                  Effect
                                                    ([
                                                    ],
                                                      .
                                                        ->
                                                        .
                                                          ->
                                                          .
                                                            -[
                                                              NonTermination/1
                                                            ]->
                                                            .)),
                                                  subset_rec/0),
                                              [
                                                Variable
                                                  ((?,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    counter/0)
                                              ]),
                                          [
                                            Constructor
                                              ((265,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                Node/0,
                                                Constructor
                                                  ((265,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    Empty/0),
                                                Variable
                                                  ((265,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    v1/0),
                                                Variable
                                                  ((265,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    r1/0),
                                                Constant
                                                  ((265,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    Int(0)));
                                            Variable
                                              ((265,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                r2/0)
                                          ]);
                                      Apply
                                        ((265,
                                          Effect
                                            ([
                                              NonTermination/1
                                            ],
                                              .)),
                                          Apply
                                            ((?,
                                              Effect
                                                ([
                                                ],
                                                  .
                                                    ->
                                                    .
                                                      -[
                                                        NonTermination/1
                                                      ]->
                                                      .)),
                                              Variable
                                                ((?,
                                                  Effect
                                                    ([
                                                    ],
                                                      .
                                                        ->
                                                        .
                                                          ->
                                                          .
                                                            -[
                                                              NonTermination/1
                                                            ]->
                                                            .)),
                                                  subset_rec/0),
                                              [
                                                Variable
                                                  ((?,
                                                    Effect
                                                      ([
                                                      ],
                                                        .)),
                                                    counter/0)
                                              ]),
                                          [
                                            Variable
                                              ((265,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                l1/0);
                                            Variable
                                              ((265,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                t2/0)
                                          ])
                                    ]))))
                    ]))
            ]))
    ])

252
Value
  (non_rec, @.,
    [
      ((subset, [ ], [ (s1, Type (t/0)); (s2, Type (t/0)) ], Some Type (bool/1)),
        Apply
          ((?, Effect ([ Counter/1; NonTermination/1 ], .)),
            Variable
              ((?, Effect ([ ], . -> . -> . -[ NonTermination/1 ]-> .)),
                subset_rec/0),
            [
              Apply
                ((?, Effect ([ Counter/1 ], .)),
                  Variable
                    ((?,
                      Effect
                        ([
                        ],
                          .
                            -[
                              Counter/1
                            ]->
                            .)),
                      read_counter/1),
                  [
                    Tuple
                      ((?,
                        Effect
                          ([
                          ],
                            .)))
                  ]);
              Variable ((?, Effect ([ ], .)), s1/0);
              Variable ((?, Effect ([ ], .)), s2/0)
            ]))
    ])

267
Value
  (rec, @coq_rec,
    [
      ((iter, [ A ], [ (f, (Type (elt/0) -> A)); (x, Type (t/0)) ],
        Some Type (unit/1)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), x/0),
            [
              (Constructor (Empty/0),
                Constructor
                  ((268, Effect ([ ], .)),
                    tt/1));
              (Constructor (Node/0, l, v, r, Any),
                Sequence
                  ((269, Effect ([ ], .)),
                    Apply
                      ((269,
                        Effect
                          ([
                          ],
                            .)),
                        Variable
                          ((269,
                            Effect
                              ([
                              ],
                                .
                                  ->
                                  .
                                    ->
                                    .)),
                            iter/0),
                        [
                          Variable
                            ((269,
                              Effect
                                ([
                                ],
                                  .)),
                              f/0);
                          Variable
                            ((269,
                              Effect
                                ([
                                ],
                                  .)),
                              l/0)
                        ]),
                    Sequence
                      ((269,
                        Effect
                          ([
                          ],
                            .)),
                        Apply
                          ((269,
                            Effect
                              ([
                              ],
                                .)),
                            Variable
                              ((269,
                                Effect
                                  ([
                                  ],
                                    .)),
                                f/0),
                            [
                              Variable
                                ((269,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  v/0)
                            ]),
                        Apply
                          ((269,
                            Effect
                              ([
                              ],
                                .)),
                            Variable
                              ((269,
                                Effect
                                  ([
                                  ],
                                    .
                                      ->
                                      .
                                        ->
                                        .)),
                                iter/0),
                            [
                              Variable
                                ((269,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  f/0);
                              Variable
                                ((269,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  r/0)
                            ]))))
            ]))
    ])

272
Value
  (rec, @coq_rec,
    [
      ((fold, [ A ],
        [ (f, (Type (elt/0) -> (A -> A))); (s, Type (t/0)); (accu, A) ],
        Some A),
        Match
          ((273, Effect ([ ], .)), Variable ((273, Effect ([ ], .)), s/0),
            [
              (Constructor (Empty/0),
                Variable
                  ((274, Effect ([ ], .)),
                    accu/0));
              (Constructor (Node/0, l, v, r, Any),
                Apply
                  ((275, Effect ([ ], .)),
                    Variable
                      ((275,
                        Effect
                          ([
                          ],
                            .
                              ->
                              .
                                ->
                                .
                                  ->
                                  .)),
                        fold/0),
                    [
                      Variable
                        ((275,
                          Effect
                            ([
                            ],
                              .)),
                          f/0);
                      Variable
                        ((275,
                          Effect
                            ([
                            ],
                              .)),
                          r/0);
                      Apply
                        ((275,
                          Effect
                            ([
                            ],
                              .)),
                          Variable
                            ((275,
                              Effect
                                ([
                                ],
                                  .)),
                              f/0),
                          [
                            Variable
                              ((275,
                                Effect
                                  ([
                                  ],
                                    .)),
                                v/0);
                            Apply
                              ((275,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Variable
                                  ((275,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .
                                            ->
                                            .
                                              ->
                                              .)),
                                    fold/0),
                                [
                                  Variable
                                    ((275,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      f/0);
                                  Variable
                                    ((275,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      l/0);
                                  Variable
                                    ((275,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      accu/0)
                                ])
                          ])
                    ]))
            ]))
    ])

278
Value
  (rec, @coq_rec,
    [
      ((for_all, [ ], [ (p, (Type (elt/0) -> Type (bool/1))); (x, Type (t/0)) ],
        Some Type (bool/1)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), x/0),
            [
              (Constructor (Empty/0),
                Constructor
                  ((279, Effect ([ ], .)),
                    true/1));
              (Constructor (Node/0, l, v, r, Any),
                Apply
                  ((280, Effect ([ ], .)),
                    Variable
                      ((280,
                        Effect
                          ([
                          ],
                            .)),
                        andb/1),
                    [
                      Apply
                        ((280,
                          Effect
                            ([
                            ],
                              .)),
                          Variable
                            ((280,
                              Effect
                                ([
                                ],
                                  .)),
                              p/0),
                          [
                            Variable
                              ((280,
                                Effect
                                  ([
                                  ],
                                    .)),
                                v/0)
                          ]);
                      Apply
                        ((280,
                          Effect
                            ([
                            ],
                              .)),
                          Variable
                            ((280,
                              Effect
                                ([
                                ],
                                  .)),
                              andb/1),
                          [
                            Apply
                              ((280,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Variable
                                  ((280,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .
                                            ->
                                            .)),
                                    for_all/0),
                                [
                                  Variable
                                    ((280,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      p/0);
                                  Variable
                                    ((280,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      l/0)
                                ]);
                            Apply
                              ((280,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Variable
                                  ((280,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .
                                            ->
                                            .)),
                                    for_all/0),
                                [
                                  Variable
                                    ((280,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      p/0);
                                  Variable
                                    ((280,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      r/0)
                                ])
                          ])
                    ]))
            ]))
    ])

283
Value
  (rec, @coq_rec,
    [
      ((exists_, [ ], [ (p, (Type (elt/0) -> Type (bool/1))); (x, Type (t/0)) ],
        Some Type (bool/1)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), x/0),
            [
              (Constructor (Empty/0),
                Constructor
                  ((284, Effect ([ ], .)),
                    false/1));
              (Constructor (Node/0, l, v, r, Any),
                Apply
                  ((285, Effect ([ ], .)),
                    Variable
                      ((285,
                        Effect
                          ([
                          ],
                            .)),
                        orb/1),
                    [
                      Apply
                        ((285,
                          Effect
                            ([
                            ],
                              .)),
                          Variable
                            ((285,
                              Effect
                                ([
                                ],
                                  .)),
                              p/0),
                          [
                            Variable
                              ((285,
                                Effect
                                  ([
                                  ],
                                    .)),
                                v/0)
                          ]);
                      Apply
                        ((285,
                          Effect
                            ([
                            ],
                              .)),
                          Variable
                            ((285,
                              Effect
                                ([
                                ],
                                  .)),
                              orb/1),
                          [
                            Apply
                              ((285,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Variable
                                  ((285,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .
                                            ->
                                            .)),
                                    exists_/0),
                                [
                                  Variable
                                    ((285,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      p/0);
                                  Variable
                                    ((285,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      l/0)
                                ]);
                            Apply
                              ((285,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Variable
                                  ((285,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .
                                            ->
                                            .)),
                                    exists_/0),
                                [
                                  Variable
                                    ((285,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      p/0);
                                  Variable
                                    ((285,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      r/0)
                                ])
                          ])
                    ]))
            ]))
    ])

288
Value
  (rec, @coq_rec,
    [
      ((filter, [ ], [ (p, (Type (elt/0) -> Type (bool/1))); (x, Type (t/0)) ],
        Some Type (t/0)),
        Match
          ((?,
            Effect
              ([
                Counter/1;
                NonTermination/1;
                OCaml.Invalid_argument/1;
                OCaml.Not_found/1
              ], .)), Variable ((?, Effect ([ ], .)), x/0),
            [
              (Constructor (Empty/0),
                Constructor
                  ((289, Effect ([ ], .)),
                    Empty/0));
              (Constructor (Node/0, l, v, r, Any),
                LetVar
                  (292,
                    Effect
                      ([
                        Counter/1;
                        NonTermination/1;
                        OCaml.Invalid_argument/1;
                        OCaml.Not_found/1
                      ],
                        .))
                  l' =
                  Apply
                    ((292,
                      Effect
                        ([
                          Counter/1;
                          NonTermination/1;
                          OCaml.Invalid_argument/1;
                          OCaml.Not_found/1
                        ],
                          .)),
                      Variable
                        ((292,
                          Effect
                            ([
                            ],
                              .
                                ->
                                .
                                  -[
                                    Counter/1;
                                    NonTermination/1;
                                    OCaml.Invalid_argument/1;
                                    OCaml.Not_found/1
                                  ]->
                                  .)),
                          filter/0),
                      [
                        Variable
                          ((292,
                            Effect
                              ([
                              ],
                                .)),
                            p/0);
                        Variable
                          ((292,
                            Effect
                              ([
                              ],
                                .)),
                            l/0)
                      ])
                  in
                LetVar
                  (293,
                    Effect
                      ([
                        Counter/1;
                        NonTermination/1;
                        OCaml.Invalid_argument/1;
                        OCaml.Not_found/1
                      ],
                        .))
                  pv =
                  Apply
                    ((293,
                      Effect
                        ([
                        ],
                          .)),
                      Variable
                        ((293,
                          Effect
                            ([
                            ],
                              .)),
                          p/0),
                      [
                        Variable
                          ((293,
                            Effect
                              ([
                              ],
                                .)),
                            v/0)
                      ])
                  in
                LetVar
                  (294,
                    Effect
                      ([
                        Counter/1;
                        NonTermination/1;
                        OCaml.Invalid_argument/1;
                        OCaml.Not_found/1
                      ],
                        .))
                  r' =
                  Apply
                    ((294,
                      Effect
                        ([
                          Counter/1;
                          NonTermination/1;
                          OCaml.Invalid_argument/1;
                          OCaml.Not_found/1
                        ],
                          .)),
                      Variable
                        ((294,
                          Effect
                            ([
                            ],
                              .
                                ->
                                .
                                  -[
                                    Counter/1;
                                    NonTermination/1;
                                    OCaml.Invalid_argument/1;
                                    OCaml.Not_found/1
                                  ]->
                                  .)),
                          filter/0),
                      [
                        Variable
                          ((294,
                            Effect
                              ([
                              ],
                                .)),
                            p/0);
                        Variable
                          ((294,
                            Effect
                              ([
                              ],
                                .)),
                            r/0)
                      ])
                  in
                IfThenElse
                  ((295,
                    Effect
                      ([
                        Counter/1;
                        NonTermination/1;
                        OCaml.Invalid_argument/1;
                        OCaml.Not_found/1
                      ],
                        .)),
                    Variable
                      ((295,
                        Effect
                          ([
                          ],
                            .)),
                        pv/0),
                    Apply
                      ((295,
                        Effect
                          ([
                            Counter/1;
                            NonTermination/1;
                            OCaml.Invalid_argument/1
                          ],
                            .)),
                        Variable
                          ((295,
                            Effect
                              ([
                              ],
                                .
                                  ->
                                  .
                                    ->
                                    .
                                      -[
                                        Counter/1;
                                        NonTermination/1;
                                        OCaml.Invalid_argument/1
                                      ]->
                                      .)),
                            join/0),
                        [
                          Variable
                            ((295,
                              Effect
                                ([
                                ],
                                  .)),
                              l'/0);
                          Variable
                            ((295,
                              Effect
                                ([
                                ],
                                  .)),
                              v/0);
                          Variable
                            ((295,
                              Effect
                                ([
                                ],
                                  .)),
                              r'/0)
                        ]),
                    Apply
                      ((295,
                        Effect
                          ([
                            Counter/1;
                            NonTermination/1;
                            OCaml.Invalid_argument/1;
                            OCaml.Not_found/1
                          ],
                            .)),
                        Variable
                          ((295,
                            Effect
                              ([
                              ],
                                .
                                  ->
                                  .
                                    -[
                                      Counter/1;
                                      NonTermination/1;
                                      OCaml.Invalid_argument/1;
                                      OCaml.Not_found/1
                                    ]->
                                    .)),
                            concat/0),
                        [
                          Variable
                            ((295,
                              Effect
                                ([
                                ],
                                  .)),
                              l'/0);
                          Variable
                            ((295,
                              Effect
                                ([
                                ],
                                  .)),
                              r'/0)
                        ])))
            ]))
    ])

298
Value
  (rec, @coq_rec,
    [
      ((partition, [ ],
        [ (p, (Type (elt/0) -> Type (bool/1))); (x, Type (t/0)) ],
        Some (Type (t/0) * Type (t/0))),
        Match
          ((?,
            Effect
              ([
                Counter/1;
                NonTermination/1;
                OCaml.Invalid_argument/1;
                OCaml.Not_found/1
              ], .)), Variable ((?, Effect ([ ], .)), x/0),
            [
              (Constructor (Empty/0),
                Tuple
                  ((299, Effect ([ ], .)),
                    Constructor
                      ((299,
                        Effect
                          ([
                          ],
                            .)),
                        Empty/0),
                    Constructor
                      ((299,
                        Effect
                          ([
                          ],
                            .)),
                        Empty/0)));
              (Constructor (Node/0, l, v, r, Any),
                Match
                  ((302,
                    Effect
                      ([
                        Counter/1;
                        NonTermination/1;
                        OCaml.Invalid_argument/1;
                        OCaml.Not_found/1
                      ],
                        .)),
                    Apply
                      ((302,
                        Effect
                          ([
                            Counter/1;
                            NonTermination/1;
                            OCaml.Invalid_argument/1;
                            OCaml.Not_found/1
                          ],
                            .)),
                        Variable
                          ((302,
                            Effect
                              ([
                              ],
                                .
                                  ->
                                  .
                                    -[
                                      Counter/1;
                                      NonTermination/1;
                                      OCaml.Invalid_argument/1;
                                      OCaml.Not_found/1
                                    ]->
                                    .)),
                            partition/0),
                        [
                          Variable
                            ((302,
                              Effect
                                ([
                                ],
                                  .)),
                              p/0);
                          Variable
                            ((302,
                              Effect
                                ([
                                ],
                                  .)),
                              l/0)
                        ]),
                    [
                      (Tuple
                        (lt,
                          lf),
                        LetVar
                          (303,
                            Effect
                              ([
                                Counter/1;
                                NonTermination/1;
                                OCaml.Invalid_argument/1;
                                OCaml.Not_found/1
                              ],
                                .))
                          pv
                          =
                          Apply
                            ((303,
                              Effect
                                ([
                                ],
                                  .)),
                              Variable
                                ((303,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  p/0),
                              [
                                Variable
                                  ((303,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    v/0)
                              ])
                          in
                        Match
                          ((304,
                            Effect
                              ([
                                Counter/1;
                                NonTermination/1;
                                OCaml.Invalid_argument/1;
                                OCaml.Not_found/1
                              ],
                                .)),
                            Apply
                              ((304,
                                Effect
                                  ([
                                    Counter/1;
                                    NonTermination/1;
                                    OCaml.Invalid_argument/1;
                                    OCaml.Not_found/1
                                  ],
                                    .)),
                                Variable
                                  ((304,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .
                                            -[
                                              Counter/1;
                                              NonTermination/1;
                                              OCaml.Invalid_argument/1;
                                              OCaml.Not_found/1
                                            ]->
                                            .)),
                                    partition/0),
                                [
                                  Variable
                                    ((304,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      p/0);
                                  Variable
                                    ((304,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      r/0)
                                ]),
                            [
                              (Tuple
                                (rt,
                                  rf),
                                IfThenElse
                                  ((305,
                                    Effect
                                      ([
                                        Counter/1;
                                        NonTermination/1;
                                        OCaml.Invalid_argument/1;
                                        OCaml.Not_found/1
                                      ],
                                        .)),
                                    Variable
                                      ((305,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        pv/0),
                                    Tuple
                                      ((306,
                                        Effect
                                          ([
                                            Counter/1;
                                            NonTermination/1;
                                            OCaml.Invalid_argument/1;
                                            OCaml.Not_found/1
                                          ],
                                            .)),
                                        Apply
                                          ((306,
                                            Effect
                                              ([
                                                Counter/1;
                                                NonTermination/1;
                                                OCaml.Invalid_argument/1
                                              ],
                                                .)),
                                            Variable
                                              ((306,
                                                Effect
                                                  ([
                                                  ],
                                                    .
                                                      ->
                                                      .
                                                        ->
                                                        .
                                                          -[
                                                            Counter/1;
                                                            NonTermination/1;
                                                            OCaml.Invalid_argument/1
                                                          ]->
                                                          .)),
                                                join/0),
                                            [
                                              Variable
                                                ((306,
                                                  Effect
                                                    ([
                                                    ],
                                                      .)),
                                                  lt/0);
                                              Variable
                                                ((306,
                                                  Effect
                                                    ([
                                                    ],
                                                      .)),
                                                  v/0);
                                              Variable
                                                ((306,
                                                  Effect
                                                    ([
                                                    ],
                                                      .)),
                                                  rt/0)
                                            ]),
                                        Apply
                                          ((306,
                                            Effect
                                              ([
                                                Counter/1;
                                                NonTermination/1;
                                                OCaml.Invalid_argument/1;
                                                OCaml.Not_found/1
                                              ],
                                                .)),
                                            Variable
                                              ((306,
                                                Effect
                                                  ([
                                                  ],
                                                    .
                                                      ->
                                                      .
                                                        -[
                                                          Counter/1;
                                                          NonTermination/1;
                                                          OCaml.Invalid_argument/1;
                                                          OCaml.Not_found/1
                                                        ]->
                                                        .)),
                                                concat/0),
                                            [
                                              Variable
                                                ((306,
                                                  Effect
                                                    ([
                                                    ],
                                                      .)),
                                                  lf/0);
                                              Variable
                                                ((306,
                                                  Effect
                                                    ([
                                                    ],
                                                      .)),
                                                  rf/0)
                                            ])),
                                    Tuple
                                      ((307,
                                        Effect
                                          ([
                                            Counter/1;
                                            NonTermination/1;
                                            OCaml.Invalid_argument/1;
                                            OCaml.Not_found/1
                                          ],
                                            .)),
                                        Apply
                                          ((307,
                                            Effect
                                              ([
                                                Counter/1;
                                                NonTermination/1;
                                                OCaml.Invalid_argument/1;
                                                OCaml.Not_found/1
                                              ],
                                                .)),
                                            Variable
                                              ((307,
                                                Effect
                                                  ([
                                                  ],
                                                    .
                                                      ->
                                                      .
                                                        -[
                                                          Counter/1;
                                                          NonTermination/1;
                                                          OCaml.Invalid_argument/1;
                                                          OCaml.Not_found/1
                                                        ]->
                                                        .)),
                                                concat/0),
                                            [
                                              Variable
                                                ((307,
                                                  Effect
                                                    ([
                                                    ],
                                                      .)),
                                                  lt/0);
                                              Variable
                                                ((307,
                                                  Effect
                                                    ([
                                                    ],
                                                      .)),
                                                  rt/0)
                                            ]),
                                        Apply
                                          ((307,
                                            Effect
                                              ([
                                                Counter/1;
                                                NonTermination/1;
                                                OCaml.Invalid_argument/1
                                              ],
                                                .)),
                                            Variable
                                              ((307,
                                                Effect
                                                  ([
                                                  ],
                                                    .
                                                      ->
                                                      .
                                                        ->
                                                        .
                                                          -[
                                                            Counter/1;
                                                            NonTermination/1;
                                                            OCaml.Invalid_argument/1
                                                          ]->
                                                          .)),
                                                join/0),
                                            [
                                              Variable
                                                ((307,
                                                  Effect
                                                    ([
                                                    ],
                                                      .)),
                                                  lf/0);
                                              Variable
                                                ((307,
                                                  Effect
                                                    ([
                                                    ],
                                                      .)),
                                                  v/0);
                                              Variable
                                                ((307,
                                                  Effect
                                                    ([
                                                    ],
                                                      .)),
                                                  rf/0)
                                            ]))))
                            ]))
                    ]))
            ]))
    ])

310
Value
  (rec, @coq_rec,
    [
      ((cardinal, [ ], [ (x, Type (t/0)) ], Some Type (Z/1)),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), x/0),
            [
              (Constructor (Empty/0),
                Constant
                  ((311, Effect ([ ], .)),
                    Int(0)));
              (Constructor (Node/0, l, v, r, Any),
                Apply
                  ((312, Effect ([ ], .)),
                    Variable
                      ((312,
                        Effect
                          ([
                          ],
                            .)),
                        Z.add/1),
                    [
                      Apply
                        ((312,
                          Effect
                            ([
                            ],
                              .)),
                          Variable
                            ((312,
                              Effect
                                ([
                                ],
                                  .)),
                              Z.add/1),
                          [
                            Apply
                              ((312,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Variable
                                  ((312,
                                    Effect
                                      ([
                                      ],
                                        .
                                          ->
                                          .)),
                                    cardinal/0),
                                [
                                  Variable
                                    ((312,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      l/0)
                                ]);
                            Constant
                              ((312,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Int(1))
                          ]);
                      Apply
                        ((312,
                          Effect
                            ([
                            ],
                              .)),
                          Variable
                            ((312,
                              Effect
                                ([
                                ],
                                  .
                                    ->
                                    .)),
                              cardinal/0),
                          [
                            Variable
                              ((312,
                                Effect
                                  ([
                                  ],
                                    .)),
                                r/0)
                          ])
                    ]))
            ]))
    ])

315
Value
  (rec, @coq_rec,
    [
      ((elements_aux, [ ],
        [ (accu, Type (list/1, Type (elt/0))); (x, Type (t/0)) ],
        Some Type (list/1, Type (elt/0))),
        Match
          ((?, Effect ([ ], .)), Variable ((?, Effect ([ ], .)), x/0),
            [
              (Constructor (Empty/0),
                Variable
                  ((316, Effect ([ ], .)),
                    accu/0));
              (Constructor (Node/0, l, v, r, Any),
                Apply
                  ((317, Effect ([ ], .)),
                    Variable
                      ((317,
                        Effect
                          ([
                          ],
                            .
                              ->
                              .
                                ->
                                .)),
                        elements_aux/0),
                    [
                      Constructor
                        ((317,
                          Effect
                            ([
                            ],
                              .)),
                          cons/1,
                          Variable
                            ((317,
                              Effect
                                ([
                                ],
                                  .)),
                              v/0),
                          Apply
                            ((317,
                              Effect
                                ([
                                ],
                                  .)),
                              Variable
                                ((317,
                                  Effect
                                    ([
                                    ],
                                      .
                                        ->
                                        .
                                          ->
                                          .)),
                                  elements_aux/0),
                              [
                                Variable
                                  ((317,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    accu/0);
                                Variable
                                  ((317,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    r/0)
                              ]));
                      Variable
                        ((317,
                          Effect
                            ([
                            ],
                              .)),
                          l/0)
                    ]))
            ]))
    ])

320
Value
  (non_rec, @.,
    [
      ((elements, [ ], [ (s, Type (t/0)) ], Some Type (list/1, Type (elt/0))),
        Apply
          ((321, Effect ([ ], .)),
            Variable ((321, Effect ([ ], . -> . -> .)), elements_aux/0),
            [
              Constructor ((321, Effect ([ ], .)), []/1);
              Variable ((321, Effect ([ ], .)), s/0)
            ]))
    ])

323
Value
  (non_rec, @.,
    [
      ((choose, [ ], [ ], Some (Type (t/0) -> Type (elt/0))),
        Variable
          ((323, Effect ([ ], . -[ OCaml.Not_found/1 ]-> .)), min_elt/0))
    ])

325
Value
  (rec, @coq_rec,
    [
      ((find, [ ], [ (x, Type (Ord.t/0)); (x_1, Type (t/0)) ], Some Type (elt/0)),
        Match
          ((?, Effect ([ OCaml.Not_found/1 ], .)),
            Variable ((?, Effect ([ ], .)), x_1/0),
            [
              (Constructor (Empty/0),
                Apply
                  ((326,
                    Effect
                      ([
                        OCaml.Not_found/1
                      ],
                        .)),
                    Variable
                      ((326,
                        Effect
                          ([
                          ],
                            .
                              -[
                                OCaml.Not_found/1
                              ]->
                              .)),
                        OCaml.raise_Not_found/1),
                    [
                      Tuple
                        ((?,
                          Effect
                            ([
                            ],
                              .)))
                    ]));
              (Constructor (Node/0, l, v, r, Any),
                LetVar
                  (328,
                    Effect
                      ([
                        OCaml.Not_found/1
                      ],
                        .))
                  c =
                  Apply
                    ((328,
                      Effect
                        ([
                        ],
                          .)),
                      Variable
                        ((328,
                          Effect
                            ([
                            ],
                              .
                                ->
                                .)),
                          Ord.compare/0),
                      [
                        Variable
                          ((328,
                            Effect
                              ([
                              ],
                                .)),
                            x/0);
                        Variable
                          ((328,
                            Effect
                              ([
                              ],
                                .)),
                            v/0)
                      ])
                  in
                IfThenElse
                  ((329,
                    Effect
                      ([
                        OCaml.Not_found/1
                      ],
                        .)),
                    Apply
                      ((329,
                        Effect
                          ([
                          ],
                            .)),
                        Variable
                          ((329,
                            Effect
                              ([
                              ],
                                .)),
                            equiv_decb/1),
                        [
                          Variable
                            ((329,
                              Effect
                                ([
                                ],
                                  .)),
                              c/0);
                          Constant
                            ((329,
                              Effect
                                ([
                                ],
                                  .)),
                              Int(0))
                        ]),
                    Variable
                      ((329,
                        Effect
                          ([
                          ],
                            .)),
                        v/0),
                    Apply
                      ((330,
                        Effect
                          ([
                            OCaml.Not_found/1
                          ],
                            .)),
                        Variable
                          ((330,
                            Effect
                              ([
                              ],
                                .
                                  ->
                                  .
                                    -[
                                      OCaml.Not_found/1
                                    ]->
                                    .)),
                            find/0),
                        [
                          Variable
                            ((330,
                              Effect
                                ([
                                ],
                                  .)),
                              x/0);
                          IfThenElse
                            ((330,
                              Effect
                                ([
                                ],
                                  .)),
                              Apply
                                ((330,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  Variable
                                    ((330,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      OCaml.Pervasives.lt/1),
                                  [
                                    Variable
                                      ((330,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        c/0);
                                    Constant
                                      ((330,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        Int(0))
                                  ]),
                              Variable
                                ((330,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  l/0),
                              Variable
                                ((330,
                                  Effect
                                    ([
                                    ],
                                      .)),
                                  r/0))
                        ])))
            ]))
    ])

333
Value
  (non_rec, @.,
    [
      ((of_sorted_list, [ ], [ (l, Type (list/1, Type (elt/0))) ],
        Some Type (t/0)),
        LetFun
          (334,
            Effect
              ([ Counter/1; NonTermination/1; OCaml.Assert_failure/1 ],
                .))
          (rec, @.,
            [
              ((sub_rec, [ ],
                [
                  (counter, Type (nat/1));
                  (n, Type (Z/1));
                  (l,
                    Type
                      (list/1,
                        Type
                          (elt/0)))
                ],
                Some
                  (Type (t/0) *
                    Type
                      (list/1,
                        Type
                          (elt/0)))),
                Match
                  ((?,
                    Effect
                      ([
                        NonTermination/1;
                        OCaml.Assert_failure/1
                      ],
                        .)),
                    Variable
                      ((?,
                        Effect
                          ([
                          ],
                            .)),
                        counter/0),
                    [
                      (Constructor
                        (O/1),
                        Apply
                          ((?,
                            Effect
                              ([
                                NonTermination/1
                              ],
                                .)),
                            Variable
                              ((?,
                                Effect
                                  ([
                                  ],
                                    .
                                      -[
                                        NonTermination/1
                                      ]->
                                      .)),
                                not_terminated/1),
                            [
                              Tuple
                                ((?,
                                  Effect
                                    ([
                                    ],
                                      .)))
                            ]));
                      (Constructor
                        (S/1,
                          counter),
                        Match
                          ((335,
                            Effect
                              ([
                                NonTermination/1;
                                OCaml.Assert_failure/1
                              ],
                                .)),
                            Tuple
                              ((335,
                                Effect
                                  ([
                                  ],
                                    .)),
                                Variable
                                  ((335,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    n/0),
                                Variable
                                  ((335,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    l/0)),
                            [
                              (Tuple
                                (Int(0),
                                  l),
                                Tuple
                                  ((336,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    Constructor
                                      ((336,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        Empty/0),
                                    Variable
                                      ((336,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        l/0)));
                              (Tuple
                                (Int(1),
                                  Constructor
                                    (cons/1,
                                      x0,
                                      l)),
                                Tuple
                                  ((337,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    Constructor
                                      ((337,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        Node/0,
                                        Constructor
                                          ((337,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            Empty/0),
                                        Variable
                                          ((337,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            x0/0),
                                        Constructor
                                          ((337,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            Empty/0),
                                        Constant
                                          ((337,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            Int(1))),
                                    Variable
                                      ((337,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        l/0)));
                              (Tuple
                                (Int(2),
                                  Constructor
                                    (cons/1,
                                      x0,
                                      Constructor
                                        (cons/1,
                                          x1,
                                          l))),
                                Tuple
                                  ((338,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    Constructor
                                      ((338,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        Node/0,
                                        Constructor
                                          ((338,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            Node/0,
                                            Constructor
                                              ((338,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                Empty/0),
                                            Variable
                                              ((338,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                x0/0),
                                            Constructor
                                              ((338,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                Empty/0),
                                            Constant
                                              ((338,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                Int(1))),
                                        Variable
                                          ((338,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            x1/0),
                                        Constructor
                                          ((338,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            Empty/0),
                                        Constant
                                          ((338,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            Int(2))),
                                    Variable
                                      ((338,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        l/0)));
                              (Tuple
                                (Int(3),
                                  Constructor
                                    (cons/1,
                                      x0,
                                      Constructor
                                        (cons/1,
                                          x1,
                                          Constructor
                                            (cons/1,
                                              x2,
                                              l)))),
                                Tuple
                                  ((339,
                                    Effect
                                      ([
                                      ],
                                        .)),
                                    Constructor
                                      ((339,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        Node/0,
                                        Constructor
                                          ((339,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            Node/0,
                                            Constructor
                                              ((339,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                Empty/0),
                                            Variable
                                              ((339,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                x0/0),
                                            Constructor
                                              ((339,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                Empty/0),
                                            Constant
                                              ((339,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                Int(1))),
                                        Variable
                                          ((339,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            x1/0),
                                        Constructor
                                          ((339,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            Node/0,
                                            Constructor
                                              ((339,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                Empty/0),
                                            Variable
                                              ((339,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                x2/0),
                                            Constructor
                                              ((339,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                Empty/0),
                                            Constant
                                              ((339,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                Int(1))),
                                        Constant
                                          ((339,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            Int(2))),
                                    Variable
                                      ((339,
                                        Effect
                                          ([
                                          ],
                                            .)),
                                        l/0)));
                              (Tuple
                                (n,
                                  l),
                                LetVar
                                  (341,
                                    Effect
                                      ([
                                        NonTermination/1;
                                        OCaml.Assert_failure/1
                                      ],
                                        .))
                                  nl
                                  =
                                  Apply
                                    ((341,
                                      Effect
                                        ([
                                        ],
                                          .)),
                                      Variable
                                        ((341,
                                          Effect
                                            ([
                                            ],
                                              .)),
                                          Z.div/1),
                                      [
                                        Variable
                                          ((341,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            n/0);
                                        Constant
                                          ((341,
                                            Effect
                                              ([
                                              ],
                                                .)),
                                            Int(2))
                                      ])
                                  in
                                Match
                                  ((342,
                                    Effect
                                      ([
                                        NonTermination/1;
                                        OCaml.Assert_failure/1
                                      ],
                                        .)),
                                    Apply
                                      ((342,
                                        Effect
                                          ([
                                            NonTermination/1;
                                            OCaml.Assert_failure/1
                                          ],
                                            .)),
                                        Apply
                                          ((?,
                                            Effect
                                              ([
                                              ],
                                                .
                                                  ->
                                                  .
                                                    -[
                                                      NonTermination/1;
                                                      OCaml.Assert_failure/1
                                                    ]->
                                                    .)),
                                            Variable
                                              ((?,
                                                Effect
                                                  ([
                                                  ],
                                                    .
                                                      ->
                                                      .
                                                        ->
                                                        .
                                                          -[
                                                            NonTermination/1;
                                                            OCaml.Assert_failure/1
                                                          ]->
                                                          .)),
                                                sub_rec/0),
                                            [
                                              Variable
                                                ((?,
                                                  Effect
                                                    ([
                                                    ],
                                                      .)),
                                                  counter/0)
                                            ]),
                                        [
                                          Variable
                                            ((342,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              nl/0);
                                          Variable
                                            ((342,
                                              Effect
                                                ([
                                                ],
                                                  .)),
                                              l/0)
                                        ]),
                                    [
                                      (Tuple
                                        (left_,
                                          l),
                                        Match
                                          ((343,
                                            Effect
                                              ([
                                                NonTermination/1;
                                                OCaml.Assert_failure/1
                                              ],
                                                .)),
                                            Variable
                                              ((343,
                                                Effect
                                                  ([
                                                  ],
                                                    .)),
                                                l/0),
                                            [
                                              (Constructor
                                                ([]/1),
                                                Apply
                                                  ((344,
                                                    Effect
                                                      ([
                                                        OCaml.Assert_failure/1
                                                      ],
                                                        .)),
                                                    Variable
                                                      ((344,
                                                        Effect
                                                          ([
                                                          ],
                                                            .
                                                              -[
                                                                OCaml.Assert_failure/1
                                                              ]->
                                                              .)),
                                                        OCaml.assert/1),
                                                    [
                                                      Constructor
                                                        ((344,
                                                          Effect
                                                            ([
                                                            ],
                                                              .)),
                                                          false/1)
                                                    ]));
                                              (Constructor
                                                (cons/1,
                                                  mid,
                                                  l),
                                                Match
                                                  ((346,
                                                    Effect
                                                      ([
                                                        NonTermination/1;
                                                        OCaml.Assert_failure/1
                                                      ],
                                                        .)),
                                                    Apply
                                                      ((346,
                                                        Effect
                                                          ([
                                                            NonTermination/1;
                                                            OCaml.Assert_failure/1
                                                          ],
                                                            .)),
                                                        Apply
                                                          ((?,
                                                            Effect
                                                              ([
                                                              ],
                                                                .
                                                                  ->
                                                                  .
                                                                    -[
                                                                      NonTermination/1;
                                                                      OCaml.Assert_failure/1
                                                                    ]->
                                                                    .)),
                                                            Variable
                                                              ((?,
                                                                Effect
                                                                  ([
                                                                  ],
                                                                    .
                                                                      ->
                                                                      .
                                                                        ->
                                                                        .
                                                                          -[
                                                                            NonTermination/1;
                                                                            OCaml.Assert_failure/1
                                                                          ]->
                                                                          .)),
                                                                sub_rec/0),
                                                            [
                                                              Variable
                                                                ((?,
                                                                  Effect
                                                                    ([
                                                                    ],
                                                                      .)),
                                                                  counter/0)
                                                            ]),
                                                        [
                                                          Apply
                                                            ((346,
                                                              Effect
                                                                ([
                                                                ],
                                                                  .)),
                                                              Variable
                                                                ((346,
                                                                  Effect
                                                                    ([
                                                                    ],
                                                                      .)),
                                                                  Z.sub/1),
                                                              [
                                                                Apply
                                                                  ((346,
                                                                    Effect
                                                                      ([
                                                                      ],
                                                                        .)),
                                                                    Variable
                                                                      ((346,
                                                                        Effect
                                                                          ([
                                                                          ],
                                                                            .)),
                                                                        Z.sub/1),
                                                                    [
                                                                      Variable
                                                                        ((346,
                                                                          Effect
                                                                            ([
                                                                            ],
                                                                              .)),
                                                                          n/0);
                                                                      Variable
                                                                        ((346,
                                                                          Effect
                                                                            ([
                                                                            ],
                                                                              .)),
                                                                          nl/0)
                                                                    ]);
                                                                Constant
                                                                  ((346,
                                                                    Effect
                                                                      ([
                                                                      ],
                                                                        .)),
                                                                    Int(1))
                                                              ]);
                                                          Variable
                                                            ((346,
                                                              Effect
                                                                ([
                                                                ],
                                                                  .)),
                                                              l/0)
                                                        ]),
                                                    [
                                                      (Tuple
                                                        (right_,
                                                          l),
                                                        Tuple
                                                          ((347,
                                                            Effect
                                                              ([
                                                              ],
                                                                .)),
                                                            Apply
                                                              ((347,
                                                                Effect
                                                                  ([
                                                                  ],
                                                                    .)),
                                                                Variable
                                                                  ((347,
                                                                    Effect
                                                                      ([
                                                                      ],
                                                                        .
                                                                          ->
                                                                          .
                                                                            ->
                                                                            .
                                                                              ->
                                                                              .)),
                                                                    create/0),
                                                                [
                                                                  Variable
                                                                    ((347,
                                                                      Effect
                                                                        ([
                                                                        ],
                                                                          .)),
                                                                      left_/0);
                                                                  Variable
                                                                    ((347,
                                                                      Effect
                                                                        ([
                                                                        ],
                                                                          .)),
                                                                      mid/0);
                                                                  Variable
                                                                    ((347,
                                                                      Effect
                                                                        ([
                                                                        ],
                                                                          .)),
                                                                      right_/0)
                                                                ]),
                                                            Variable
                                                              ((347,
                                                                Effect
                                                                  ([
                                                                  ],
                                                                    .)),
                                                                l/0)))
                                                    ]))
                                            ]))
                                    ]))
                            ]))
                    ]))
            ]) in
        LetFun
          (334,
            Effect
              ([ Counter/1; NonTermination/1; OCaml.Assert_failure/1 ],
                .))
          (non_rec, @.,
            [
              ((sub, [ ],
                [
                  (n, Type (Z/1));
                  (l,
                    Type
                      (list/1,
                        Type
                          (elt/0)))
                ],
                Some
                  (Type (t/0) *
                    Type
                      (list/1,
                        Type
                          (elt/0)))),
                Apply
                  ((?,
                    Effect
                      ([
                        Counter/1;
                        NonTermination/1;
                        OCaml.Assert_failure/1
                      ],
                        .)),
                    Variable
                      ((?,
                        Effect
                          ([
                          ],
                            .
                              ->
                              .
                                ->
                                .
                                  -[
                                    NonTermination/1;
                                    OCaml.Assert_failure/1
                                  ]->
                                  .)),
                        sub_rec/0),
                    [
                      Apply
                        ((?,
                          Effect
                            ([
                              Counter/1
                            ],
                              .)),
                          Variable
                            ((?,
                              Effect
                                ([
                                ],
                                  .
                                    -[
                                      Counter/1
                                    ]->
                                    .)),
                              read_counter/1),
                          [
                            Tuple
                              ((?,
                                Effect
                                  ([
                                  ],
                                    .)))
                          ]);
                      Variable
                        ((?,
                          Effect
                            ([
                            ],
                              .)),
                          n/0);
                      Variable
                        ((?,
                          Effect
                            ([
                            ],
                              .)),
                          l/0)
                    ]))
            ]) in
        Apply
          ((349,
            Effect
              ([ Counter/1; NonTermination/1; OCaml.Assert_failure/1 ],
                .)), Variable ((349, Effect ([ ], .)), fst/1),
            [
              Apply
                ((349,
                  Effect
                    ([
                      Counter/1;
                      NonTermination/1;
                      OCaml.Assert_failure/1
                    ], .)),
                  Variable
                    ((349,
                      Effect
                        ([
                        ],
                          .
                            ->
                            .
                              -[
                                Counter/1;
                                NonTermination/1;
                                OCaml.Assert_failure/1
                              ]->
                              .)),
                      sub/0),
                  [
                    Apply
                      ((349,
                        Effect
                          ([
                          ],
                            .)),
                        Variable
                          ((349,
                            Effect
                              ([
                              ],
                                .)),
                            OCaml.List.length/-1),
                        [
                          Variable
                            ((349,
                              Effect
                                ([
                                ],
                                  .)),
                              l/0)
                        ]);
                    Variable
                      ((349,
                        Effect
                          ([
                          ],
                            .)),
                        l/0)
                  ])
            ]))
    ])
