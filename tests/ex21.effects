3
Value
  (non_rec, @.,
    [
      ((f, [ A; B; C ], [ (x, A) ],
        Monad
          ([ Type (IO) ],
            (B ->
              Monad
                ([ Type (OCaml/exception, Type (OCaml/failure)) ], C)))),
        Sequence
          ((4,
            Effect
              ([ Type (IO) ],
                . -[ Type (OCaml/exception, Type (OCaml/failure)) ]->
                  .)),
            Apply
              ((4, Effect ([ Type (IO) ], .)),
                Variable
                  ((4, Effect ([ ], . -[ Type (IO) ]-> .)),
                    OCaml/Pervasives.print_string),
                [ Constant ((4, Effect ([ ], .)), String("Hi")) ]),
            Function
              ((5,
                Effect
                  ([ ],
                    .
                      -[
                        Type
                          (OCaml/exception,
                            Type
                              (OCaml/failure))
                      ]-> .)), y,
                Apply
                  ((5,
                    Effect
                      ([
                        Type
                          (OCaml/exception,
                            Type
                              (OCaml/failure))
                      ], .)),
                    Variable
                      ((5,
                        Effect
                          ([ ],
                            .
                              -[
                                Type
                                  (OCaml/exception,
                                    Type
                                      (OCaml/failure))
                              ]-> .)),
                        OCaml/Pervasives.failwith),
                    [
                      Constant
                        ((5,
                          Effect
                            ([
                            ],
                              .)),
                          String("Bye"))
                    ]))))
    ])

7
Value
  (non_rec, @.,
    [
      ((r, [ A; B ], [ (x, A) ],
        Monad ([ Type (IO); Type (OCaml/exception, Type (OCaml/failure)) ], B)),
        Match
          ((7,
            Effect
              ([
                Type (IO);
                Type (OCaml/exception, Type (OCaml/failure))
              ], .)), Variable ((?, Effect ([ ], .)), Ex21/x),
            [
              (Any,
                Apply
                  ((7,
                    Effect
                      ([
                        Type
                          (IO);
                        Type
                          (OCaml/exception,
                            Type
                              (OCaml/failure))
                      ],
                        .)),
                    Apply
                      ((7,
                        Effect
                          ([
                            Type
                              (IO)
                          ],
                            .
                              -[
                                Type
                                  (OCaml/exception,
                                    Type
                                      (OCaml/failure))
                              ]->
                              .)),
                        Variable
                          ((7,
                            Effect
                              ([
                              ],
                                .
                                  -[
                                    Type
                                      (IO)
                                  ]->
                                  .
                                    -[
                                      Type
                                        (OCaml/exception,
                                          Type
                                            (OCaml/failure))
                                    ]->
                                    .)),
                            Ex21/f),
                        [
                          Constant
                            ((7,
                              Effect
                                ([
                                ],
                                  .)),
                              Int(1))
                        ]),
                    [
                      Constant
                        ((7,
                          Effect
                            ([
                            ],
                              .)),
                          Int(2))
                    ]))
            ]))
    ])
