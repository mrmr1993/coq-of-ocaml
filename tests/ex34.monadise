Require [ OCaml.List ]

3 Module Ord:
  4 Abstract (t, [ ])
  
  5
  Value
    (non_rec, @.,
      [
        ((compare, [ ], [ (x, Type (Ord/t)) ], (Type (Ord/t) -> Type (Z))),
          Match
            (?, Variable (?, Ord/x),
              [
                (Any,
                  Function
                    (5,
                      x_1,
                      Match
                        (?,
                          Variable
                            (?,
                              Ord/x_1),
                          [
                            (Any,
                              Constant
                                (5,
                                  Int(0)))
                          ])))
              ]))
      ])

8 Synonym (elt, [ ], Type (Ord.t))

9
Inductive t:
  ([ ], [ (Empty, [ ]); (Node, [ Type (t); Type (elt); Type (t); Type (Z) ]) ])

14
Value
  (non_rec, @.,
    [
      ((height, [ ], [ (x, Type (t)) ], Type (Z)),
        Match
          (?, Variable (?, x),
            [
              (Constructor (Empty), Constant (15, Int(0)));
              (Constructor (Node, Any, Any, Any, h), Variable (16, h))
            ]))
    ])

23
Value
  (non_rec, @.,
    [
      ((create, [ ], [ (l, Type (t)); (v, Type (elt)); (r, Type (t)) ], Type (t)),
        LetVar ? hl =
          Match
            (24, Variable (24, l),
              [
                (Constructor (Empty), Constant (24, Int(0)));
                (Constructor (Node, Any, Any, Any, h),
                  Variable (24, h))
              ]) in
        LetVar ? hr =
          Match
            (25, Variable (25, r),
              [
                (Constructor (Empty), Constant (25, Int(0)));
                (Constructor (Node, Any, Any, Any, h),
                  Variable (25, h))
              ]) in
        Constructor
          (26, Node, Variable (26, l), Variable (26, v), Variable (26, r),
            IfThenElse
              (26,
                Apply
                  (26, Variable (26, OCaml.Pervasives.ge),
                    [ Variable (26, hl); Variable (26, hr) ]),
                Apply
                  (26, Variable (26, Z.add),
                    [ Variable (26, hl); Constant (26, Int(1)) ]),
                Apply
                  (26, Variable (26, Z.add),
                    [ Variable (26, hr); Constant (26, Int(1)) ]))))
    ])

33
Value
  (non_rec, @.,
    [
      ((bal, [ ], [ (l, Type (t)); (v, Type (elt)); (r, Type (t)) ],
        Monad ([ Type (OCaml.Invalid_argument) ], Type (t))),
        LetVar ? hl =
          Match
            (34, Variable (34, l),
              [
                (Constructor (Empty), Constant (34, Int(0)));
                (Constructor (Node, Any, Any, Any, h),
                  Variable (34, h))
              ]) in
        LetVar ? hr =
          Match
            (35, Variable (35, r),
              [
                (Constructor (Empty), Constant (35, Int(0)));
                (Constructor (Node, Any, Any, Any, h),
                  Variable (35, h))
              ]) in
        IfThenElse
          (36,
            Apply
              (36, Variable (36, OCaml.Pervasives.gt),
                [
                  Variable (36, hl);
                  Apply
                    (36,
                      Variable
                        (36,
                          Z.add),
                      [
                        Variable
                          (36,
                            hr);
                        Constant
                          (36,
                            Int(2))
                      ])
                ]),
            Match
              (36, Variable (37, l),
                [
                  (Constructor (Empty),
                    Apply
                      (38,
                        Variable
                          (38,
                            OCaml.Pervasives.invalid_arg),
                        [
                          Constant
                            (38,
                              String("Set.bal"))
                        ]));
                  (Constructor (Node, ll, lv, lr, Any),
                    IfThenElse
                      (40,
                        Apply
                          (40,
                            Variable
                              (40,
                                OCaml.Pervasives.ge),
                            [
                              Apply
                                (40,
                                  Variable
                                    (40,
                                      height),
                                  [
                                    Variable
                                      (40,
                                        ll)
                                  ]);
                              Apply
                                (40,
                                  Variable
                                    (40,
                                      height),
                                  [
                                    Variable
                                      (40,
                                        lr)
                                  ])
                            ]),
                        Return
                          (?,
                            Apply
                              (41,
                                Variable
                                  (41,
                                    create),
                                [
                                  Variable
                                    (41,
                                      ll);
                                  Variable
                                    (41,
                                      lv);
                                  Apply
                                    (41,
                                      Variable
                                        (41,
                                          create),
                                      [
                                        Variable
                                          (41,
                                            lr);
                                        Variable
                                          (41,
                                            v);
                                        Variable
                                          (41,
                                            r)
                                      ])
                                ])),
                        Match
                          (42,
                            Variable
                              (43,
                                lr),
                            [
                              (Constructor
                                (Empty),
                                Apply
                                  (44,
                                    Variable
                                      (44,
                                        OCaml.Pervasives.invalid_arg),
                                    [
                                      Constant
                                        (44,
                                          String("Set.bal"))
                                    ]));
                              (Constructor
                                (Node,
                                  lrl,
                                  lrv,
                                  lrr,
                                  Any),
                                Return
                                  (?,
                                    Apply
                                      (46,
                                        Variable
                                          (46,
                                            create),
                                        [
                                          Apply
                                            (46,
                                              Variable
                                                (46,
                                                  create),
                                              [
                                                Variable
                                                  (46,
                                                    ll);
                                                Variable
                                                  (46,
                                                    lv);
                                                Variable
                                                  (46,
                                                    lrl)
                                              ]);
                                          Variable
                                            (46,
                                              lrv);
                                          Apply
                                            (46,
                                              Variable
                                                (46,
                                                  create),
                                              [
                                                Variable
                                                  (46,
                                                    lrr);
                                                Variable
                                                  (46,
                                                    v);
                                                Variable
                                                  (46,
                                                    r)
                                              ])
                                        ])))
                            ])))
                ]),
            IfThenElse
              (48,
                Apply
                  (48, Variable (48, OCaml.Pervasives.gt),
                    [
                      Variable (48, hr);
                      Apply
                        (48,
                          Variable
                            (48,
                              Z.add),
                          [
                            Variable
                              (48,
                                hl);
                            Constant
                              (48,
                                Int(2))
                          ])
                    ]),
                Match
                  (48, Variable (49, r),
                    [
                      (Constructor (Empty),
                        Apply
                          (50,
                            Variable
                              (50,
                                OCaml.Pervasives.invalid_arg),
                            [
                              Constant
                                (50,
                                  String("Set.bal"))
                            ]));
                      (Constructor (Node, rl, rv, rr, Any),
                        IfThenElse
                          (52,
                            Apply
                              (52,
                                Variable
                                  (52,
                                    OCaml.Pervasives.ge),
                                [
                                  Apply
                                    (52,
                                      Variable
                                        (52,
                                          height),
                                      [
                                        Variable
                                          (52,
                                            rr)
                                      ]);
                                  Apply
                                    (52,
                                      Variable
                                        (52,
                                          height),
                                      [
                                        Variable
                                          (52,
                                            rl)
                                      ])
                                ]),
                            Return
                              (?,
                                Apply
                                  (53,
                                    Variable
                                      (53,
                                        create),
                                    [
                                      Apply
                                        (53,
                                          Variable
                                            (53,
                                              create),
                                          [
                                            Variable
                                              (53,
                                                l);
                                            Variable
                                              (53,
                                                v);
                                            Variable
                                              (53,
                                                rl)
                                          ]);
                                      Variable
                                        (53,
                                          rv);
                                      Variable
                                        (53,
                                          rr)
                                    ])),
                            Match
                              (54,
                                Variable
                                  (55,
                                    rl),
                                [
                                  (Constructor
                                    (Empty),
                                    Apply
                                      (56,
                                        Variable
                                          (56,
                                            OCaml.Pervasives.invalid_arg),
                                        [
                                          Constant
                                            (56,
                                              String("Set.bal"))
                                        ]));
                                  (Constructor
                                    (Node,
                                      rll,
                                      rlv,
                                      rlr,
                                      Any),
                                    Return
                                      (?,
                                        Apply
                                          (58,
                                            Variable
                                              (58,
                                                create),
                                            [
                                              Apply
                                                (58,
                                                  Variable
                                                    (58,
                                                      create),
                                                  [
                                                    Variable
                                                      (58,
                                                        l);
                                                    Variable
                                                      (58,
                                                        v);
                                                    Variable
                                                      (58,
                                                        rll)
                                                  ]);
                                              Variable
                                                (58,
                                                  rlv);
                                              Apply
                                                (58,
                                                  Variable
                                                    (58,
                                                      create),
                                                  [
                                                    Variable
                                                      (58,
                                                        rlr);
                                                    Variable
                                                      (58,
                                                        rv);
                                                    Variable
                                                      (58,
                                                        rr)
                                                  ])
                                            ])))
                                ])))
                    ]),
                Return
                  (?,
                    Constructor
                      (61, Node, Variable (61, l),
                        Variable (61, v), Variable (61, r),
                        IfThenElse
                          (61,
                            Apply
                              (61,
                                Variable
                                  (61,
                                    OCaml.Pervasives.ge),
                                [
                                  Variable (61, hl);
                                  Variable (61, hr)
                                ]),
                            Apply
                              (61, Variable (61, Z.add),
                                [
                                  Variable (61, hl);
                                  Constant
                                    (61,
                                      Int(1))
                                ]),
                            Apply
                              (61, Variable (61, Z.add),
                                [
                                  Variable (61, hr);
                                  Constant
                                    (61,
                                      Int(1))
                                ])))))))
    ])

65
Value
  (rec, @coq_rec,
    [
      ((add, [ ], [ (x, Type (elt)); (x_1, Type (t)) ],
        Monad ([ Type (OCaml.Invalid_argument) ], Type (t))),
        Match
          (?, Variable (?, x_1),
            [
              (Constructor (Empty),
                Return
                  (?,
                    Constructor
                      (66,
                        Node,
                        Constructor
                          (66,
                            Empty),
                        Variable
                          (66,
                            x),
                        Constructor
                          (66,
                            Empty),
                        Constant
                          (66,
                            Int(1)))));
              (Alias (Constructor (Node, l, v, r, Any), t (= t_1)),
                LetVar ? c =
                  Apply
                    (68,
                      Variable
                        (68,
                          Ord.compare),
                      [
                        Variable
                          (68,
                            x);
                        Variable
                          (68,
                            v)
                      ])
                  in
                IfThenElse
                  (69,
                    Apply
                      (69,
                        Variable
                          (69,
                            equiv_decb),
                        [
                          Variable
                            (69,
                              c);
                          Constant
                            (69,
                              Int(0))
                        ]),
                    Return
                      (?,
                        Variable
                          (69,
                            t_1)),
                    IfThenElse
                      (70,
                        Apply
                          (70,
                            Variable
                              (70,
                                OCaml.Pervasives.lt),
                            [
                              Variable
                                (70,
                                  c);
                              Constant
                                (70,
                                  Int(0))
                            ]),
                        Bind
                          (?,
                            Apply
                              (70,
                                Variable
                                  (70,
                                    add),
                                [
                                  Variable
                                    (70,
                                      x);
                                  Variable
                                    (70,
                                      l)
                                ]),
                            Some
                              x_2,
                            Apply
                              (70,
                                Variable
                                  (70,
                                    bal),
                                [
                                  Variable
                                    (?,
                                      x_2);
                                  Variable
                                    (70,
                                      v);
                                  Variable
                                    (70,
                                      r)
                                ])),
                        Bind
                          (?,
                            Apply
                              (70,
                                Variable
                                  (70,
                                    add),
                                [
                                  Variable
                                    (70,
                                      x);
                                  Variable
                                    (70,
                                      r)
                                ]),
                            Some
                              x_2,
                            Apply
                              (70,
                                Variable
                                  (70,
                                    bal),
                                [
                                  Variable
                                    (70,
                                      l);
                                  Variable
                                    (70,
                                      v);
                                  Variable
                                    (?,
                                      x_2)
                                ])))))
            ]))
    ])

73
Value
  (non_rec, @.,
    [
      ((singleton, [ ], [ (x, Type (elt)) ], Type (t)),
        Constructor
          (73, Node, Constructor (73, Empty), Variable (73, x),
            Constructor (73, Empty), Constant (73, Int(1))))
    ])

82
Value
  (rec, @coq_rec,
    [
      ((add_min_element, [ ], [ (v, Type (elt)); (x, Type (t)) ],
        Monad ([ Type (OCaml.Invalid_argument) ], Type (t))),
        Match
          (?, Variable (?, x),
            [
              (Constructor (Empty),
                Return
                  (?,
                    Apply
                      (83,
                        Variable
                          (83,
                            singleton),
                        [
                          Variable
                            (83,
                              v)
                        ])));
              (Constructor (Node, l, x, r, h),
                Bind
                  (?,
                    Apply
                      (85,
                        Variable
                          (85,
                            add_min_element),
                        [
                          Variable
                            (85,
                              v);
                          Variable
                            (85,
                              l)
                        ]),
                    Some
                      x_1,
                    Apply
                      (85,
                        Variable
                          (85,
                            bal),
                        [
                          Variable
                            (?,
                              x_1);
                          Variable
                            (85,
                              x);
                          Variable
                            (85,
                              r)
                        ])))
            ]))
    ])

88
Value
  (rec, @coq_rec,
    [
      ((add_max_element, [ ], [ (v, Type (elt)); (x, Type (t)) ],
        Monad ([ Type (OCaml.Invalid_argument) ], Type (t))),
        Match
          (?, Variable (?, x),
            [
              (Constructor (Empty),
                Return
                  (?,
                    Apply
                      (89,
                        Variable
                          (89,
                            singleton),
                        [
                          Variable
                            (89,
                              v)
                        ])));
              (Constructor (Node, l, x, r, h),
                Bind
                  (?,
                    Apply
                      (91,
                        Variable
                          (91,
                            add_max_element),
                        [
                          Variable
                            (91,
                              v);
                          Variable
                            (91,
                              r)
                        ]),
                    Some
                      x_1,
                    Apply
                      (91,
                        Variable
                          (91,
                            bal),
                        [
                          Variable
                            (91,
                              l);
                          Variable
                            (91,
                              x);
                          Variable
                            (?,
                              x_1)
                        ])))
            ]))
    ])

97
Value
  (rec, @.,
    [
      ((join_rec, [ ],
        [
          (counter, Type (nat));
          (l, Type (t));
          (v, Type (elt));
          (r, Type (t))
        ],
        Monad
          ([ Type (NonTermination); Type (OCaml.Invalid_argument) ],
            Type (t))),
        Match
          (?, Variable (?, counter),
            [
              (Constructor (O),
                Lift
                  (?,
                    [
                      Type
                        (NonTermination)
                    ],
                    [
                      Type
                        (NonTermination);
                      Type
                        (OCaml.Invalid_argument)
                    ],
                    Apply
                      (?,
                        Variable
                          (?,
                            not_terminated),
                        [
                          Tuple
                            (?)
                        ])));
              (Constructor (S, counter),
                Match
                  (98,
                    Tuple
                      (98,
                        Variable
                          (98,
                            l),
                        Variable
                          (98,
                            r)),
                    [
                      (Tuple
                        (Constructor
                          (Empty),
                          Any),
                        Lift
                          (?,
                            [
                              Type
                                (OCaml.Invalid_argument)
                            ],
                            [
                              Type
                                (NonTermination);
                              Type
                                (OCaml.Invalid_argument)
                            ],
                            Apply
                              (99,
                                Variable
                                  (99,
                                    add_min_element),
                                [
                                  Variable
                                    (99,
                                      v);
                                  Variable
                                    (99,
                                      r)
                                ])));
                      (Tuple
                        (Any,
                          Constructor
                            (Empty)),
                        Lift
                          (?,
                            [
                              Type
                                (OCaml.Invalid_argument)
                            ],
                            [
                              Type
                                (NonTermination);
                              Type
                                (OCaml.Invalid_argument)
                            ],
                            Apply
                              (100,
                                Variable
                                  (100,
                                    add_max_element),
                                [
                                  Variable
                                    (100,
                                      v);
                                  Variable
                                    (100,
                                      l)
                                ])));
                      (Tuple
                        (Constructor
                          (Node,
                            ll,
                            lv,
                            lr,
                            lh),
                          Constructor
                            (Node,
                              rl,
                              rv,
                              rr,
                              rh)),
                        IfThenElse
                          (102,
                            Apply
                              (102,
                                Variable
                                  (102,
                                    OCaml.Pervasives.gt),
                                [
                                  Variable
                                    (102,
                                      lh);
                                  Apply
                                    (102,
                                      Variable
                                        (102,
                                          Z.add),
                                      [
                                        Variable
                                          (102,
                                            rh);
                                        Constant
                                          (102,
                                            Int(2))
                                      ])
                                ]),
                            Bind
                              (?,
                                Apply
                                  (102,
                                    Apply
                                      (?,
                                        Variable
                                          (?,
                                            join_rec),
                                        [
                                          Variable
                                            (?,
                                              counter)
                                        ]),
                                    [
                                      Variable
                                        (102,
                                          lr);
                                      Variable
                                        (102,
                                          v);
                                      Variable
                                        (102,
                                          r)
                                    ]),
                                Some
                                  x,
                                Lift
                                  (?,
                                    [
                                      Type
                                        (OCaml.Invalid_argument)
                                    ],
                                    [
                                      Type
                                        (NonTermination);
                                      Type
                                        (OCaml.Invalid_argument)
                                    ],
                                    Apply
                                      (102,
                                        Variable
                                          (102,
                                            bal),
                                        [
                                          Variable
                                            (102,
                                              ll);
                                          Variable
                                            (102,
                                              lv);
                                          Variable
                                            (?,
                                              x)
                                        ]))),
                            IfThenElse
                              (103,
                                Apply
                                  (103,
                                    Variable
                                      (103,
                                        OCaml.Pervasives.gt),
                                    [
                                      Variable
                                        (103,
                                          rh);
                                      Apply
                                        (103,
                                          Variable
                                            (103,
                                              Z.add),
                                          [
                                            Variable
                                              (103,
                                                lh);
                                            Constant
                                              (103,
                                                Int(2))
                                          ])
                                    ]),
                                Bind
                                  (?,
                                    Apply
                                      (103,
                                        Apply
                                          (?,
                                            Variable
                                              (?,
                                                join_rec),
                                            [
                                              Variable
                                                (?,
                                                  counter)
                                            ]),
                                        [
                                          Variable
                                            (103,
                                              l);
                                          Variable
                                            (103,
                                              v);
                                          Variable
                                            (103,
                                              rl)
                                        ]),
                                    Some
                                      x,
                                    Lift
                                      (?,
                                        [
                                          Type
                                            (OCaml.Invalid_argument)
                                        ],
                                        [
                                          Type
                                            (NonTermination);
                                          Type
                                            (OCaml.Invalid_argument)
                                        ],
                                        Apply
                                          (103,
                                            Variable
                                              (103,
                                                bal),
                                            [
                                              Variable
                                                (?,
                                                  x);
                                              Variable
                                                (103,
                                                  rv);
                                              Variable
                                                (103,
                                                  rr)
                                            ]))),
                                Return
                                  (?,
                                    Apply
                                      (104,
                                        Variable
                                          (104,
                                            create),
                                        [
                                          Variable
                                            (104,
                                              l);
                                          Variable
                                            (104,
                                              v);
                                          Variable
                                            (104,
                                              r)
                                        ])))))
                    ]))
            ]))
    ])

97
Value
  (non_rec, @.,
    [
      ((join, [ ], [ (l, Type (t)); (v, Type (elt)); (r, Type (t)) ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.Invalid_argument)
          ], Type (t))),
        Bind
          (?,
            Lift
              (?, [ Type (Counter) ],
                [
                  Type (Counter);
                  Type (NonTermination);
                  Type (OCaml.Invalid_argument)
                ],
                Apply (?, Variable (?, read_counter), [ Tuple (?) ])),
            Some x,
            Lift
              (?,
                [
                  Type (NonTermination);
                  Type (OCaml.Invalid_argument)
                ],
                [
                  Type (Counter);
                  Type (NonTermination);
                  Type (OCaml.Invalid_argument)
                ],
                Apply
                  (?, Variable (?, join_rec),
                    [
                      Variable (?, x);
                      Variable (?, l);
                      Variable (?, v);
                      Variable (?, r)
                    ]))))
    ])

108
Value
  (rec, @coq_rec,
    [
      ((min_elt, [ ], [ (x, Type (t)) ],
        Monad ([ Type (OCaml.Not_found) ], Type (elt))),
        Match
          (?, Variable (?, x),
            [
              (Constructor (Empty),
                Apply
                  (109,
                    Variable
                      (109,
                        OCaml.raise_Not_found),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (Node, Constructor (Empty), v, r, Any),
                Return (?, Variable (110, v)));
              (Constructor (Node, l, v, r, Any),
                Apply
                  (111,
                    Variable
                      (111,
                        min_elt),
                    [
                      Variable
                        (111,
                          l)
                    ]))
            ]))
    ])

114
Value
  (rec, @coq_rec,
    [
      ((max_elt, [ ], [ (x, Type (t)) ],
        Monad ([ Type (OCaml.Not_found) ], Type (elt))),
        Match
          (?, Variable (?, x),
            [
              (Constructor (Empty),
                Apply
                  (115,
                    Variable
                      (115,
                        OCaml.raise_Not_found),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (Node, l, v, Constructor (Empty), Any),
                Return (?, Variable (116, v)));
              (Constructor (Node, l, v, r, Any),
                Apply
                  (117,
                    Variable
                      (117,
                        max_elt),
                    [
                      Variable
                        (117,
                          r)
                    ]))
            ]))
    ])

122
Value
  (rec, @coq_rec,
    [
      ((remove_min_elt, [ ], [ (x, Type (t)) ],
        Monad ([ Type (OCaml.Invalid_argument) ], Type (t))),
        Match
          (?, Variable (?, x),
            [
              (Constructor (Empty),
                Apply
                  (123,
                    Variable
                      (123,
                        OCaml.Pervasives.invalid_arg),
                    [
                      Constant
                        (123,
                          String("Set.remove_min_elt"))
                    ]));
              (Constructor (Node, Constructor (Empty), v, r, Any),
                Return (?, Variable (124, r)));
              (Constructor (Node, l, v, r, Any),
                Bind
                  (?,
                    Apply
                      (125,
                        Variable
                          (125,
                            remove_min_elt),
                        [
                          Variable
                            (125,
                              l)
                        ]),
                    Some
                      x_1,
                    Apply
                      (125,
                        Variable
                          (125,
                            bal),
                        [
                          Variable
                            (?,
                              x_1);
                          Variable
                            (125,
                              v);
                          Variable
                            (125,
                              r)
                        ])))
            ]))
    ])

132
Value
  (non_rec, @.,
    [
      ((merge, [ ], [ (t1, Type (t)); (t2, Type (t)) ],
        Monad
          ([ Type (OCaml.Invalid_argument); Type (OCaml.Not_found) ],
            Type (t))),
        Match
          (133, Tuple (133, Variable (133, t1), Variable (133, t2)),
            [
              (Tuple (Constructor (Empty), t (= t_1)),
                Return (?, Variable (134, t_1)));
              (Tuple (t (= t_1), Constructor (Empty)),
                Return (?, Variable (135, t_1)));
              (Tuple (Any, Any),
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          Type
                            (OCaml.Not_found)
                        ],
                        [
                          Type
                            (OCaml.Invalid_argument);
                          Type
                            (OCaml.Not_found)
                        ],
                        Apply
                          (136,
                            Variable
                              (136,
                                min_elt),
                            [
                              Variable
                                (136,
                                  t2)
                            ])),
                    Some
                      x,
                    Bind
                      (?,
                        Lift
                          (?,
                            [
                              Type
                                (OCaml.Invalid_argument)
                            ],
                            [
                              Type
                                (OCaml.Invalid_argument);
                              Type
                                (OCaml.Not_found)
                            ],
                            Apply
                              (136,
                                Variable
                                  (136,
                                    remove_min_elt),
                                [
                                  Variable
                                    (136,
                                      t2)
                                ])),
                        Some
                          x_1,
                        Lift
                          (?,
                            [
                              Type
                                (OCaml.Invalid_argument)
                            ],
                            [
                              Type
                                (OCaml.Invalid_argument);
                              Type
                                (OCaml.Not_found)
                            ],
                            Apply
                              (136,
                                Variable
                                  (136,
                                    bal),
                                [
                                  Variable
                                    (136,
                                      t1);
                                  Variable
                                    (?,
                                      x);
                                  Variable
                                    (?,
                                      x_1)
                                ])))))
            ]))
    ])

142
Value
  (non_rec, @.,
    [
      ((concat, [ ], [ (t1, Type (t)); (t2, Type (t)) ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.Invalid_argument);
            Type (OCaml.Not_found)
          ], Type (t))),
        Match
          (143, Tuple (143, Variable (143, t1), Variable (143, t2)),
            [
              (Tuple (Constructor (Empty), t (= t_1)),
                Return (?, Variable (144, t_1)));
              (Tuple (t (= t_1), Constructor (Empty)),
                Return (?, Variable (145, t_1)));
              (Tuple (Any, Any),
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          Type
                            (OCaml.Not_found)
                        ],
                        [
                          Type
                            (Counter);
                          Type
                            (NonTermination);
                          Type
                            (OCaml.Invalid_argument);
                          Type
                            (OCaml.Not_found)
                        ],
                        Apply
                          (146,
                            Variable
                              (146,
                                min_elt),
                            [
                              Variable
                                (146,
                                  t2)
                            ])),
                    Some
                      x,
                    Bind
                      (?,
                        Lift
                          (?,
                            [
                              Type
                                (OCaml.Invalid_argument)
                            ],
                            [
                              Type
                                (Counter);
                              Type
                                (NonTermination);
                              Type
                                (OCaml.Invalid_argument);
                              Type
                                (OCaml.Not_found)
                            ],
                            Apply
                              (146,
                                Variable
                                  (146,
                                    remove_min_elt),
                                [
                                  Variable
                                    (146,
                                      t2)
                                ])),
                        Some
                          x_1,
                        Lift
                          (?,
                            [
                              Type
                                (Counter);
                              Type
                                (NonTermination);
                              Type
                                (OCaml.Invalid_argument)
                            ],
                            [
                              Type
                                (Counter);
                              Type
                                (NonTermination);
                              Type
                                (OCaml.Invalid_argument);
                              Type
                                (OCaml.Not_found)
                            ],
                            Apply
                              (146,
                                Variable
                                  (146,
                                    join),
                                [
                                  Variable
                                    (146,
                                      t1);
                                  Variable
                                    (?,
                                      x);
                                  Variable
                                    (?,
                                      x_1)
                                ])))))
            ]))
    ])

154
Value
  (rec, @coq_rec,
    [
      ((split, [ ], [ (x, Type (Ord.t)); (x_1, Type (t)) ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.Invalid_argument)
          ], (Type (t) * Type (bool) * Type (t)))),
        Match
          (?, Variable (?, x_1),
            [
              (Constructor (Empty),
                Return
                  (?,
                    Tuple
                      (156,
                        Constructor
                          (156,
                            Empty),
                        Constructor
                          (156,
                            false),
                        Constructor
                          (156,
                            Empty))));
              (Constructor (Node, l, v, r, Any),
                LetVar ? c =
                  Apply
                    (158,
                      Variable
                        (158,
                          Ord.compare),
                      [
                        Variable
                          (158,
                            x);
                        Variable
                          (158,
                            v)
                      ])
                  in
                IfThenElse
                  (159,
                    Apply
                      (159,
                        Variable
                          (159,
                            equiv_decb),
                        [
                          Variable
                            (159,
                              c);
                          Constant
                            (159,
                              Int(0))
                        ]),
                    Return
                      (?,
                        Tuple
                          (159,
                            Variable
                              (159,
                                l),
                            Constructor
                              (159,
                                true),
                            Variable
                              (159,
                                r))),
                    IfThenElse
                      (160,
                        Apply
                          (160,
                            Variable
                              (160,
                                OCaml.Pervasives.lt),
                            [
                              Variable
                                (160,
                                  c);
                              Constant
                                (160,
                                  Int(0))
                            ]),
                        Bind
                          (?,
                            Apply
                              (161,
                                Variable
                                  (161,
                                    split),
                                [
                                  Variable
                                    (161,
                                      x);
                                  Variable
                                    (161,
                                      l)
                                ]),
                            Some
                              x_2,
                            Match
                              (161,
                                Variable
                                  (?,
                                    x_2),
                                [
                                  (Tuple
                                    (ll,
                                      pres,
                                      rl),
                                    Bind
                                      (?,
                                        Apply
                                          (161,
                                            Variable
                                              (161,
                                                join),
                                            [
                                              Variable
                                                (161,
                                                  rl);
                                              Variable
                                                (161,
                                                  v);
                                              Variable
                                                (161,
                                                  r)
                                            ]),
                                        Some
                                          x_2,
                                        Return
                                          (?,
                                            Tuple
                                              (161,
                                                Variable
                                                  (161,
                                                    ll),
                                                Variable
                                                  (161,
                                                    pres),
                                                Variable
                                                  (?,
                                                    x_2)))))
                                ])),
                        Bind
                          (?,
                            Apply
                              (163,
                                Variable
                                  (163,
                                    split),
                                [
                                  Variable
                                    (163,
                                      x);
                                  Variable
                                    (163,
                                      r)
                                ]),
                            Some
                              x_2,
                            Match
                              (163,
                                Variable
                                  (?,
                                    x_2),
                                [
                                  (Tuple
                                    (lr,
                                      pres,
                                      rr),
                                    Bind
                                      (?,
                                        Apply
                                          (163,
                                            Variable
                                              (163,
                                                join),
                                            [
                                              Variable
                                                (163,
                                                  l);
                                              Variable
                                                (163,
                                                  v);
                                              Variable
                                                (163,
                                                  lr)
                                            ]),
                                        Some
                                          x_2,
                                        Return
                                          (?,
                                            Tuple
                                              (163,
                                                Variable
                                                  (?,
                                                    x_2),
                                                Variable
                                                  (163,
                                                    pres),
                                                Variable
                                                  (163,
                                                    rr)))))
                                ])))))
            ]))
    ])

168
Value (non_rec, @., [ ((empty, [ ], [ ], Type (t)), Constructor (168, Empty)) ])

170
Value
  (non_rec, @.,
    [
      ((is_empty, [ ], [ (x, Type (t)) ], Type (bool)),
        Match
          (?, Variable (?, x),
            [
              (Constructor (Empty), Constructor (170, true));
              (Any, Constructor (170, false))
            ]))
    ])

172
Value
  (rec, @coq_rec,
    [
      ((mem, [ ], [ (x, Type (Ord.t)); (x_1, Type (t)) ], Type (bool)),
        Match
          (?, Variable (?, x_1),
            [
              (Constructor (Empty), Constructor (173, false));
              (Constructor (Node, l, v, r, Any),
                LetVar ? c =
                  Apply
                    (175,
                      Variable
                        (175,
                          Ord.compare),
                      [
                        Variable
                          (175,
                            x);
                        Variable
                          (175,
                            v)
                      ])
                  in
                Apply
                  (176,
                    Variable
                      (176,
                        orb),
                    [
                      Apply
                        (176,
                          Variable
                            (176,
                              equiv_decb),
                          [
                            Variable
                              (176,
                                c);
                            Constant
                              (176,
                                Int(0))
                          ]);
                      Apply
                        (176,
                          Variable
                            (176,
                              mem),
                          [
                            Variable
                              (176,
                                x);
                            IfThenElse
                              (176,
                                Apply
                                  (176,
                                    Variable
                                      (176,
                                        OCaml.Pervasives.lt),
                                    [
                                      Variable
                                        (176,
                                          c);
                                      Constant
                                        (176,
                                          Int(0))
                                    ]),
                                Variable
                                  (176,
                                    l),
                                Variable
                                  (176,
                                    r))
                          ])
                    ]))
            ]))
    ])

179
Value
  (rec, @coq_rec,
    [
      ((remove, [ ], [ (x, Type (Ord.t)); (x_1, Type (t)) ],
        Monad
          ([ Type (OCaml.Invalid_argument); Type (OCaml.Not_found) ],
            Type (t))),
        Match
          (?, Variable (?, x_1),
            [
              (Constructor (Empty),
                Return (?, Constructor (180, Empty)));
              (Constructor (Node, l, v, r, Any),
                LetVar ? c =
                  Apply
                    (182,
                      Variable
                        (182,
                          Ord.compare),
                      [
                        Variable
                          (182,
                            x);
                        Variable
                          (182,
                            v)
                      ])
                  in
                IfThenElse
                  (183,
                    Apply
                      (183,
                        Variable
                          (183,
                            equiv_decb),
                        [
                          Variable
                            (183,
                              c);
                          Constant
                            (183,
                              Int(0))
                        ]),
                    Apply
                      (183,
                        Variable
                          (183,
                            merge),
                        [
                          Variable
                            (183,
                              l);
                          Variable
                            (183,
                              r)
                        ]),
                    IfThenElse
                      (184,
                        Apply
                          (184,
                            Variable
                              (184,
                                OCaml.Pervasives.lt),
                            [
                              Variable
                                (184,
                                  c);
                              Constant
                                (184,
                                  Int(0))
                            ]),
                        Bind
                          (?,
                            Apply
                              (184,
                                Variable
                                  (184,
                                    remove),
                                [
                                  Variable
                                    (184,
                                      x);
                                  Variable
                                    (184,
                                      l)
                                ]),
                            Some
                              x_2,
                            Lift
                              (?,
                                [
                                  Type
                                    (OCaml.Invalid_argument)
                                ],
                                [
                                  Type
                                    (OCaml.Invalid_argument);
                                  Type
                                    (OCaml.Not_found)
                                ],
                                Apply
                                  (184,
                                    Variable
                                      (184,
                                        bal),
                                    [
                                      Variable
                                        (?,
                                          x_2);
                                      Variable
                                        (184,
                                          v);
                                      Variable
                                        (184,
                                          r)
                                    ]))),
                        Bind
                          (?,
                            Apply
                              (184,
                                Variable
                                  (184,
                                    remove),
                                [
                                  Variable
                                    (184,
                                      x);
                                  Variable
                                    (184,
                                      r)
                                ]),
                            Some
                              x_2,
                            Lift
                              (?,
                                [
                                  Type
                                    (OCaml.Invalid_argument)
                                ],
                                [
                                  Type
                                    (OCaml.Invalid_argument);
                                  Type
                                    (OCaml.Not_found)
                                ],
                                Apply
                                  (184,
                                    Variable
                                      (184,
                                        bal),
                                    [
                                      Variable
                                        (184,
                                          l);
                                      Variable
                                        (184,
                                          v);
                                      Variable
                                        (?,
                                          x_2)
                                    ]))))))
            ]))
    ])

187
Value
  (rec, @.,
    [
      ((union_rec, [ ],
        [ (counter, Type (nat)); (s1, Type (t)); (s2, Type (t)) ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.Invalid_argument)
          ], Type (t))),
        Match
          (?, Variable (?, counter),
            [
              (Constructor (O),
                Lift
                  (?,
                    [
                      Type
                        (NonTermination)
                    ],
                    [
                      Type
                        (Counter);
                      Type
                        (NonTermination);
                      Type
                        (OCaml.Invalid_argument)
                    ],
                    Apply
                      (?,
                        Variable
                          (?,
                            not_terminated),
                        [
                          Tuple
                            (?)
                        ])));
              (Constructor (S, counter),
                Match
                  (188,
                    Tuple
                      (188,
                        Variable
                          (188,
                            s1),
                        Variable
                          (188,
                            s2)),
                    [
                      (Tuple
                        (Constructor
                          (Empty),
                          t2),
                        Return
                          (?,
                            Variable
                              (189,
                                t2)));
                      (Tuple
                        (t1,
                          Constructor
                            (Empty)),
                        Return
                          (?,
                            Variable
                              (190,
                                t1)));
                      (Tuple
                        (Constructor
                          (Node,
                            l1,
                            v1,
                            r1,
                            h1),
                          Constructor
                            (Node,
                              l2,
                              v2,
                              r2,
                              h2)),
                        IfThenElse
                          (192,
                            Apply
                              (192,
                                Variable
                                  (192,
                                    OCaml.Pervasives.ge),
                                [
                                  Variable
                                    (192,
                                      h1);
                                  Variable
                                    (192,
                                      h2)
                                ]),
                            IfThenElse
                              (193,
                                Apply
                                  (193,
                                    Variable
                                      (193,
                                        equiv_decb),
                                    [
                                      Variable
                                        (193,
                                          h2);
                                      Constant
                                        (193,
                                          Int(1))
                                    ]),
                                Lift
                                  (?,
                                    [
                                      Type
                                        (OCaml.Invalid_argument)
                                    ],
                                    [
                                      Type
                                        (Counter);
                                      Type
                                        (NonTermination);
                                      Type
                                        (OCaml.Invalid_argument)
                                    ],
                                    Apply
                                      (193,
                                        Variable
                                          (193,
                                            add),
                                        [
                                          Variable
                                            (193,
                                              v2);
                                          Variable
                                            (193,
                                              s1)
                                        ])),
                                Bind
                                  (?,
                                    Apply
                                      (194,
                                        Variable
                                          (194,
                                            split),
                                        [
                                          Variable
                                            (194,
                                              v1);
                                          Variable
                                            (194,
                                              s2)
                                        ]),
                                    Some
                                      x,
                                    Match
                                      (193,
                                        Variable
                                          (?,
                                            x),
                                        [
                                          (Tuple
                                            (l2,
                                              Any,
                                              r2),
                                            Bind
                                              (?,
                                                Apply
                                                  (195,
                                                    Apply
                                                      (?,
                                                        Variable
                                                          (?,
                                                            union_rec),
                                                        [
                                                          Variable
                                                            (?,
                                                              counter)
                                                        ]),
                                                    [
                                                      Variable
                                                        (195,
                                                          l1);
                                                      Variable
                                                        (195,
                                                          l2)
                                                    ]),
                                                Some
                                                  x,
                                                Bind
                                                  (?,
                                                    Apply
                                                      (195,
                                                        Apply
                                                          (?,
                                                            Variable
                                                              (?,
                                                                union_rec),
                                                            [
                                                              Variable
                                                                (?,
                                                                  counter)
                                                            ]),
                                                        [
                                                          Variable
                                                            (195,
                                                              r1);
                                                          Variable
                                                            (195,
                                                              r2)
                                                        ]),
                                                    Some
                                                      x_1,
                                                    Apply
                                                      (195,
                                                        Variable
                                                          (195,
                                                            join),
                                                        [
                                                          Variable
                                                            (?,
                                                              x);
                                                          Variable
                                                            (195,
                                                              v1);
                                                          Variable
                                                            (?,
                                                              x_1)
                                                        ]))))
                                        ]))),
                            IfThenElse
                              (198,
                                Apply
                                  (198,
                                    Variable
                                      (198,
                                        equiv_decb),
                                    [
                                      Variable
                                        (198,
                                          h1);
                                      Constant
                                        (198,
                                          Int(1))
                                    ]),
                                Lift
                                  (?,
                                    [
                                      Type
                                        (OCaml.Invalid_argument)
                                    ],
                                    [
                                      Type
                                        (Counter);
                                      Type
                                        (NonTermination);
                                      Type
                                        (OCaml.Invalid_argument)
                                    ],
                                    Apply
                                      (198,
                                        Variable
                                          (198,
                                            add),
                                        [
                                          Variable
                                            (198,
                                              v1);
                                          Variable
                                            (198,
                                              s2)
                                        ])),
                                Bind
                                  (?,
                                    Apply
                                      (199,
                                        Variable
                                          (199,
                                            split),
                                        [
                                          Variable
                                            (199,
                                              v2);
                                          Variable
                                            (199,
                                              s1)
                                        ]),
                                    Some
                                      x,
                                    Match
                                      (198,
                                        Variable
                                          (?,
                                            x),
                                        [
                                          (Tuple
                                            (l1,
                                              Any,
                                              r1),
                                            Bind
                                              (?,
                                                Apply
                                                  (200,
                                                    Apply
                                                      (?,
                                                        Variable
                                                          (?,
                                                            union_rec),
                                                        [
                                                          Variable
                                                            (?,
                                                              counter)
                                                        ]),
                                                    [
                                                      Variable
                                                        (200,
                                                          l1);
                                                      Variable
                                                        (200,
                                                          l2)
                                                    ]),
                                                Some
                                                  x,
                                                Bind
                                                  (?,
                                                    Apply
                                                      (200,
                                                        Apply
                                                          (?,
                                                            Variable
                                                              (?,
                                                                union_rec),
                                                            [
                                                              Variable
                                                                (?,
                                                                  counter)
                                                            ]),
                                                        [
                                                          Variable
                                                            (200,
                                                              r1);
                                                          Variable
                                                            (200,
                                                              r2)
                                                        ]),
                                                    Some
                                                      x_1,
                                                    Apply
                                                      (200,
                                                        Variable
                                                          (200,
                                                            join),
                                                        [
                                                          Variable
                                                            (?,
                                                              x);
                                                          Variable
                                                            (200,
                                                              v2);
                                                          Variable
                                                            (?,
                                                              x_1)
                                                        ]))))
                                        ])))))
                    ]))
            ]))
    ])

187
Value
  (non_rec, @.,
    [
      ((union, [ ], [ (s1, Type (t)); (s2, Type (t)) ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.Invalid_argument)
          ], Type (t))),
        Bind
          (?,
            Lift
              (?, [ Type (Counter) ],
                [
                  Type (Counter);
                  Type (NonTermination);
                  Type (OCaml.Invalid_argument)
                ],
                Apply (?, Variable (?, read_counter), [ Tuple (?) ])),
            Some x,
            Apply
              (?, Variable (?, union_rec),
                [ Variable (?, x); Variable (?, s1); Variable (?, s2) ])))
    ])

203
Value
  (rec, @coq_rec,
    [
      ((inter, [ ], [ (s1, Type (t)); (s2, Type (t)) ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.Invalid_argument);
            Type (OCaml.Not_found)
          ], Type (t))),
        Match
          (204, Tuple (204, Variable (204, s1), Variable (204, s2)),
            [
              (Tuple (Constructor (Empty), t2),
                Return (?, Constructor (205, Empty)));
              (Tuple (t1, Constructor (Empty)),
                Return (?, Constructor (206, Empty)));
              (Tuple (Constructor (Node, l1, v1, r1, Any), t2),
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          Type
                            (Counter);
                          Type
                            (NonTermination);
                          Type
                            (OCaml.Invalid_argument)
                        ],
                        [
                          Type
                            (Counter);
                          Type
                            (NonTermination);
                          Type
                            (OCaml.Invalid_argument);
                          Type
                            (OCaml.Not_found)
                        ],
                        Apply
                          (208,
                            Variable
                              (208,
                                split),
                            [
                              Variable
                                (208,
                                  v1);
                              Variable
                                (208,
                                  t2)
                            ])),
                    Some
                      x,
                    Match
                      (208,
                        Variable
                          (?,
                            x),
                        [
                          (Tuple
                            (l2,
                              Constructor
                                (false),
                              r2),
                            Bind
                              (?,
                                Apply
                                  (210,
                                    Variable
                                      (210,
                                        inter),
                                    [
                                      Variable
                                        (210,
                                          l1);
                                      Variable
                                        (210,
                                          l2)
                                    ]),
                                Some
                                  x,
                                Bind
                                  (?,
                                    Apply
                                      (210,
                                        Variable
                                          (210,
                                            inter),
                                        [
                                          Variable
                                            (210,
                                              r1);
                                          Variable
                                            (210,
                                              r2)
                                        ]),
                                    Some
                                      x_1,
                                    Apply
                                      (210,
                                        Variable
                                          (210,
                                            concat),
                                        [
                                          Variable
                                            (?,
                                              x);
                                          Variable
                                            (?,
                                              x_1)
                                        ]))));
                          (Tuple
                            (l2,
                              Constructor
                                (true),
                              r2),
                            Bind
                              (?,
                                Apply
                                  (212,
                                    Variable
                                      (212,
                                        inter),
                                    [
                                      Variable
                                        (212,
                                          l1);
                                      Variable
                                        (212,
                                          l2)
                                    ]),
                                Some
                                  x,
                                Bind
                                  (?,
                                    Apply
                                      (212,
                                        Variable
                                          (212,
                                            inter),
                                        [
                                          Variable
                                            (212,
                                              r1);
                                          Variable
                                            (212,
                                              r2)
                                        ]),
                                    Some
                                      x_1,
                                    Lift
                                      (?,
                                        [
                                          Type
                                            (Counter);
                                          Type
                                            (NonTermination);
                                          Type
                                            (OCaml.Invalid_argument)
                                        ],
                                        [
                                          Type
                                            (Counter);
                                          Type
                                            (NonTermination);
                                          Type
                                            (OCaml.Invalid_argument);
                                          Type
                                            (OCaml.Not_found)
                                        ],
                                        Apply
                                          (212,
                                            Variable
                                              (212,
                                                join),
                                            [
                                              Variable
                                                (?,
                                                  x);
                                              Variable
                                                (212,
                                                  v1);
                                              Variable
                                                (?,
                                                  x_1)
                                            ])))))
                        ])))
            ]))
    ])

215
Value
  (rec, @coq_rec,
    [
      ((diff, [ ], [ (s1, Type (t)); (s2, Type (t)) ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.Invalid_argument);
            Type (OCaml.Not_found)
          ], Type (t))),
        Match
          (216, Tuple (216, Variable (216, s1), Variable (216, s2)),
            [
              (Tuple (Constructor (Empty), t2),
                Return (?, Constructor (217, Empty)));
              (Tuple (t1, Constructor (Empty)),
                Return (?, Variable (218, t1)));
              (Tuple (Constructor (Node, l1, v1, r1, Any), t2),
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          Type
                            (Counter);
                          Type
                            (NonTermination);
                          Type
                            (OCaml.Invalid_argument)
                        ],
                        [
                          Type
                            (Counter);
                          Type
                            (NonTermination);
                          Type
                            (OCaml.Invalid_argument);
                          Type
                            (OCaml.Not_found)
                        ],
                        Apply
                          (220,
                            Variable
                              (220,
                                split),
                            [
                              Variable
                                (220,
                                  v1);
                              Variable
                                (220,
                                  t2)
                            ])),
                    Some
                      x,
                    Match
                      (220,
                        Variable
                          (?,
                            x),
                        [
                          (Tuple
                            (l2,
                              Constructor
                                (false),
                              r2),
                            Bind
                              (?,
                                Apply
                                  (222,
                                    Variable
                                      (222,
                                        diff),
                                    [
                                      Variable
                                        (222,
                                          l1);
                                      Variable
                                        (222,
                                          l2)
                                    ]),
                                Some
                                  x,
                                Bind
                                  (?,
                                    Apply
                                      (222,
                                        Variable
                                          (222,
                                            diff),
                                        [
                                          Variable
                                            (222,
                                              r1);
                                          Variable
                                            (222,
                                              r2)
                                        ]),
                                    Some
                                      x_1,
                                    Lift
                                      (?,
                                        [
                                          Type
                                            (Counter);
                                          Type
                                            (NonTermination);
                                          Type
                                            (OCaml.Invalid_argument)
                                        ],
                                        [
                                          Type
                                            (Counter);
                                          Type
                                            (NonTermination);
                                          Type
                                            (OCaml.Invalid_argument);
                                          Type
                                            (OCaml.Not_found)
                                        ],
                                        Apply
                                          (222,
                                            Variable
                                              (222,
                                                join),
                                            [
                                              Variable
                                                (?,
                                                  x);
                                              Variable
                                                (222,
                                                  v1);
                                              Variable
                                                (?,
                                                  x_1)
                                            ])))));
                          (Tuple
                            (l2,
                              Constructor
                                (true),
                              r2),
                            Bind
                              (?,
                                Apply
                                  (224,
                                    Variable
                                      (224,
                                        diff),
                                    [
                                      Variable
                                        (224,
                                          l1);
                                      Variable
                                        (224,
                                          l2)
                                    ]),
                                Some
                                  x,
                                Bind
                                  (?,
                                    Apply
                                      (224,
                                        Variable
                                          (224,
                                            diff),
                                        [
                                          Variable
                                            (224,
                                              r1);
                                          Variable
                                            (224,
                                              r2)
                                        ]),
                                    Some
                                      x_1,
                                    Apply
                                      (224,
                                        Variable
                                          (224,
                                            concat),
                                        [
                                          Variable
                                            (?,
                                              x);
                                          Variable
                                            (?,
                                              x_1)
                                        ]))))
                        ])))
            ]))
    ])

227
Inductive enumeration:
  ([ ], [ (End, [ ]); (More, [ Type (elt); Type (t); Type (enumeration) ]) ])

229
Value
  (rec, @coq_rec,
    [
      ((cons_enum, [ ], [ (s, Type (t)); (e, Type (enumeration)) ],
        Type (enumeration)),
        Match
          (230, Variable (230, s),
            [
              (Constructor (Empty), Variable (231, e));
              (Constructor (Node, l, v, r, Any),
                Apply
                  (232,
                    Variable
                      (232,
                        cons_enum),
                    [
                      Variable
                        (232,
                          l);
                      Constructor
                        (232,
                          More,
                          Variable
                            (232,
                              v),
                          Variable
                            (232,
                              r),
                          Variable
                            (232,
                              e))
                    ]))
            ]))
    ])

235
Value
  (rec, @.,
    [
      ((compare_aux_rec, [ ],
        [
          (counter, Type (nat));
          (e1, Type (enumeration));
          (e2, Type (enumeration))
        ], Monad ([ Type (NonTermination) ], Type (Z))),
        Match
          (?, Variable (?, counter),
            [
              (Constructor (O),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S, counter),
                Match
                  (236,
                    Tuple
                      (236,
                        Variable
                          (236,
                            e1),
                        Variable
                          (236,
                            e2)),
                    [
                      (Tuple
                        (Constructor
                          (End),
                          Constructor
                            (End)),
                        Return
                          (?,
                            Constant
                              (237,
                                Int(0))));
                      (Tuple
                        (Constructor
                          (End),
                          Any),
                        Return
                          (?,
                            Constant
                              (238,
                                Int(-1))));
                      (Tuple
                        (Any,
                          Constructor
                            (End)),
                        Return
                          (?,
                            Constant
                              (239,
                                Int(1))));
                      (Tuple
                        (Constructor
                          (More,
                            v1,
                            r1,
                            e1),
                          Constructor
                            (More,
                              v2,
                              r2,
                              e2)),
                        LetVar
                          ?
                          c
                          =
                          Apply
                            (241,
                              Variable
                                (241,
                                  Ord.compare),
                              [
                                Variable
                                  (241,
                                    v1);
                                Variable
                                  (241,
                                    v2)
                              ])
                          in
                        IfThenElse
                          (242,
                            Apply
                              (242,
                                Variable
                                  (242,
                                    nequiv_decb),
                                [
                                  Variable
                                    (242,
                                      c);
                                  Constant
                                    (242,
                                      Int(0))
                                ]),
                            Return
                              (?,
                                Variable
                                  (243,
                                    c)),
                            Apply
                              (244,
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        compare_aux_rec),
                                    [
                                      Variable
                                        (?,
                                          counter)
                                    ]),
                                [
                                  Apply
                                    (244,
                                      Variable
                                        (244,
                                          cons_enum),
                                      [
                                        Variable
                                          (244,
                                            r1);
                                        Variable
                                          (244,
                                            e1)
                                      ]);
                                  Apply
                                    (244,
                                      Variable
                                        (244,
                                          cons_enum),
                                      [
                                        Variable
                                          (244,
                                            r2);
                                        Variable
                                          (244,
                                            e2)
                                      ])
                                ])))
                    ]))
            ]))
    ])

235
Value
  (non_rec, @.,
    [
      ((compare_aux, [ ],
        [ (e1, Type (enumeration)); (e2, Type (enumeration)) ],
        Monad ([ Type (Counter); Type (NonTermination) ], Type (Z))),
        Bind
          (?,
            Lift
              (?, [ Type (Counter) ],
                [ Type (Counter); Type (NonTermination) ],
                Apply (?, Variable (?, read_counter), [ Tuple (?) ])),
            Some x,
            Lift
              (?, [ Type (NonTermination) ],
                [ Type (Counter); Type (NonTermination) ],
                Apply
                  (?, Variable (?, compare_aux_rec),
                    [
                      Variable (?, x);
                      Variable (?, e1);
                      Variable (?, e2)
                    ]))))
    ])

246
Value
  (non_rec, @.,
    [
      ((compare, [ ], [ (s1, Type (t)); (s2, Type (t)) ],
        Monad ([ Type (Counter); Type (NonTermination) ], Type (Z))),
        Apply
          (247, Variable (247, compare_aux),
            [
              Apply
                (247, Variable (247, cons_enum),
                  [
                    Variable
                      (247,
                        s1);
                    Constructor
                      (247,
                        End)
                  ]);
              Apply
                (247, Variable (247, cons_enum),
                  [
                    Variable
                      (247,
                        s2);
                    Constructor
                      (247,
                        End)
                  ])
            ]))
    ])

249
Value
  (non_rec, @.,
    [
      ((equal, [ ], [ (s1, Type (t)); (s2, Type (t)) ],
        Monad ([ Type (Counter); Type (NonTermination) ], Type (bool))),
        Bind
          (?,
            Apply
              (250, Variable (250, compare),
                [ Variable (250, s1); Variable (250, s2) ]), Some x,
            Return
              (?,
                Apply
                  (250, Variable (250, equiv_decb),
                    [ Variable (?, x); Constant (250, Int(0)) ]))))
    ])

252
Value
  (rec, @.,
    [
      ((subset_rec, [ ],
        [ (counter, Type (nat)); (s1, Type (t)); (s2, Type (t)) ],
        Monad ([ Type (NonTermination) ], Type (bool))),
        Match
          (?, Variable (?, counter),
            [
              (Constructor (O),
                Apply
                  (?,
                    Variable
                      (?,
                        not_terminated),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (S, counter),
                Match
                  (253,
                    Tuple
                      (253,
                        Variable
                          (253,
                            s1),
                        Variable
                          (253,
                            s2)),
                    [
                      (Tuple
                        (Constructor
                          (Empty),
                          Any),
                        Return
                          (?,
                            Constructor
                              (255,
                                true)));
                      (Tuple
                        (Any,
                          Constructor
                            (Empty)),
                        Return
                          (?,
                            Constructor
                              (257,
                                false)));
                      (Tuple
                        (Constructor
                          (Node,
                            l1,
                            v1,
                            r1,
                            Any),
                          Alias
                            (Constructor
                              (Node,
                                l2,
                                v2,
                                r2,
                                Any),
                              t2)),
                        LetVar
                          ?
                          c
                          =
                          Apply
                            (259,
                              Variable
                                (259,
                                  Ord.compare),
                              [
                                Variable
                                  (259,
                                    v1);
                                Variable
                                  (259,
                                    v2)
                              ])
                          in
                        IfThenElse
                          (260,
                            Apply
                              (260,
                                Variable
                                  (260,
                                    equiv_decb),
                                [
                                  Variable
                                    (260,
                                      c);
                                  Constant
                                    (260,
                                      Int(0))
                                ]),
                            Bind
                              (?,
                                Apply
                                  (261,
                                    Apply
                                      (?,
                                        Variable
                                          (?,
                                            subset_rec),
                                        [
                                          Variable
                                            (?,
                                              counter)
                                        ]),
                                    [
                                      Variable
                                        (261,
                                          l1);
                                      Variable
                                        (261,
                                          l2)
                                    ]),
                                Some
                                  x,
                                Bind
                                  (?,
                                    Apply
                                      (261,
                                        Apply
                                          (?,
                                            Variable
                                              (?,
                                                subset_rec),
                                            [
                                              Variable
                                                (?,
                                                  counter)
                                            ]),
                                        [
                                          Variable
                                            (261,
                                              r1);
                                          Variable
                                            (261,
                                              r2)
                                        ]),
                                    Some
                                      x_1,
                                    Return
                                      (?,
                                        Apply
                                          (261,
                                            Variable
                                              (261,
                                                andb),
                                            [
                                              Variable
                                                (?,
                                                  x);
                                              Variable
                                                (?,
                                                  x_1)
                                            ])))),
                            IfThenElse
                              (262,
                                Apply
                                  (262,
                                    Variable
                                      (262,
                                        OCaml.Pervasives.lt),
                                    [
                                      Variable
                                        (262,
                                          c);
                                      Constant
                                        (262,
                                          Int(0))
                                    ]),
                                Bind
                                  (?,
                                    Apply
                                      (263,
                                        Apply
                                          (?,
                                            Variable
                                              (?,
                                                subset_rec),
                                            [
                                              Variable
                                                (?,
                                                  counter)
                                            ]),
                                        [
                                          Constructor
                                            (263,
                                              Node,
                                              Variable
                                                (263,
                                                  l1),
                                              Variable
                                                (263,
                                                  v1),
                                              Constructor
                                                (263,
                                                  Empty),
                                              Constant
                                                (263,
                                                  Int(0)));
                                          Variable
                                            (263,
                                              l2)
                                        ]),
                                    Some
                                      x,
                                    Bind
                                      (?,
                                        Apply
                                          (263,
                                            Apply
                                              (?,
                                                Variable
                                                  (?,
                                                    subset_rec),
                                                [
                                                  Variable
                                                    (?,
                                                      counter)
                                                ]),
                                            [
                                              Variable
                                                (263,
                                                  r1);
                                              Variable
                                                (263,
                                                  t2)
                                            ]),
                                        Some
                                          x_1,
                                        Return
                                          (?,
                                            Apply
                                              (263,
                                                Variable
                                                  (263,
                                                    andb),
                                                [
                                                  Variable
                                                    (?,
                                                      x);
                                                  Variable
                                                    (?,
                                                      x_1)
                                                ])))),
                                Bind
                                  (?,
                                    Apply
                                      (265,
                                        Apply
                                          (?,
                                            Variable
                                              (?,
                                                subset_rec),
                                            [
                                              Variable
                                                (?,
                                                  counter)
                                            ]),
                                        [
                                          Constructor
                                            (265,
                                              Node,
                                              Constructor
                                                (265,
                                                  Empty),
                                              Variable
                                                (265,
                                                  v1),
                                              Variable
                                                (265,
                                                  r1),
                                              Constant
                                                (265,
                                                  Int(0)));
                                          Variable
                                            (265,
                                              r2)
                                        ]),
                                    Some
                                      x,
                                    Bind
                                      (?,
                                        Apply
                                          (265,
                                            Apply
                                              (?,
                                                Variable
                                                  (?,
                                                    subset_rec),
                                                [
                                                  Variable
                                                    (?,
                                                      counter)
                                                ]),
                                            [
                                              Variable
                                                (265,
                                                  l1);
                                              Variable
                                                (265,
                                                  t2)
                                            ]),
                                        Some
                                          x_1,
                                        Return
                                          (?,
                                            Apply
                                              (265,
                                                Variable
                                                  (265,
                                                    andb),
                                                [
                                                  Variable
                                                    (?,
                                                      x);
                                                  Variable
                                                    (?,
                                                      x_1)
                                                ])))))))
                    ]))
            ]))
    ])

252
Value
  (non_rec, @.,
    [
      ((subset, [ ], [ (s1, Type (t)); (s2, Type (t)) ],
        Monad ([ Type (Counter); Type (NonTermination) ], Type (bool))),
        Bind
          (?,
            Lift
              (?, [ Type (Counter) ],
                [ Type (Counter); Type (NonTermination) ],
                Apply (?, Variable (?, read_counter), [ Tuple (?) ])),
            Some x,
            Lift
              (?, [ Type (NonTermination) ],
                [ Type (Counter); Type (NonTermination) ],
                Apply
                  (?, Variable (?, subset_rec),
                    [
                      Variable (?, x);
                      Variable (?, s1);
                      Variable (?, s2)
                    ]))))
    ])

267
Value
  (rec, @coq_rec,
    [
      ((iter, [ A ], [ (f, (Type (elt) -> A)); (x, Type (t)) ], Type (unit)),
        Match
          (?, Variable (?, x),
            [
              (Constructor (Empty), Constructor (268, tt));
              (Constructor (Node, l, v, r, Any),
                Apply
                  (269,
                    Variable
                      (269,
                        iter),
                    [
                      Variable
                        (269,
                          f);
                      Variable
                        (269,
                          r)
                    ]))
            ]))
    ])

272
Value
  (rec, @coq_rec,
    [
      ((fold, [ A ],
        [ (f, (Type (elt) -> (A -> A))); (s, Type (t)); (accu, A) ], A),
        Match
          (273, Variable (273, s),
            [
              (Constructor (Empty), Variable (274, accu));
              (Constructor (Node, l, v, r, Any),
                Apply
                  (275,
                    Variable
                      (275,
                        fold),
                    [
                      Variable
                        (275,
                          f);
                      Variable
                        (275,
                          r);
                      Apply
                        (275,
                          Variable
                            (275,
                              f),
                          [
                            Variable
                              (275,
                                v);
                            Apply
                              (275,
                                Variable
                                  (275,
                                    fold),
                                [
                                  Variable
                                    (275,
                                      f);
                                  Variable
                                    (275,
                                      l);
                                  Variable
                                    (275,
                                      accu)
                                ])
                          ])
                    ]))
            ]))
    ])

278
Value
  (rec, @coq_rec,
    [
      ((for_all, [ ], [ (p, (Type (elt) -> Type (bool))); (x, Type (t)) ],
        Type (bool)),
        Match
          (?, Variable (?, x),
            [
              (Constructor (Empty), Constructor (279, true));
              (Constructor (Node, l, v, r, Any),
                Apply
                  (280,
                    Variable
                      (280,
                        andb),
                    [
                      Apply
                        (280,
                          Variable
                            (280,
                              p),
                          [
                            Variable
                              (280,
                                v)
                          ]);
                      Apply
                        (280,
                          Variable
                            (280,
                              andb),
                          [
                            Apply
                              (280,
                                Variable
                                  (280,
                                    for_all),
                                [
                                  Variable
                                    (280,
                                      p);
                                  Variable
                                    (280,
                                      l)
                                ]);
                            Apply
                              (280,
                                Variable
                                  (280,
                                    for_all),
                                [
                                  Variable
                                    (280,
                                      p);
                                  Variable
                                    (280,
                                      r)
                                ])
                          ])
                    ]))
            ]))
    ])

283
Value
  (rec, @coq_rec,
    [
      ((exists_, [ ], [ (p, (Type (elt) -> Type (bool))); (x, Type (t)) ],
        Type (bool)),
        Match
          (?, Variable (?, x),
            [
              (Constructor (Empty), Constructor (284, false));
              (Constructor (Node, l, v, r, Any),
                Apply
                  (285,
                    Variable
                      (285,
                        orb),
                    [
                      Apply
                        (285,
                          Variable
                            (285,
                              p),
                          [
                            Variable
                              (285,
                                v)
                          ]);
                      Apply
                        (285,
                          Variable
                            (285,
                              orb),
                          [
                            Apply
                              (285,
                                Variable
                                  (285,
                                    exists_),
                                [
                                  Variable
                                    (285,
                                      p);
                                  Variable
                                    (285,
                                      l)
                                ]);
                            Apply
                              (285,
                                Variable
                                  (285,
                                    exists_),
                                [
                                  Variable
                                    (285,
                                      p);
                                  Variable
                                    (285,
                                      r)
                                ])
                          ])
                    ]))
            ]))
    ])

288
Value
  (rec, @coq_rec,
    [
      ((filter, [ ], [ (p, (Type (elt) -> Type (bool))); (x, Type (t)) ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.Invalid_argument);
            Type (OCaml.Not_found)
          ], Type (t))),
        Match
          (?, Variable (?, x),
            [
              (Constructor (Empty),
                Return (?, Constructor (289, Empty)));
              (Constructor (Node, l, v, r, Any),
                Bind
                  (?,
                    Apply
                      (292,
                        Variable
                          (292,
                            filter),
                        [
                          Variable
                            (292,
                              p);
                          Variable
                            (292,
                              l)
                        ]),
                    Some
                      l',
                    LetVar
                      ?
                      pv
                      =
                      Apply
                        (293,
                          Variable
                            (293,
                              p),
                          [
                            Variable
                              (293,
                                v)
                          ])
                      in
                    Bind
                      (?,
                        Apply
                          (294,
                            Variable
                              (294,
                                filter),
                            [
                              Variable
                                (294,
                                  p);
                              Variable
                                (294,
                                  r)
                            ]),
                        Some
                          r',
                        IfThenElse
                          (295,
                            Variable
                              (295,
                                pv),
                            Lift
                              (?,
                                [
                                  Type
                                    (Counter);
                                  Type
                                    (NonTermination);
                                  Type
                                    (OCaml.Invalid_argument)
                                ],
                                [
                                  Type
                                    (Counter);
                                  Type
                                    (NonTermination);
                                  Type
                                    (OCaml.Invalid_argument);
                                  Type
                                    (OCaml.Not_found)
                                ],
                                Apply
                                  (295,
                                    Variable
                                      (295,
                                        join),
                                    [
                                      Variable
                                        (295,
                                          l');
                                      Variable
                                        (295,
                                          v);
                                      Variable
                                        (295,
                                          r')
                                    ])),
                            Apply
                              (295,
                                Variable
                                  (295,
                                    concat),
                                [
                                  Variable
                                    (295,
                                      l');
                                  Variable
                                    (295,
                                      r')
                                ])))))
            ]))
    ])

298
Value
  (rec, @coq_rec,
    [
      ((partition, [ ], [ (p, (Type (elt) -> Type (bool))); (x, Type (t)) ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.Invalid_argument);
            Type (OCaml.Not_found)
          ], (Type (t) * Type (t)))),
        Match
          (?, Variable (?, x),
            [
              (Constructor (Empty),
                Return
                  (?,
                    Tuple
                      (299,
                        Constructor
                          (299,
                            Empty),
                        Constructor
                          (299,
                            Empty))));
              (Constructor (Node, l, v, r, Any),
                Bind
                  (?,
                    Apply
                      (302,
                        Variable
                          (302,
                            partition),
                        [
                          Variable
                            (302,
                              p);
                          Variable
                            (302,
                              l)
                        ]),
                    Some
                      x_1,
                    Match
                      (302,
                        Variable
                          (?,
                            x_1),
                        [
                          (Tuple
                            (lt,
                              lf),
                            LetVar
                              ?
                              pv
                              =
                              Apply
                                (303,
                                  Variable
                                    (303,
                                      p),
                                  [
                                    Variable
                                      (303,
                                        v)
                                  ])
                              in
                            Bind
                              (?,
                                Apply
                                  (304,
                                    Variable
                                      (304,
                                        partition),
                                    [
                                      Variable
                                        (304,
                                          p);
                                      Variable
                                        (304,
                                          r)
                                    ]),
                                Some
                                  x_1,
                                Match
                                  (304,
                                    Variable
                                      (?,
                                        x_1),
                                    [
                                      (Tuple
                                        (rt,
                                          rf),
                                        IfThenElse
                                          (305,
                                            Variable
                                              (305,
                                                pv),
                                            Bind
                                              (?,
                                                Lift
                                                  (?,
                                                    [
                                                      Type
                                                        (Counter);
                                                      Type
                                                        (NonTermination);
                                                      Type
                                                        (OCaml.Invalid_argument)
                                                    ],
                                                    [
                                                      Type
                                                        (Counter);
                                                      Type
                                                        (NonTermination);
                                                      Type
                                                        (OCaml.Invalid_argument);
                                                      Type
                                                        (OCaml.Not_found)
                                                    ],
                                                    Apply
                                                      (306,
                                                        Variable
                                                          (306,
                                                            join),
                                                        [
                                                          Variable
                                                            (306,
                                                              lt);
                                                          Variable
                                                            (306,
                                                              v);
                                                          Variable
                                                            (306,
                                                              rt)
                                                        ])),
                                                Some
                                                  x_1,
                                                Bind
                                                  (?,
                                                    Apply
                                                      (306,
                                                        Variable
                                                          (306,
                                                            concat),
                                                        [
                                                          Variable
                                                            (306,
                                                              lf);
                                                          Variable
                                                            (306,
                                                              rf)
                                                        ]),
                                                    Some
                                                      x_2,
                                                    Return
                                                      (?,
                                                        Tuple
                                                          (306,
                                                            Variable
                                                              (?,
                                                                x_1),
                                                            Variable
                                                              (?,
                                                                x_2))))),
                                            Bind
                                              (?,
                                                Apply
                                                  (307,
                                                    Variable
                                                      (307,
                                                        concat),
                                                    [
                                                      Variable
                                                        (307,
                                                          lt);
                                                      Variable
                                                        (307,
                                                          rt)
                                                    ]),
                                                Some
                                                  x_1,
                                                Bind
                                                  (?,
                                                    Lift
                                                      (?,
                                                        [
                                                          Type
                                                            (Counter);
                                                          Type
                                                            (NonTermination);
                                                          Type
                                                            (OCaml.Invalid_argument)
                                                        ],
                                                        [
                                                          Type
                                                            (Counter);
                                                          Type
                                                            (NonTermination);
                                                          Type
                                                            (OCaml.Invalid_argument);
                                                          Type
                                                            (OCaml.Not_found)
                                                        ],
                                                        Apply
                                                          (307,
                                                            Variable
                                                              (307,
                                                                join),
                                                            [
                                                              Variable
                                                                (307,
                                                                  lf);
                                                              Variable
                                                                (307,
                                                                  v);
                                                              Variable
                                                                (307,
                                                                  rf)
                                                            ])),
                                                    Some
                                                      x_2,
                                                    Return
                                                      (?,
                                                        Tuple
                                                          (307,
                                                            Variable
                                                              (?,
                                                                x_1),
                                                            Variable
                                                              (?,
                                                                x_2)))))))
                                    ])))
                        ])))
            ]))
    ])

310
Value
  (rec, @coq_rec,
    [
      ((cardinal, [ ], [ (x, Type (t)) ], Type (Z)),
        Match
          (?, Variable (?, x),
            [
              (Constructor (Empty), Constant (311, Int(0)));
              (Constructor (Node, l, v, r, Any),
                Apply
                  (312,
                    Variable
                      (312,
                        Z.add),
                    [
                      Apply
                        (312,
                          Variable
                            (312,
                              Z.add),
                          [
                            Apply
                              (312,
                                Variable
                                  (312,
                                    cardinal),
                                [
                                  Variable
                                    (312,
                                      l)
                                ]);
                            Constant
                              (312,
                                Int(1))
                          ]);
                      Apply
                        (312,
                          Variable
                            (312,
                              cardinal),
                          [
                            Variable
                              (312,
                                r)
                          ])
                    ]))
            ]))
    ])

315
Value
  (rec, @coq_rec,
    [
      ((elements_aux, [ ], [ (accu, Type (list, Type (elt))); (x, Type (t)) ],
        Type (list, Type (elt))),
        Match
          (?, Variable (?, x),
            [
              (Constructor (Empty), Variable (316, accu));
              (Constructor (Node, l, v, r, Any),
                Apply
                  (317,
                    Variable
                      (317,
                        elements_aux),
                    [
                      Constructor
                        (317,
                          cons,
                          Variable
                            (317,
                              v),
                          Apply
                            (317,
                              Variable
                                (317,
                                  elements_aux),
                              [
                                Variable
                                  (317,
                                    accu);
                                Variable
                                  (317,
                                    r)
                              ]));
                      Variable
                        (317,
                          l)
                    ]))
            ]))
    ])

320
Value
  (non_rec, @.,
    [
      ((elements, [ ], [ (s, Type (t)) ], Type (list, Type (elt))),
        Apply
          (321, Variable (321, elements_aux),
            [ Constructor (321, []); Variable (321, s) ]))
    ])

323
Value
  (non_rec, @.,
    [
      ((choose, [ ], [ ],
        (Type (t) -> Monad ([ Type (OCaml.Not_found) ], Type (elt)))),
        Variable (323, min_elt))
    ])

325
Value
  (rec, @coq_rec,
    [
      ((find, [ ], [ (x, Type (Ord.t)); (x_1, Type (t)) ],
        Monad ([ Type (OCaml.Not_found) ], Type (elt))),
        Match
          (?, Variable (?, x_1),
            [
              (Constructor (Empty),
                Apply
                  (326,
                    Variable
                      (326,
                        OCaml.raise_Not_found),
                    [
                      Tuple
                        (?)
                    ]));
              (Constructor (Node, l, v, r, Any),
                LetVar ? c =
                  Apply
                    (328,
                      Variable
                        (328,
                          Ord.compare),
                      [
                        Variable
                          (328,
                            x);
                        Variable
                          (328,
                            v)
                      ])
                  in
                IfThenElse
                  (329,
                    Apply
                      (329,
                        Variable
                          (329,
                            equiv_decb),
                        [
                          Variable
                            (329,
                              c);
                          Constant
                            (329,
                              Int(0))
                        ]),
                    Return
                      (?,
                        Variable
                          (329,
                            v)),
                    Apply
                      (330,
                        Variable
                          (330,
                            find),
                        [
                          Variable
                            (330,
                              x);
                          IfThenElse
                            (330,
                              Apply
                                (330,
                                  Variable
                                    (330,
                                      OCaml.Pervasives.lt),
                                  [
                                    Variable
                                      (330,
                                        c);
                                    Constant
                                      (330,
                                        Int(0))
                                  ]),
                              Variable
                                (330,
                                  l),
                              Variable
                                (330,
                                  r))
                        ])))
            ]))
    ])

333
Value
  (non_rec, @.,
    [
      ((of_sorted_list, [ ], [ (l, Type (list, Type (elt))) ],
        Monad
          ([
            Type (Counter);
            Type (NonTermination);
            Type (OCaml.Assert_failure)
          ], Type (t))),
        LetFun 334
          (rec, @.,
            [
              ((sub_rec, [ ],
                [
                  (counter, Type (nat));
                  (n, Type (Z));
                  (l,
                    Type
                      (list,
                        Type
                          (elt)))
                ],
                Monad
                  ([
                    Type
                      (NonTermination);
                    Type
                      (OCaml.Assert_failure)
                  ],
                    (Type
                      (t)
                      *
                      Type
                        (list,
                          Type
                            (elt))))),
                Match
                  (?,
                    Variable
                      (?,
                        counter),
                    [
                      (Constructor
                        (O),
                        Lift
                          (?,
                            [
                              Type
                                (NonTermination)
                            ],
                            [
                              Type
                                (NonTermination);
                              Type
                                (OCaml.Assert_failure)
                            ],
                            Apply
                              (?,
                                Variable
                                  (?,
                                    not_terminated),
                                [
                                  Tuple
                                    (?)
                                ])));
                      (Constructor
                        (S,
                          counter),
                        Match
                          (335,
                            Tuple
                              (335,
                                Variable
                                  (335,
                                    n),
                                Variable
                                  (335,
                                    l)),
                            [
                              (Tuple
                                (Int(0),
                                  l),
                                Return
                                  (?,
                                    Tuple
                                      (336,
                                        Constructor
                                          (336,
                                            Empty),
                                        Variable
                                          (336,
                                            l))));
                              (Tuple
                                (Int(1),
                                  Constructor
                                    (cons,
                                      x0,
                                      l)),
                                Return
                                  (?,
                                    Tuple
                                      (337,
                                        Constructor
                                          (337,
                                            Node,
                                            Constructor
                                              (337,
                                                Empty),
                                            Variable
                                              (337,
                                                x0),
                                            Constructor
                                              (337,
                                                Empty),
                                            Constant
                                              (337,
                                                Int(1))),
                                        Variable
                                          (337,
                                            l))));
                              (Tuple
                                (Int(2),
                                  Constructor
                                    (cons,
                                      x0,
                                      Constructor
                                        (cons,
                                          x1,
                                          l))),
                                Return
                                  (?,
                                    Tuple
                                      (338,
                                        Constructor
                                          (338,
                                            Node,
                                            Constructor
                                              (338,
                                                Node,
                                                Constructor
                                                  (338,
                                                    Empty),
                                                Variable
                                                  (338,
                                                    x0),
                                                Constructor
                                                  (338,
                                                    Empty),
                                                Constant
                                                  (338,
                                                    Int(1))),
                                            Variable
                                              (338,
                                                x1),
                                            Constructor
                                              (338,
                                                Empty),
                                            Constant
                                              (338,
                                                Int(2))),
                                        Variable
                                          (338,
                                            l))));
                              (Tuple
                                (Int(3),
                                  Constructor
                                    (cons,
                                      x0,
                                      Constructor
                                        (cons,
                                          x1,
                                          Constructor
                                            (cons,
                                              x2,
                                              l)))),
                                Return
                                  (?,
                                    Tuple
                                      (339,
                                        Constructor
                                          (339,
                                            Node,
                                            Constructor
                                              (339,
                                                Node,
                                                Constructor
                                                  (339,
                                                    Empty),
                                                Variable
                                                  (339,
                                                    x0),
                                                Constructor
                                                  (339,
                                                    Empty),
                                                Constant
                                                  (339,
                                                    Int(1))),
                                            Variable
                                              (339,
                                                x1),
                                            Constructor
                                              (339,
                                                Node,
                                                Constructor
                                                  (339,
                                                    Empty),
                                                Variable
                                                  (339,
                                                    x2),
                                                Constructor
                                                  (339,
                                                    Empty),
                                                Constant
                                                  (339,
                                                    Int(1))),
                                            Constant
                                              (339,
                                                Int(2))),
                                        Variable
                                          (339,
                                            l))));
                              (Tuple
                                (n,
                                  l),
                                LetVar
                                  ?
                                  nl
                                  =
                                  Apply
                                    (341,
                                      Variable
                                        (341,
                                          Z.div),
                                      [
                                        Variable
                                          (341,
                                            n);
                                        Constant
                                          (341,
                                            Int(2))
                                      ])
                                  in
                                Bind
                                  (?,
                                    Apply
                                      (342,
                                        Apply
                                          (?,
                                            Variable
                                              (?,
                                                sub_rec),
                                            [
                                              Variable
                                                (?,
                                                  counter)
                                            ]),
                                        [
                                          Variable
                                            (342,
                                              nl);
                                          Variable
                                            (342,
                                              l)
                                        ]),
                                    Some
                                      x,
                                    Match
                                      (342,
                                        Variable
                                          (?,
                                            x),
                                        [
                                          (Tuple
                                            (left_,
                                              l),
                                            Match
                                              (343,
                                                Variable
                                                  (343,
                                                    l),
                                                [
                                                  (Constructor
                                                    ([]),
                                                    Lift
                                                      (?,
                                                        [
                                                          Type
                                                            (OCaml.Assert_failure)
                                                        ],
                                                        [
                                                          Type
                                                            (NonTermination);
                                                          Type
                                                            (OCaml.Assert_failure)
                                                        ],
                                                        Apply
                                                          (344,
                                                            Variable
                                                              (344,
                                                                OCaml.assert),
                                                            [
                                                              Constructor
                                                                (344,
                                                                  false)
                                                            ])));
                                                  (Constructor
                                                    (cons,
                                                      mid,
                                                      l),
                                                    Bind
                                                      (?,
                                                        Apply
                                                          (346,
                                                            Apply
                                                              (?,
                                                                Variable
                                                                  (?,
                                                                    sub_rec),
                                                                [
                                                                  Variable
                                                                    (?,
                                                                      counter)
                                                                ]),
                                                            [
                                                              Apply
                                                                (346,
                                                                  Variable
                                                                    (346,
                                                                      Z.sub),
                                                                  [
                                                                    Apply
                                                                      (346,
                                                                        Variable
                                                                          (346,
                                                                            Z.sub),
                                                                        [
                                                                          Variable
                                                                            (346,
                                                                              n);
                                                                          Variable
                                                                            (346,
                                                                              nl)
                                                                        ]);
                                                                    Constant
                                                                      (346,
                                                                        Int(1))
                                                                  ]);
                                                              Variable
                                                                (346,
                                                                  l)
                                                            ]),
                                                        Some
                                                          x,
                                                        Match
                                                          (346,
                                                            Variable
                                                              (?,
                                                                x),
                                                            [
                                                              (Tuple
                                                                (right_,
                                                                  l),
                                                                Return
                                                                  (?,
                                                                    Tuple
                                                                      (347,
                                                                        Apply
                                                                          (347,
                                                                            Variable
                                                                              (347,
                                                                                create),
                                                                            [
                                                                              Variable
                                                                                (347,
                                                                                  left_);
                                                                              Variable
                                                                                (347,
                                                                                  mid);
                                                                              Variable
                                                                                (347,
                                                                                  right_)
                                                                            ]),
                                                                        Variable
                                                                          (347,
                                                                            l))))
                                                            ])))
                                                ]))
                                        ])))
                            ]))
                    ]))
            ]) in
        LetFun 334
          (non_rec, @.,
            [
              ((sub, [ ],
                [
                  (n, Type (Z));
                  (l,
                    Type
                      (list,
                        Type
                          (elt)))
                ],
                Monad
                  ([
                    Type
                      (Counter);
                    Type
                      (NonTermination);
                    Type
                      (OCaml.Assert_failure)
                  ],
                    (Type
                      (t)
                      *
                      Type
                        (list,
                          Type
                            (elt))))),
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          Type
                            (Counter)
                        ],
                        [
                          Type
                            (Counter);
                          Type
                            (NonTermination);
                          Type
                            (OCaml.Assert_failure)
                        ],
                        Apply
                          (?,
                            Variable
                              (?,
                                read_counter),
                            [
                              Tuple
                                (?)
                            ])),
                    Some
                      x,
                    Lift
                      (?,
                        [
                          Type
                            (NonTermination);
                          Type
                            (OCaml.Assert_failure)
                        ],
                        [
                          Type
                            (Counter);
                          Type
                            (NonTermination);
                          Type
                            (OCaml.Assert_failure)
                        ],
                        Apply
                          (?,
                            Variable
                              (?,
                                sub_rec),
                            [
                              Variable
                                (?,
                                  x);
                              Variable
                                (?,
                                  n);
                              Variable
                                (?,
                                  l)
                            ]))))
            ]) in
        Bind
          (?,
            Apply
              (349, Variable (349, sub),
                [
                  Apply
                    (349,
                      Variable
                        (349,
                          OCaml.List.length),
                      [
                        Variable
                          (349,
                            l)
                      ]);
                  Variable (349, l)
                ]), Some x,
            Return
              (?, Apply (349, Variable (349, fst), [ Variable (?, x) ]))))
    ])
