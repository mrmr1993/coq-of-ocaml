3 Exception (Error, raise_Error, ())

5
Value
  (non_rec, @.,
    [
      ((x1, [ ], [ ], Type (Z)),
        Match
          (6,
            Run
              (?, Error, [ ],
                Apply (6, Variable (6, raise_Error), [ Tuple (?) ])),
            [
              (Constructor (inl, x), Variable (?, x));
              (Constructor (inr, Tuple ()), Constant (7, Int(12)))
            ]))
    ])

9
Value
  (non_rec, @.,
    [
      ((x2, [ A; B ], [ (x, A) ], Monad ([ Type (OCaml.Failure) ], B)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Match
                  (10,
                    Run
                      (?,
                        Error,
                        [
                        ],
                        Apply
                          (10,
                            Variable
                              (10,
                                raise_Error),
                            [
                              Tuple
                                (?)
                            ])),
                    [
                      (Constructor
                        (inl,
                          x),
                        Return
                          (?,
                            Variable
                              (?,
                                x)));
                      (Constructor
                        (inr,
                          Tuple
                            ()),
                        Apply
                          (11,
                            Variable
                              (11,
                                OCaml.Pervasives.failwith),
                            [
                              Constant
                                (11,
                                  String("arg"))
                            ]))
                    ]))
            ]))
    ])

13
Value
  (non_rec, @.,
    [
      ((x3, [ ], [ (b, Type (bool)) ],
        Monad ([ Type (OCaml.Failure) ], Type (Z))),
        Bind
          (?,
            Run
              (?, Error, [ Type (Error); Type (OCaml.Failure) ],
                IfThenElse
                  (14, Variable (14, b),
                    Lift
                      (?, [ Type (OCaml.Failure) ],
                        [ Type (Error); Type (OCaml.Failure) ],
                        Apply
                          (14,
                            Variable
                              (14,
                                OCaml.Pervasives.failwith),
                            [
                              Constant
                                (14,
                                  String("arg"))
                            ])),
                    Lift
                      (?, [ Type (Error) ],
                        [ Type (Error); Type (OCaml.Failure) ],
                        Apply
                          (14, Variable (14, raise_Error),
                            [ Tuple (?) ])))), Some x,
            Match
              (14, Variable (?, x),
                [
                  (Constructor (inl, x),
                    Return
                      (?,
                        Variable
                          (?,
                            x)));
                  (Constructor (inr, Tuple ()),
                    Return
                      (?,
                        Constant
                          (15,
                            Int(12))))
                ])))
    ])
