Require [ OCaml.List ]

3
Value
  (non_rec, @.,
    [ ((l1, [ ], [ ], Type (list/1, Type (Z/1))), Constructor (3, []/1)) ])

4
Value
  (non_rec, @.,
    [
      ((l2, [ ], [ ], Type (list/1, Type (Z/1))),
        Constructor
          (4, cons/1, Constant (4, Int(1)),
            Constructor
              (4, cons/1, Constant (4, Int(2)),
                Constructor
                  (4, cons/1, Constant (4, Int(3)),
                    Constructor
                      (4, cons/1, Constant (4, Int(4)),
                        Constructor (4, []/1))))))
    ])

5
Value
  (non_rec, @.,
    [
      ((l3, [ ], [ ], Type (list/1, (Type (Z/1) * Type (string/1)))),
        Constructor
          (5, cons/1,
            Tuple (5, Constant (5, Int(1)), Constant (5, String("one"))),
            Constructor
              (5, cons/1,
                Tuple
                  (5, Constant (5, Int(2)),
                    Constant (5, String("two"))),
                Constructor (5, []/1))))
    ])

7
Value
  (non_rec, @.,
    [
      ((s1, [ ], [ ], Type (Z/1)),
        Apply (7, Variable (7, OCaml.List.length/-1), [ Variable (7, l1/0) ]))
    ])

8
Value
  (non_rec, @.,
    [
      ((s2, [ ], [ ], Type (Z/1)),
        Apply (8, Variable (8, OCaml.List.length/-1), [ Variable (8, l2/0) ]))
    ])

9
Value
  (non_rec, @.,
    [
      ((h, [ A ], [ (x, A) ], Type (Z/1)),
        Match
          (?, Variable (?, x/0),
            [
              (Any,
                Apply
                  (9,
                    Variable
                      (9,
                        OCaml.List.hd/-1),
                    [
                      Variable
                        (9,
                          l2/0)
                    ]))
            ]))
    ])

10
Value
  (non_rec, @.,
    [
      ((t, [ A ], [ (x, A) ], Type (list/1, Type (Z/1))),
        Match
          (?, Variable (?, x/0),
            [
              (Any,
                Apply
                  (10,
                    Variable
                      (10,
                        OCaml.List.tl/-1),
                    [
                      Variable
                        (10,
                          l2/0)
                    ]))
            ]))
    ])

11
Value
  (non_rec, @.,
    [
      ((x, [ A ], [ (x, A) ], Type (Z/1)),
        Match
          (?, Variable (?, x/0),
            [
              (Any,
                Apply
                  (11,
                    Variable
                      (11,
                        OCaml.List.nth/-1),
                    [
                      Variable
                        (11,
                          l2/0);
                      Constant
                        (11,
                          Int(1))
                    ]))
            ]))
    ])

12
Value
  (non_rec, @.,
    [
      ((rl, [ ], [ ], Type (list/1, Type (Z/1))),
        Apply (12, Variable (12, OCaml.List.rev/-1), [ Variable (12, l2/0) ]))
    ])

13
Value
  (non_rec, @.,
    [
      ((ll, [ ], [ ], Type (list/1, Type (Z/1))),
        Apply
          (13, Variable (13, OCaml.List.append/-1),
            [ Variable (13, l2/0); Variable (13, l2/0) ]))
    ])

14
Value
  (non_rec, @.,
    [
      ((rll, [ ], [ ], Type (list/1, Type (Z/1))),
        Apply
          (14, Variable (14, OCaml.List.rev_append/-1),
            [ Variable (14, l2/0); Variable (14, l2/0) ]))
    ])

15
Value
  (non_rec, @.,
    [
      ((lc, [ ], [ ], Type (list/1, Type (Z/1))),
        Apply
          (15, Variable (15, OCaml.List.concat/-1),
            [
              Constructor
                (15, cons/1, Variable (15, l1/0),
                  Constructor
                    (15,
                      cons/1,
                      Variable
                        (15,
                          l2/0),
                      Constructor
                        (15,
                          cons/1,
                          Variable
                            (15,
                              l1/0),
                          Constructor
                            (15,
                              cons/1,
                              Variable
                                (15,
                                  l2/0),
                              Constructor
                                (15,
                                  []/1)))))
            ]))
    ])

16
Value
  (non_rec, @.,
    [
      ((lf, [ ], [ ], Type (list/1, Type (Z/1))),
        Apply
          (16, Variable (16, OCaml.List.flatten/-1),
            [
              Constructor
                (16, cons/1, Variable (16, l1/0),
                  Constructor
                    (16,
                      cons/1,
                      Variable
                        (16,
                          l2/0),
                      Constructor
                        (16,
                          cons/1,
                          Variable
                            (16,
                              l1/0),
                          Constructor
                            (16,
                              cons/1,
                              Variable
                                (16,
                                  l2/0),
                              Constructor
                                (16,
                                  []/1)))))
            ]))
    ])

21
Value
  (non_rec, @.,
    [
      ((m, [ ], [ ], Type (list/1, Type (Z/1))),
        Apply
          (21, Variable (21, OCaml.List.map/-1),
            [
              Function
                (21, x,
                  Apply
                    (21,
                      Variable
                        (21,
                          Z.add/1),
                      [
                        Variable
                          (21,
                            x/0);
                        Constant
                          (21,
                            Int(1))
                      ]));
              Variable (21, l2/0)
            ]))
    ])

22
Value
  (non_rec, @.,
    [
      ((mi, [ ], [ ], Type (list/1, Type (Z/1))),
        Apply
          (22, Variable (22, OCaml.List.mapi/-1),
            [
              Function
                (22, i,
                  Function
                    (22,
                      x,
                      Apply
                        (22,
                          Variable
                            (22,
                              Z.add/1),
                          [
                            Variable
                              (22,
                                x/0);
                            Variable
                              (22,
                                i/0)
                          ])));
              Variable (22, l2/0)
            ]))
    ])

23
Value
  (non_rec, @.,
    [
      ((rm, [ ], [ ], Type (list/1, Type (Z/1))),
        Apply
          (23, Variable (23, OCaml.List.rev_map/-1),
            [
              Function
                (23, x,
                  Apply
                    (23,
                      Variable
                        (23,
                          Z.add/1),
                      [
                        Variable
                          (23,
                            x/0);
                        Constant
                          (23,
                            Int(1))
                      ]));
              Variable (23, l2/0)
            ]))
    ])

24
Value
  (non_rec, @.,
    [
      ((fl, [ ], [ ], Type (Z/1)),
        Apply
          (24, Variable (24, OCaml.List.fold_left/-1),
            [
              Function
                (24, s,
                  Function
                    (24,
                      x,
                      Apply
                        (24,
                          Variable
                            (24,
                              Z.add/1),
                          [
                            Variable
                              (24,
                                s/0);
                            Variable
                              (24,
                                x/0)
                          ])));
              Constant (24, Int(0));
              Variable (24, l2/0)
            ]))
    ])

25
Value
  (non_rec, @.,
    [
      ((fr, [ ], [ ], Type (Z/1)),
        Apply
          (25, Variable (25, OCaml.List.fold_right/-1),
            [
              Function
                (25, x,
                  Function
                    (25,
                      s,
                      Apply
                        (25,
                          Variable
                            (25,
                              Z.add/1),
                          [
                            Variable
                              (25,
                                s/0);
                            Variable
                              (25,
                                x/0)
                          ])));
              Variable (25, l2/0);
              Constant (25, Int(0))
            ]))
    ])

29
Value
  (non_rec, @.,
    [
      ((m2, [ A ], [ (x_1, A) ], Type (list/1, Type (Z/1))),
        Match
          (?, Variable (?, x_1/0),
            [
              (Any,
                Apply
                  (29,
                    Variable
                      (29,
                        OCaml.List.map2/-1),
                    [
                      Function
                        (29,
                          x,
                          Function
                            (29,
                              y,
                              Apply
                                (29,
                                  Variable
                                    (29,
                                      Z.add/1),
                                  [
                                    Variable
                                      (29,
                                        x/0);
                                    Variable
                                      (29,
                                        y/0)
                                  ])));
                      Variable
                        (29,
                          l2/0);
                      Variable
                        (29,
                          l2/0)
                    ]))
            ]))
    ])

30
Value
  (non_rec, @.,
    [
      ((rm2, [ A ], [ (x_1, A) ], Type (list/1, Type (Z/1))),
        Match
          (?, Variable (?, x_1/0),
            [
              (Any,
                Apply
                  (30,
                    Variable
                      (30,
                        OCaml.List.rev_map2/-1),
                    [
                      Function
                        (30,
                          x,
                          Function
                            (30,
                              y,
                              Apply
                                (30,
                                  Variable
                                    (30,
                                      Z.add/1),
                                  [
                                    Variable
                                      (30,
                                        x/0);
                                    Variable
                                      (30,
                                        y/0)
                                  ])));
                      Variable
                        (30,
                          l2/0);
                      Variable
                        (30,
                          l2/0)
                    ]))
            ]))
    ])

31
Value
  (non_rec, @.,
    [
      ((fl2, [ A ], [ (x_1, A) ], Type (Z/1)),
        Match
          (?, Variable (?, x_1/0),
            [
              (Any,
                Apply
                  (31,
                    Variable
                      (31,
                        OCaml.List.fold_left2/-1),
                    [
                      Function
                        (31,
                          s,
                          Function
                            (31,
                              x,
                              Function
                                (31,
                                  y,
                                  Apply
                                    (31,
                                      Variable
                                        (31,
                                          Z.add/1),
                                      [
                                        Apply
                                          (31,
                                            Variable
                                              (31,
                                                Z.add/1),
                                            [
                                              Variable
                                                (31,
                                                  s/0);
                                              Variable
                                                (31,
                                                  x/0)
                                            ]);
                                        Variable
                                          (31,
                                            y/0)
                                      ]))));
                      Constant
                        (31,
                          Int(0));
                      Variable
                        (31,
                          l2/0);
                      Variable
                        (31,
                          l2/0)
                    ]))
            ]))
    ])

32
Value
  (non_rec, @.,
    [
      ((fr2, [ A ], [ (x_1, A) ], Type (Z/1)),
        Match
          (?, Variable (?, x_1/0),
            [
              (Any,
                Apply
                  (32,
                    Variable
                      (32,
                        OCaml.List.fold_right2/-1),
                    [
                      Function
                        (32,
                          s,
                          Function
                            (32,
                              x,
                              Function
                                (32,
                                  y,
                                  Apply
                                    (32,
                                      Variable
                                        (32,
                                          Z.add/1),
                                      [
                                        Apply
                                          (32,
                                            Variable
                                              (32,
                                                Z.add/1),
                                            [
                                              Variable
                                                (32,
                                                  s/0);
                                              Variable
                                                (32,
                                                  x/0)
                                            ]);
                                        Variable
                                          (32,
                                            y/0)
                                      ]))));
                      Variable
                        (32,
                          l2/0);
                      Variable
                        (32,
                          l2/0);
                      Constant
                        (32,
                          Int(0))
                    ]))
            ]))
    ])

35
Value
  (non_rec, @.,
    [
      ((all, [ ], [ ], Type (bool/1)),
        Apply
          (35, Variable (35, OCaml.List.for_all/-1),
            [
              Function
                (35, x,
                  Apply
                    (35,
                      Variable
                        (35,
                          equiv_decb/1),
                      [
                        Variable
                          (35,
                            x/0);
                        Constant
                          (35,
                            Int(2))
                      ]));
              Variable (35, l2/0)
            ]))
    ])

36
Value
  (non_rec, @.,
    [
      ((ex, [ ], [ ], Type (bool/1)),
        Apply
          (36, Variable (36, OCaml.List._exists/-1),
            [
              Function
                (36, x,
                  Apply
                    (36,
                      Variable
                        (36,
                          equiv_decb/1),
                      [
                        Variable
                          (36,
                            x/0);
                        Constant
                          (36,
                            Int(2))
                      ]));
              Variable (36, l2/0)
            ]))
    ])

37
Value
  (non_rec, @.,
    [
      ((all2, [ A ], [ (x_1, A) ], Type (bool/1)),
        Match
          (?, Variable (?, x_1/0),
            [
              (Any,
                Apply
                  (37,
                    Variable
                      (37,
                        OCaml.List.for_all2/-1),
                    [
                      Function
                        (37,
                          x,
                          Function
                            (37,
                              y,
                              Apply
                                (37,
                                  Variable
                                    (37,
                                      equiv_decb/1),
                                  [
                                    Variable
                                      (37,
                                        x/0);
                                    Variable
                                      (37,
                                        y/0)
                                  ])));
                      Variable
                        (37,
                          l2/0);
                      Variable
                        (37,
                          l2/0)
                    ]))
            ]))
    ])

38
Value
  (non_rec, @.,
    [
      ((ex2, [ A ], [ (x_1, A) ], Type (bool/1)),
        Match
          (?, Variable (?, x_1/0),
            [
              (Any,
                Apply
                  (38,
                    Variable
                      (38,
                        OCaml.List._exists2/-1),
                    [
                      Function
                        (38,
                          x,
                          Function
                            (38,
                              y,
                              Apply
                                (38,
                                  Variable
                                    (38,
                                      equiv_decb/1),
                                  [
                                    Variable
                                      (38,
                                        x/0);
                                    Variable
                                      (38,
                                        y/0)
                                  ])));
                      Variable
                        (38,
                          l2/0);
                      Variable
                        (38,
                          l2/0)
                    ]))
            ]))
    ])

39
Value
  (non_rec, @.,
    [
      ((me, [ ], [ ], Type (bool/1)),
        Apply
          (39, Variable (39, OCaml.List.mem/-1),
            [ Constant (39, Int(2)); Variable (39, l2/0) ]))
    ])

43
Value
  (non_rec, @.,
    [
      ((fin, [ A ], [ (x_1, A) ], Type (Z/1)),
        Match
          (?, Variable (?, x_1/0),
            [
              (Any,
                Apply
                  (43,
                    Variable
                      (43,
                        OCaml.List.find/-1),
                    [
                      Function
                        (43,
                          x,
                          Apply
                            (43,
                              Variable
                                (43,
                                  equiv_decb/1),
                              [
                                Variable
                                  (43,
                                    x/0);
                                Constant
                                  (43,
                                    Int(1))
                              ]));
                      Variable
                        (43,
                          l2/0)
                    ]))
            ]))
    ])

44
Value
  (non_rec, @.,
    [
      ((fil, [ ], [ ], Type (list/1, Type (Z/1))),
        Apply
          (44, Variable (44, OCaml.List.filter/-1),
            [
              Function
                (44, x,
                  Apply
                    (44,
                      Variable
                        (44,
                          OCaml.Pervasives.ge/1),
                      [
                        Variable
                          (44,
                            x/0);
                        Constant
                          (44,
                            Int(2))
                      ]));
              Variable (44, l2/0)
            ]))
    ])

45
Value
  (non_rec, @.,
    [
      ((fina, [ ], [ ], Type (list/1, Type (Z/1))),
        Apply
          (45, Variable (45, OCaml.List.find_all/-1),
            [
              Function
                (45, x,
                  Apply
                    (45,
                      Variable
                        (45,
                          OCaml.Pervasives.ge/1),
                      [
                        Variable
                          (45,
                            x/0);
                        Constant
                          (45,
                            Int(2))
                      ]));
              Variable (45, l2/0)
            ]))
    ])

46
Value
  (non_rec, @.,
    [
      ((par, [ ], [ ], (Type (list/1, Type (Z/1)) * Type (list/1, Type (Z/1)))),
        Apply
          (46, Variable (46, OCaml.List.partition/-1),
            [
              Function
                (46, x,
                  Apply
                    (46,
                      Variable
                        (46,
                          OCaml.Pervasives.gt/1),
                      [
                        Variable
                          (46,
                            x/0);
                        Constant
                          (46,
                            Int(2))
                      ]));
              Variable (46, l2/0)
            ]))
    ])

49
Value
  (non_rec, @.,
    [
      ((asso, [ A ], [ (x_1, A) ], Type (string/1)),
        Match
          (?, Variable (?, x_1/0),
            [
              (Any,
                Apply
                  (49,
                    Variable
                      (49,
                        OCaml.List.assoc/-1),
                    [
                      Constant
                        (49,
                          Int(2));
                      Variable
                        (49,
                          l3/0)
                    ]))
            ]))
    ])

51
Value
  (non_rec, @.,
    [
      ((masso, [ A ], [ (x_1, A) ], Type (bool/1)),
        Match
          (?, Variable (?, x_1/0),
            [
              (Any,
                Apply
                  (51,
                    Variable
                      (51,
                        OCaml.List.mem_assoc/-1),
                    [
                      Constant
                        (51,
                          Int(2));
                      Variable
                        (51,
                          l3/0)
                    ]))
            ]))
    ])

53
Value
  (non_rec, @.,
    [
      ((rasso, [ A ], [ (x_1, A) ],
        Type (list/1, (Type (Z/1) * Type (string/1)))),
        Match
          (?, Variable (?, x_1/0),
            [
              (Any,
                Apply
                  (53,
                    Variable
                      (53,
                        OCaml.List.remove_assoc/-1),
                    [
                      Constant
                        (53,
                          Int(2));
                      Variable
                        (53,
                          l3/0)
                    ]))
            ]))
    ])

57
Value
  (non_rec, @.,
    [
      ((sp, [ ], [ ],
        (Type (list/1, Type (Z/1)) * Type (list/1, Type (string/1)))),
        Apply
          (57, Variable (57, OCaml.List.split/-1), [ Variable (57, l3/0) ]))
    ])

58
Value
  (non_rec, @.,
    [
      ((com, [ A ], [ (x_1, A) ], Type (list/1, (Type (Z/1) * Type (Z/1)))),
        Match
          (?, Variable (?, x_1/0),
            [
              (Any,
                Apply
                  (58,
                    Variable
                      (58,
                        OCaml.List.combine/-1),
                    [
                      Variable
                        (58,
                          l2/0);
                      Variable
                        (58,
                          l2/0)
                    ]))
            ]))
    ])

61
Value
  (non_rec, @.,
    [
      ((so, [ A ], [ (x_1, A) ], Type (list/1, Type (Z/1))),
        Match
          (?, Variable (?, x_1/0),
            [
              (Any,
                Apply
                  (61,
                    Variable
                      (61,
                        OCaml.List.sort/-1),
                    [
                      Function
                        (61,
                          x,
                          Function
                            (61,
                              y,
                              Apply
                                (61,
                                  Variable
                                    (61,
                                      Z.sub/1),
                                  [
                                    Variable
                                      (61,
                                        y/0);
                                    Variable
                                      (61,
                                        x/0)
                                  ])));
                      Variable
                        (61,
                          l2/0)
                    ]))
            ]))
    ])

62
Value
  (non_rec, @.,
    [
      ((sso, [ A ], [ (x_1, A) ], Type (list/1, Type (Z/1))),
        Match
          (?, Variable (?, x_1/0),
            [
              (Any,
                Apply
                  (62,
                    Variable
                      (62,
                        OCaml.List.stable_sort/-1),
                    [
                      Function
                        (62,
                          x,
                          Function
                            (62,
                              y,
                              Apply
                                (62,
                                  Variable
                                    (62,
                                      Z.sub/1),
                                  [
                                    Variable
                                      (62,
                                        y/0);
                                    Variable
                                      (62,
                                        x/0)
                                  ])));
                      Variable
                        (62,
                          l2/0)
                    ]))
            ]))
    ])

63
Value
  (non_rec, @.,
    [
      ((fso, [ A ], [ (x_1, A) ], Type (list/1, Type (Z/1))),
        Match
          (?, Variable (?, x_1/0),
            [
              (Any,
                Apply
                  (63,
                    Variable
                      (63,
                        OCaml.List.fast_sort/-1),
                    [
                      Function
                        (63,
                          x,
                          Function
                            (63,
                              y,
                              Apply
                                (63,
                                  Variable
                                    (63,
                                      Z.sub/1),
                                  [
                                    Variable
                                      (63,
                                        y/0);
                                    Variable
                                      (63,
                                        x/0)
                                  ])));
                      Variable
                        (63,
                          l2/0)
                    ]))
            ]))
    ])

64
Value
  (non_rec, @.,
    [
      ((mer, [ ], [ ], Type (list/1, Type (Z/1))),
        Apply
          (64, Variable (64, OCaml.List.merge/-1),
            [
              Function
                (64, x,
                  Function
                    (64,
                      y,
                      Apply
                        (64,
                          Variable
                            (64,
                              Z.sub/1),
                          [
                            Variable
                              (64,
                                y/0);
                            Variable
                              (64,
                                x/0)
                          ])));
              Variable (64, l2/0);
              Constructor
                (64, cons/1, Constant (64, Int(2)),
                  Constructor
                    (64,
                      cons/1,
                      Constant
                        (64,
                          Int(-1)),
                      Constructor
                        (64,
                          cons/1,
                          Constant
                            (64,
                              Int(5)),
                          Constructor
                            (64,
                              []/1))))
            ]))
    ])
