1 Reference (r, r_state, Type (Z), Constant (1, Int(12)))

3
Value
  (non_rec, @.,
    [
      ((plus_one, [ A ], [ (x, A) ],
        Monad ([ (OCaml.Effect.State.state, Z); r_state ], Type (Z))),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Bind
                  (?,
                    Bind
                      (?,
                        Bind
                          (?,
                            Lift
                              (?,
                                [
                                  (OCaml.Effect.State.state,
                                    Z)
                                ],
                                [
                                  (OCaml.Effect.State.state,
                                    Z);
                                  r_state
                                ],
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        OCaml.Effect.State.peekstate),
                                    [
                                      Tuple
                                        (?)
                                    ])),
                            Some
                              x_1,
                            Lift
                              (?,
                                [
                                  r_state
                                ],
                                [
                                  (OCaml.Effect.State.state,
                                    Z);
                                  r_state
                                ],
                                Apply
                                  (?,
                                    Variable
                                      (?,
                                        OCaml.Effect.State.global),
                                    [
                                      Variable
                                        (4,
                                          r);
                                      Variable
                                        (?,
                                          x_1)
                                    ]))),
                        Some
                          x_1,
                        Lift
                          (?,
                            [
                              (OCaml.Effect.State.state,
                                Z)
                            ],
                            [
                              (OCaml.Effect.State.state,
                                Z);
                              r_state
                            ],
                            Apply
                              (4,
                                Variable
                                  (4,
                                    OCaml.Effect.State.read),
                                [
                                  Variable
                                    (?,
                                      x_1)
                                ]))),
                    Some
                      x_1,
                    Return
                      (?,
                        Apply
                          (4,
                            Variable
                              (4,
                                Z.add),
                            [
                              Variable
                                (?,
                                  x_1);
                              Constant
                                (4,
                                  Int(1))
                            ]))))
            ]))
    ])

6 Reference (s, s_state, Type (string), Constant (6, String("Hi")))

8
Value
  (non_rec, @.,
    [
      ((fail, [ A; B ], [ (x, A) ],
        Monad
          ([ (OCaml.Effect.State.state, string); s_state; OCaml.Failure ], B)),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Bind
                  (?,
                    Lift
                      (?,
                        [
                          (OCaml.Effect.State.state,
                            string);
                          s_state
                        ],
                        [
                          (OCaml.Effect.State.state,
                            string);
                          s_state;
                          OCaml.Failure
                        ],
                        Bind
                          (?,
                            Bind
                              (?,
                                Lift
                                  (?,
                                    [
                                      (OCaml.Effect.State.state,
                                        string)
                                    ],
                                    [
                                      (OCaml.Effect.State.state,
                                        string);
                                      s_state
                                    ],
                                    Apply
                                      (?,
                                        Variable
                                          (?,
                                            OCaml.Effect.State.peekstate),
                                        [
                                          Tuple
                                            (?)
                                        ])),
                                Some
                                  x_1,
                                Lift
                                  (?,
                                    [
                                      s_state
                                    ],
                                    [
                                      (OCaml.Effect.State.state,
                                        string);
                                      s_state
                                    ],
                                    Apply
                                      (?,
                                        Variable
                                          (?,
                                            OCaml.Effect.State.global),
                                        [
                                          Variable
                                            (8,
                                              s);
                                          Variable
                                            (?,
                                              x_1)
                                        ]))),
                            Some
                              x_1,
                            Lift
                              (?,
                                [
                                  (OCaml.Effect.State.state,
                                    string)
                                ],
                                [
                                  (OCaml.Effect.State.state,
                                    string);
                                  s_state
                                ],
                                Apply
                                  (8,
                                    Variable
                                      (8,
                                        OCaml.Effect.State.read),
                                    [
                                      Variable
                                        (?,
                                          x_1)
                                    ])))),
                    Some
                      x_1,
                    Lift
                      (?,
                        [
                          OCaml.Failure
                        ],
                        [
                          (OCaml.Effect.State.state,
                            string);
                          s_state;
                          OCaml.Failure
                        ],
                        Apply
                          (8,
                            Variable
                              (8,
                                OCaml.Pervasives.failwith),
                            [
                              Variable
                                (?,
                                  x_1)
                            ]))))
            ]))
    ])

10
Value
  (non_rec, @.,
    [
      ((reset, [ A ], [ (x, A) ],
        Monad ([ (OCaml.Effect.State.state, Z); r_state ], Type (unit))),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Bind
                  (?,
                    Bind
                      (?,
                        Lift
                          (?,
                            [
                              (OCaml.Effect.State.state,
                                Z)
                            ],
                            [
                              (OCaml.Effect.State.state,
                                Z);
                              r_state
                            ],
                            Apply
                              (?,
                                Variable
                                  (?,
                                    OCaml.Effect.State.peekstate),
                                [
                                  Tuple
                                    (?)
                                ])),
                        Some
                          x_1,
                        Lift
                          (?,
                            [
                              r_state
                            ],
                            [
                              (OCaml.Effect.State.state,
                                Z);
                              r_state
                            ],
                            Apply
                              (?,
                                Variable
                                  (?,
                                    OCaml.Effect.State.global),
                                [
                                  Variable
                                    (11,
                                      r);
                                  Variable
                                    (?,
                                      x_1)
                                ]))),
                    Some
                      x_1,
                    Lift
                      (?,
                        [
                          (OCaml.Effect.State.state,
                            Z)
                        ],
                        [
                          (OCaml.Effect.State.state,
                            Z);
                          r_state
                        ],
                        Apply
                          (11,
                            Variable
                              (11,
                                OCaml.Effect.State.write),
                            [
                              Variable
                                (?,
                                  x_1);
                              Constant
                                (11,
                                  Int(0))
                            ]))))
            ]))
    ])

13
Value
  (non_rec, @.,
    [
      ((incr, [ A ], [ (x, A) ],
        Monad ([ (OCaml.Effect.State.state, Z); r_state ], Type (unit))),
        Match
          (?, Variable (?, x),
            [
              (Any,
                Bind
                  (?,
                    Bind
                      (?,
                        Lift
                          (?,
                            [
                              (OCaml.Effect.State.state,
                                Z)
                            ],
                            [
                              (OCaml.Effect.State.state,
                                Z);
                              r_state
                            ],
                            Apply
                              (?,
                                Variable
                                  (?,
                                    OCaml.Effect.State.peekstate),
                                [
                                  Tuple
                                    (?)
                                ])),
                        Some
                          x_1,
                        Lift
                          (?,
                            [
                              r_state
                            ],
                            [
                              (OCaml.Effect.State.state,
                                Z);
                              r_state
                            ],
                            Apply
                              (?,
                                Variable
                                  (?,
                                    OCaml.Effect.State.global),
                                [
                                  Variable
                                    (14,
                                      r);
                                  Variable
                                    (?,
                                      x_1)
                                ]))),
                    Some
                      x_1,
                    Bind
                      (?,
                        Bind
                          (?,
                            Bind
                              (?,
                                Bind
                                  (?,
                                    Lift
                                      (?,
                                        [
                                          (OCaml.Effect.State.state,
                                            Z)
                                        ],
                                        [
                                          (OCaml.Effect.State.state,
                                            Z);
                                          r_state
                                        ],
                                        Apply
                                          (?,
                                            Variable
                                              (?,
                                                OCaml.Effect.State.peekstate),
                                            [
                                              Tuple
                                                (?)
                                            ])),
                                    Some
                                      x_2,
                                    Lift
                                      (?,
                                        [
                                          r_state
                                        ],
                                        [
                                          (OCaml.Effect.State.state,
                                            Z);
                                          r_state
                                        ],
                                        Apply
                                          (?,
                                            Variable
                                              (?,
                                                OCaml.Effect.State.global),
                                            [
                                              Variable
                                                (14,
                                                  r);
                                              Variable
                                                (?,
                                                  x_2)
                                            ]))),
                                Some
                                  x_2,
                                Lift
                                  (?,
                                    [
                                      (OCaml.Effect.State.state,
                                        Z)
                                    ],
                                    [
                                      (OCaml.Effect.State.state,
                                        Z);
                                      r_state
                                    ],
                                    Apply
                                      (14,
                                        Variable
                                          (14,
                                            OCaml.Effect.State.read),
                                        [
                                          Variable
                                            (?,
                                              x_2)
                                        ]))),
                            Some
                              x_2,
                            Return
                              (?,
                                Apply
                                  (14,
                                    Variable
                                      (14,
                                        Z.add),
                                    [
                                      Variable
                                        (?,
                                          x_2);
                                      Constant
                                        (14,
                                          Int(1))
                                    ]))),
                        Some
                          x_2,
                        Lift
                          (?,
                            [
                              (OCaml.Effect.State.state,
                                Z)
                            ],
                            [
                              (OCaml.Effect.State.state,
                                Z);
                              r_state
                            ],
                            Apply
                              (14,
                                Variable
                                  (14,
                                    OCaml.Effect.State.write),
                                [
                                  Variable
                                    (?,
                                      x_1);
                                  Variable
                                    (?,
                                      x_2)
                                ])))))
            ]))
    ])
